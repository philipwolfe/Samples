<!--BEGIN HEADER-->
<html>
<head>
<link rel="stylesheet" href="../../include/qsstyle.css">
</head>
<body topmargin="0" leftmargin="0" marginwidth="0" marginheight="0" >

<table class="outer" cellpadding=0 cellspacing=0>
<tr>
<td class="toc" valign="top" width="210">
  <table>
<tr>
<td nowrap style="padding-right:15">

<div class="toc" style="font-size:8pt;color:darkred;">

            <div style="padding:0,0,4,0"><b>Getting Started</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/quickstart.htm">Introduction</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/whatisaspx.htm">What is ASP.NET?</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/langsupport.htm">Language Support</a><p>

            <div style="padding:0,0,4,0"><b>ASP.NET Web Forms</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/webformsintro.htm">Introducing Web Forms</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webserverctrls.htm">Working with Server Controls</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webtemplates.htm">Applying Styles to Controls</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webvalidation.htm">Server Control Form Validation</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webpagelets.htm">Web Forms User Controls</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webdatabinding.htm">Databinding Server Controls</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webdataaccess.htm">Server-Side Data Access</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webdatalist.htm">Data Access and Customization</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/businessobjs.htm">Working with Business Objects</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webctrlauthoring.htm">Authoring Custom Controls</a><br>
<!--            &nbsp; <a class="outer" href="../../aspplus/doc/webformsandvs7.htm">Visual Studio 7.0 & Web Forms</a><br> -->
            &nbsp; <a class="outer" href="../../aspplus/doc/webcontrolsref.htm">Web Forms Controls Reference</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webformssyntaxref.htm">Web Forms Syntax Reference</a><p>

            <div style="padding:0,0,4,0"><b>ASP.NET Web Services</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/webservicesintro.htm">Introducing Web Services</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/writingservices.htm">Writing a Simple Web Service</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webservicetypes.htm">Web Service Type Marshalling</a><br>
<!--            &nbsp; <a class="outer" href="../../aspplus/doc/discoverservices.htm">Making Services Discoverable</a><br> -->
            &nbsp; <a class="outer" href="../../aspplus/doc/servicesanddata.htm">Using Data in Web Services</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/servicesandobjs.htm">Using Objects and Intrinsics</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/htmlscraping.htm">HTML Pattern Matching</a><p>

            <div style="padding:0,0,4,0"><b>ASP.NET Web Applications</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/applications.htm">Application Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/globalasax.htm">Using the Global.asax File</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/stateoverview.htm">Managing Application State</a><br>
<!--            &nbsp; <a class="outer" href="../../aspplus/doc/httpmodules.htm">Handling HttpModule Events</a><br> -->
            &nbsp; <a class="outer" href="../../aspplus/doc/httphandlers.htm">HttpHandlers and Factories</a><p>

<!--
            <div style="padding:0,0,4,0"><b>State Management</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/stateoverview.htm">State Management Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/pageviewstate.htm">Using Page-local View State</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/sessionappstate.htm">Session and Application State</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/usingcookies.htm">Using Client-side Cookies</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/choosingstate.htm">Choosing a Strategy</a><p>
-->
            <div style="padding:0,0,4,0"><b>Cache Services</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/cachingoverview.htm">Caching Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/outputcaching.htm">Page Output Caching</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/datacaching.htm">Page Data Caching</a><p>

            <div style="padding:0,0,4,0"><b>Configuration</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/configoverview.htm">Configuration Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/configformat.htm">Configuration File Format</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/configretrieve.htm">Retrieving Configuration</a><p>

            <div style="padding:0,0,4,0"><b>Deployment</b><br></div>
<!--            &nbsp; <a class="outer" href="../../aspplus/doc/adminoverview.htm">Administration Overview</a><br> -->
            &nbsp; <a class="outer" href="../../aspplus/doc/deployment.htm">Deploying ASP.NET Applications</a><p>

            <div style="padding:0,0,4,0"><b>Security</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/securityoverview.htm">Security Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/authandauth.htm">Authentication & Authorization</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/windowsauth.htm">Windows-based Authentication</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/formsauth.htm">Forms-based Authentication</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/authorization.htm">Authorizing Users and Roles</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/impersonation.htm">User Account Impersonation</a><p>

            <div style="padding:0,0,4,0"><b>Localization</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/internationalization.htm">Internationalization Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/cultureencoding.htm">Setting Culture and Encoding</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/localizingapps.htm">Localizing ASP.NET Applications</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/resourcefiles.htm">Working with Resource Files</a><p>

            <div style="padding:0,0,4,0"><b>Tracing</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/tracingoverview.htm">Tracing Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/tracelogpage.htm">Trace Logging to Page Output</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/tracelogapp.htm">Application-level Trace Logging</a><p>

            <div style="padding:0,0,4,0"><b>Debugging</b><br></div>
<!--
            &nbsp; <a class="outer" href="../../aspplus/doc/debuggingoverview.htm">Debugging Overview</a><br>
-->
            &nbsp; <a class="outer" href="../../aspplus/doc/debugcomsdk.htm">The SDK Debugger</a><p>
<!--
            &nbsp; <a class="outer" href="../../aspplus/doc/debugvisualstudio.htm">The Visual Studio 7 Debugger</a><p>
-->

<!--
            <div style="padding:0,0,4,0"><b>Performance</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/perfoverview.htm">Performance Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/perfcounters.htm">Using Performance Counters</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/perftuning.htm">Performance Tuning Tips</a><p>

            <div style="padding:0,0,4,0"><b>ASP to ASP.NET Migration</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/migrationoverview.htm">Migration Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/syntaxandsemantics.htm">Syntax and Semantics</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/languagecompat.htm">Language Compatibility</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/cominterop.htm">COM Interoperability</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/mtstransactions.htm">MTS Transactions</a><p>
-->
            <div style="padding:0,0,4,0"><b>Sample Applications</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/portalapp.htm">A Personalized Portal</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/ecommerceapp.htm">An E-Commerce Storefront</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/classbrowser.htm">A Class Browser Application</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/ibuyspy.htm">IBuySpy.com</a><p>

</div>

</td>
</tr>
</table>
</td>
<td valign="top">
<div class="body">
<!--END HEADER-->

<h4>Deploying ASP.NET Applications</h4>

<div class="indent" style="font-family:Verdana; font-size:8pt;">
    <b> <img align="middle" src="../../images/bullet.gif">&nbsp;&nbsp;</b>
    <a class="toc2" href="#fslayout">File System Layout of ASP.NET Applications</a><br>
    <b> <img align="middle" src="../../images/bullet.gif">&nbsp;&nbsp;</b>
    <a class="toc2" href="#resolvingassemblies">Resolving Class References to Assemblies</a><br>
    <b> <img align="middle" src="../../images/bullet.gif">&nbsp;&nbsp;</b>
    <a class="toc2" href="#startup">ASP.NET Application Startup and Class Resolution</a><br>
    <b> <img align="middle" src="../../images/bullet.gif">&nbsp;&nbsp;</b>
    <a class="toc2" href="#codereplacement">Code Replacement</a><br>
</div>


<p>
<hr>



<!--BEGIN SUB SECTION-->
<a name="fslayout">
<span class="subhead">File System Layout of ASP.NET Applications</span>
<p>
ASP.NET can be used to host multiple web applications - each identified using a unique
URL prefix within a web site (where a "web site" is represented on a webserver as a
unique HostName/Port combination). For example, a single Microsoft Internet Information 
Server (IIS) web server with two mapped IP addresses (one aliased to "www.msn.com" and
the other to "intranet") and three logical sites (http://intranet, http://www.msn.com,
http://ww.msn.com port 81) could expose the following six ASP.NET Applications:
<p>
<div class="indent">
<table class="table2" cellpadding="3" width="450">
<tr>	<th>Application URL</th>	
        <th>Description</th></tr>
<tr>	<td>http://intranet</td>	
        <td>"Root" application on intranet site</td></tr>
<tr>	<td>http://www.msn.com</td>	
        <td>"Root" application on www.msn.com site</td></tr>
<tr>	<td>http://www.msn.com:81</td>	
        <td>"Root" application on www.msn.com port 81 site</td></tr>
<tr>	<td>http://intranet/training</td>	
        <td>"Training" application on intranet site</td></tr>
<tr>	<td>http://intranet/hr</td>	
        <td>"HR" application on intranet site</td></tr>
<tr>	<td>http://intranet/hr/compensation/</td>	
        <td>"Compensation" application on intranet site</td></tr>
</table>
</div>
<p>

<b>Note:</b> The URL for the "Compensation Application" above is rooted within the
"HR Application" URL namespace.  This URL hierarchy notation does not imply that the
"Compensation App" is contained or nested within the "HR Application".  Each application
instead maintains an independent set of configuration and class-resolution properties 
- both are logical peer children of the "intranet" site.

<p>
Each ASP.NET application exposed within a URL namespace is backed using a file system
directory located on either a local or remote file share.  There is no requirement
for application directories to be centrally located within a contiguous part of the
file system (they can be scattered throughout a disk). For example, the ASP.NET Application 
listed above could be located in the following different directories:
<p>

<div class="indent">
<table class="table2" cellpadding="3" width="450">
<tr>  <th>Application URL</th>
      <th>Physical Path</th></tr>
<tr>  <td>http://intranet</td>
      <td>c:\inetpub\wwwroot</td></tr>
<tr>  <td>http://www.msn.com</td>
      <td>c:\inetpub\msnroot</td></tr>
<tr>  <td>http://www.msn.com:81</td>
      <td>d:\msnroot81</td></tr>
<tr>  <td>http://intranet/training</td>
      <td>d:\serverapps\trainingapp</td></tr>
<tr>  <td>http://intranet/hr</td>
      <td>\\billg42\sillystuff\reviews</td></tr>
<tr>  <td>http://intranet/hr/compensation/</td>
      <td>c:\inetpub\wwwroot\compensation</td></tr>
</table>
</div>



<!--BEGIN SUB SECTION-->
<br>
<a name="resolvingassemblies">
<br>
<span class="subhead">Resolving Class References to Assemblies</span>
<p>
Assemblies are the unit of class deployment in the Common Language Runtime. Developers writing
.NET Framework classes using Visual Studio 7.0 will produce a new assembly with each
Visual Studio project they compile.  Although it is possible to have an assembly
span multiple Portable Executable (PE) files (ie: several module DLLs), 
Microsoft Visual Studio version 7.0 (VS7) will by default 
compile all assembly code into a single DLL (1 VS7 Project = 1 .Net Framework Assembly = 1 Physical DLL).

<p>
An assembly can be used on a computer by deploying it into an assembly cache.
The assembly cache can either be global to a computer or local to a particular
application. It is expected that only code intended to be shared across multiple
applications will be placed in the global system assembly cache. Code specific
to a particular application (for example: most web application logic) will most
likely be deployed in the application's local assembly cache. One nice advantage
of deploying an assembly within an application's local assembly cache is that only
code within that application can access it (a nice feature for scenarios involving
ISPs). It also facilitates side-by-side versioning of the same application (since
classes are private to each application version instance).
<p>
An assembly can be deployed into an  application's local assembly cache by simply copying,
xcopying, or FTPing the the appropriate file(s) into a directory that has been marked as an 
"assembly cache location" for that particular application. No additional registration
utility needs to be run once the appropriate files are copied and no reboot is necessary. 
This removes the headaches required today to deploy classic COM components within ASP applications
(an administrator currently has to log onto the web server locally and run regsrv32).
<p>
By default, an ASP.NET application is automatically configured to use the "bin" sub-directory
located immediately under the application root as its local assembly cache. The bin directory
is also configured to deny any browser access - so that a remote client cannot download
and steal the code.  For example, the following might be the directory layout for an ASP.NET application,
where the /bin directory is immediately under the application root:

<div class="code"><xmp>
C:\inetpub\wwwroot
   Web.cfg
   Default.htm

   \bin                  <= Application Assembly Cache Directory
      MyPages.dll
      MyBizLogic.dll

   \order
      SubmitOrder.htm
      OrderFailed.htm

      \img
         HappyFace.gif
</xmp></div>


<!--BEGIN SUB SECTION-->
<a name="startup">
<span class="subhead">ASP.NET Application Startup and Class Resolution</span>
<p>
ASP.NET Applications are lazily constructed the first time a client requests a URL
resource from them. Each ASP.NET Application is launched within a unique Application
Domain (AppDomain) - a new Common Language Runtime construct that enables process hosts to provide extensive 
code/security/configuration isolation at runtime.
<p>
ASP.NET is responsible for manually creating an application-domain when a new application
is started. As part of this process, ASP.NET provides configuration settings for the Common Language Runtime
to use. These include:
<ul>
<li>The directory paths that makeup the local assembly cache (Note: it is the .NET Framework 
Application-Domain isolation architecture that allows each application to maintain its
own local assembly cache).
<li>The security restrictions of the application (what can the application access on the system).
</ul>
<p>

Because ASP.NET does not have any compile-time knowledge of the applications developers will
write on top of it, it cannot utilize static references to resolve and reference application code.
Instead, ASP.NET must utilize a dynamic class/assembly resolution approach to make the "initial hop"
from the ASP.NET Runtime into application code.  
<p>
ASP.NET configuration and page activation files will enable developers to dynamically reference 
a target compiled .NET Framework class to run by specifying an assembly and class name combination.  
The string format for this union follows the pattern: 
<p>
<div class="code">classname, assemblyname</div>
<p>
The Common Language Runtime can then use this simple string reference to resolve and load the appropriate class.



<!--BEGIN SUB SECTION-->
<br>
<a name="codereplacement">
<br>
<span class="subhead">Code Replacement</span>
<p>
.Net Framework assemblies are typically compiled and deployed into a Windows DLL-based
PE format. When the Common Language Runtime's loader resolves a class implemented within this type
of assembly, it calls the Windows LoadLibrary routine on the file (which locks
its access on disk), and then maps the appropriate code data into memory for
runtime execution. Once loaded, the DLL file will remain locked on disk until
the Application-Domain referencing it is either torn-down or manually recycled.

<p>
Although ASP.NET cannot prevent the Common Language Runtime from locking a loaded assembly DLL on disk, 
it can support developers by ensuring that the physical DLLs
they place into an web application's private assembly cache are never actually
loaded by the runtime. Instead, shadow copies of the assembly DLLs are made immediately
prior to their use. These shadow assemblies - and not the original files - are then
locked and loaded by the runtime.  

<p>
Because the original assembly files always remain unlocked, developers and 
administrators are free to delete/replace/rename them without cycling the web server
or having to use a special tool. FTP and similar methods work just fine. ASP.NET maintains an
active list of all assemblies loaded within a particular application's application domain
and uses file-change monitoring code to watch for any updates to the original files. 



<h4>Section Summary</h4>
<ol>
<li>ASP.NET applications are identified by a unique URL and live in the file system of
the web server.
<li>ASP.NET can use shared assemblies, which reside in the global cache, and 
application-specific assemblies, which reside in the "bin" directory of the application's
virtual root.
<li>ASP.NET applications run in the context of AppDomains, which provide isolation and 
enforcement of security restrictions.
<li>Classes can be dynamically referenced via "classname, assemblyname".
<li>ASP.NET uses shadow-copies of assembly files to avoid locking and monitors the files,
so that changes are picked up immediately.
</ol>
<p>


<!--END FOOTER-->
<p>
<hr>
<p>
</div>
</td>
</tr>
</table>
</BODY>
</html>
<!--END FOOTER--><!--END FOOTER-->
<p>
<hr>
<p>
</div>
</td>
</tr>
</table>
</BODY>
</html>
<!--END FOOTER-->