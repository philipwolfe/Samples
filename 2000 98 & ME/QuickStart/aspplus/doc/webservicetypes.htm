

<!--BEGIN HEADER-->
<html>
<head>
<link rel="stylesheet" href="../../include/qsstyle.css">
</head>
<body topmargin="0" leftmargin="0" marginwidth="0" marginheight="0" >

<table class="outer" cellpadding=0 cellspacing=0>
<tr>
<td class="toc" valign="top" width="210">
  <table>
<tr>
<td nowrap style="padding-right:15">

<div class="toc" style="font-size:8pt;color:darkred;">

            <div style="padding:0,0,4,0"><b>Getting Started</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/quickstart.htm">Introduction</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/whatisaspx.htm">What is ASP.NET?</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/langsupport.htm">Language Support</a><p>

            <div style="padding:0,0,4,0"><b>ASP.NET Web Forms</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/webformsintro.htm">Introducing Web Forms</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webserverctrls.htm">Working with Server Controls</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webtemplates.htm">Applying Styles to Controls</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webvalidation.htm">Server Control Form Validation</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webpagelets.htm">Web Forms User Controls</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webdatabinding.htm">Databinding Server Controls</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webdataaccess.htm">Server-Side Data Access</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webdatalist.htm">Data Access and Customization</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/businessobjs.htm">Working with Business Objects</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webctrlauthoring.htm">Authoring Custom Controls</a><br>
<!--            &nbsp; <a class="outer" href="../../aspplus/doc/webformsandvs7.htm">Visual Studio 7.0 & Web Forms</a><br> -->
            &nbsp; <a class="outer" href="../../aspplus/doc/webcontrolsref.htm">Web Forms Controls Reference</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webformssyntaxref.htm">Web Forms Syntax Reference</a><p>

            <div style="padding:0,0,4,0"><b>ASP.NET Web Services</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/webservicesintro.htm">Introducing Web Services</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/writingservices.htm">Writing a Simple Web Service</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/webservicetypes.htm">Web Service Type Marshalling</a><br>
<!--            &nbsp; <a class="outer" href="../../aspplus/doc/discoverservices.htm">Making Services Discoverable</a><br> -->
            &nbsp; <a class="outer" href="../../aspplus/doc/servicesanddata.htm">Using Data in Web Services</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/servicesandobjs.htm">Using Objects and Intrinsics</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/htmlscraping.htm">HTML Pattern Matching</a><p>

            <div style="padding:0,0,4,0"><b>ASP.NET Web Applications</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/applications.htm">Application Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/globalasax.htm">Using the Global.asax File</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/stateoverview.htm">Managing Application State</a><br>
<!--            &nbsp; <a class="outer" href="../../aspplus/doc/httpmodules.htm">Handling HttpModule Events</a><br> -->
            &nbsp; <a class="outer" href="../../aspplus/doc/httphandlers.htm">HttpHandlers and Factories</a><p>

<!--
            <div style="padding:0,0,4,0"><b>State Management</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/stateoverview.htm">State Management Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/pageviewstate.htm">Using Page-local View State</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/sessionappstate.htm">Session and Application State</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/usingcookies.htm">Using Client-side Cookies</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/choosingstate.htm">Choosing a Strategy</a><p>
-->
            <div style="padding:0,0,4,0"><b>Cache Services</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/cachingoverview.htm">Caching Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/outputcaching.htm">Page Output Caching</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/datacaching.htm">Page Data Caching</a><p>

            <div style="padding:0,0,4,0"><b>Configuration</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/configoverview.htm">Configuration Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/configformat.htm">Configuration File Format</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/configretrieve.htm">Retrieving Configuration</a><p>

            <div style="padding:0,0,4,0"><b>Deployment</b><br></div>
<!--            &nbsp; <a class="outer" href="../../aspplus/doc/adminoverview.htm">Administration Overview</a><br> -->
            &nbsp; <a class="outer" href="../../aspplus/doc/deployment.htm">Deploying ASP.NET Applications</a><p>

            <div style="padding:0,0,4,0"><b>Security</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/securityoverview.htm">Security Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/authandauth.htm">Authentication & Authorization</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/windowsauth.htm">Windows-based Authentication</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/formsauth.htm">Forms-based Authentication</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/authorization.htm">Authorizing Users and Roles</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/impersonation.htm">User Account Impersonation</a><p>

            <div style="padding:0,0,4,0"><b>Localization</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/internationalization.htm">Internationalization Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/cultureencoding.htm">Setting Culture and Encoding</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/localizingapps.htm">Localizing ASP.NET Applications</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/resourcefiles.htm">Working with Resource Files</a><p>

            <div style="padding:0,0,4,0"><b>Tracing</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/tracingoverview.htm">Tracing Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/tracelogpage.htm">Trace Logging to Page Output</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/tracelogapp.htm">Application-level Trace Logging</a><p>

            <div style="padding:0,0,4,0"><b>Debugging</b><br></div>
<!--
            &nbsp; <a class="outer" href="../../aspplus/doc/debuggingoverview.htm">Debugging Overview</a><br>
-->
            &nbsp; <a class="outer" href="../../aspplus/doc/debugcomsdk.htm">The SDK Debugger</a><p>
<!--
            &nbsp; <a class="outer" href="../../aspplus/doc/debugvisualstudio.htm">The Visual Studio 7 Debugger</a><p>
-->

<!--
            <div style="padding:0,0,4,0"><b>Performance</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/perfoverview.htm">Performance Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/perfcounters.htm">Using Performance Counters</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/perftuning.htm">Performance Tuning Tips</a><p>

            <div style="padding:0,0,4,0"><b>ASP to ASP.NET Migration</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/migrationoverview.htm">Migration Overview</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/syntaxandsemantics.htm">Syntax and Semantics</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/languagecompat.htm">Language Compatibility</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/cominterop.htm">COM Interoperability</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/mtstransactions.htm">MTS Transactions</a><p>
-->
            <div style="padding:0,0,4,0"><b>Sample Applications</b><br></div>
            &nbsp; <a class="outer" href="../../aspplus/doc/portalapp.htm">A Personalized Portal</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/ecommerceapp.htm">An E-Commerce Storefront</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/classbrowser.htm">A Class Browser Application</a><br>
            &nbsp; <a class="outer" href="../../aspplus/doc/ibuyspy.htm">IBuySpy.com</a><p>

</div>

</td>
</tr>
</table>
</td>
<td valign="top">
<div class="body">
<!--END HEADER-->

<h4>Web Service Type Marshalling</h4>
This section illustrates that various data types that can be passed to and returned by Web Service methods.  
Because the Web Services implementation is built on top of the XML Serialization architecture, it supports a significant number of data types.
The following table lists the supported data types for Web Service methods when using the SOAP protocol (e.g. using the proxy generated 
by WebServiceUtil.exe).
<p>

<div class="indent">
<table class="table2" cellpadding="3" width="90%">
</tr>
<tr><th width="180"><b>Type</b></th><th><b>Description</b></th></tr>
<tr><td><b>Primitive Types</b></td><td>Standard primitive types.  The complete list of supported primitives are
String, Int32, Byte, Boolean, Int16, Int64, Single, Double, Decimal, DateTime (as XML's timeInstant), DateTime (as XML's date), DateTime (as XML's time), and XmlQualifiedName (as XML's QName).
</td></tr>
<tr><td><b>Enum Types</b></td><td>Enumeration types, e.g. "public enum color { red=1, blue=2 }"</td></tr>
<tr><td><b>Arrays of Primitives, Enums</b></td><td>Arrays of the above primitives, such as string[] and int[]</td></tr>
<tr><td><b>Classes and Structs</b></td><td>Class and struct types with public fields or properties.  The public properties and fields are serialized.</td></tr>
<tr><td><b>Arrays of Classes (Structs)</b></td><td>Arrays of the above.</td></tr>
<tr><td><b>DataSet</b></td><td>ADO.NET DataSet Types (see the next section for an example).  DataSets can also appear as fields in structs or classes.
<p>
<b>Note:</b> Microsoft Visual Studio 7 & the XSD.EXE SDK utility have support for "strong-typing" a DataSet.  
These tools generate a class which inherits from DataSet to produce DataSet1, adding several methods/properties/etc that are specific 
to a particular XML schema.  If you pass DataSet, Web Services always transmits the schema along with the data 
(so it knows what tables & columns you are passing), and their types (e.g. int, string).  If you pass a subclass of DataSet 
(for example, DataSet1), Web Services assumes you are adding tables / columns in the constructor, and assumes that those 
tables/columns represent your schema.  In this case, it includes the schema in the SDL file, but is not passed every time you 
pass the DataSet instance.
</td></tr>
<tr><td><b>Arrays of DataSet</td><td>Arrays of the above.</b></td></tr>
<tr><td><b>XmlNode</b></td><td>
XmlNode is an in-memory representation of an XML fragment (like a lightweight XML document object model).  For example, 
"&lt;comment&gt;This is&lt;b&gt;pretty&lt;/b&gt; neat&lt;/comment&gt;" could be stored in an XmlNode.  You can pass 
XmlNodes as parameters, and they are added to the rest of the XML being passed to the Web Service (the other parameters) in a 
SOAP-compliant manner.   The same is true for return values.  This allows you to pass or return XML whose structure changes from 
call to call, or where you may not know all the types being passed.  XmlNode can also appear as fields in structs or classes.
</td></tr>
<tr><td><b>Arrays of XmlNode</b></td><td>Arrays of above.</td>
</table>
</div>
<p>

<div class="indent">
<b>Return values: </b><p>Whether calling a Web Service via SOAP or HTTP GET/POST all of the above types are supported for return values.  
<p>
<b>Parameters: </b><p>Both by-value and by-reference (in/out) parameters are supported when using the SOAP protocol.  By-reference parameters have the effect of sending the 
value both ways: up to the server, and back to the client.  When passing input parameters to a Web Service via HTTP GET/POST, only a 
limited set of data types are supported, and they must be by-value parameters.  The supported types for HTTP GET/POST parameters are listed below:
<p>
</div>

<div class="indent">
<table class="table2" width="90%">
</tr>
<tr><th width="180"><b>Type</b></th><th><b>Description</b></th></tr>
<tr><td><b>Primitive Types (limited)</b></td><td>Most standard primitive types.  The complete list of supported primitives are
Int32, String, Int16, Int64, Boolean, Single, Double, Decimal, DateTime, TimeSpan, UInt16, UInt32, UInt64, and Currency.
From the client's perspective, all these types turn into string.
</td></tr>
<tr><td><b>Enum Types</b></td><td>Enumeration types, e.g. "public enum color { red=1, blue=2 }". 
From the client's perspective, enums become classes with a static const string for each value.
</td></tr>
<tr><td><b>Arrays of Primitives, Enums</b></td><td>Arrays of the above primitives, such as string[] and int[]</td></tr>
</table>
</div>

<p>
The following example demonstrates the use of the types listed above, using a SOAP proxy generated from WebServiceUtil.exe.  Note 
that because there is more than one public class defined in the .asmx file, we must specify which is to be treated as the WebService 
class using the "Class" attribute of the WebService directive:
<p>

<div class="code"><pre>
&lt;%@ WebService Language=&quot;C#&quot; Class=&quot;DataTypes&quot; %&gt;
</pre></div>

<p>

<table>
<tr>
<td>
<span>
  
  



<div class="indent">



	<a target="_blank" href="../../aspplus/nowin9x.htm">
	<img style="border-color:black" border=1 src="../../aspplus/images/datatypes_asmx.gif"><br>
	</a>
	<div class="caption">DataTypes.asmx</div><br>
	
	
		[<a target="_blank" href="../../aspplus/nowin9x.htm">Run Sample</a>] | 
		[<a target="_blank" href="../../aspplus/samples/services/datatypes/datatypesasmxsource.htm">View Source</a>]
	
	
	</div>


  </span>
</td>
<td>
<span>
  
  



<div class="indent">



	<a target="_blank" href="../../aspplus/nowin9x.htm">
	<img style="border-color:black" border=1 src="../../aspplus/images/service_sdl.gif"><br>
	</a>
	<div class="caption">DataTypes.sdl</div><br>
	
	
		[<a target="_blank" href="../../aspplus/nowin9x.htm">View Sample</a>] 
	
	
	</div>


  </span>
</td>
</tr>
</table>

<p>

<UL>
<LI>The <B>SayHello</B> method shows returning a String from a service. 
<LI>The <B>SayHelloName</B> method returns a String, and also takes a String as a parameter.
<LI>The <B>GetIntArray</B> method shows how to return an array of integers.
<LI>The <B>GetMode</B> method returns an enum value.
<LI>The <B>GetOrder</B> method returns a class (which is almost the same as a struct here).
<LI>The <B>GetOrders</B> method returns an array of Order objects.
</UL>

<p>
Using the WebServiceUtil proxy generation tool, the marshalling of these data types is transparent to the consuming client application.  
A sample client application for the above Web Service follows:
<p>

<span>
  
  



<div class="indent">



	<a target="_blank" href="../../aspplus/nowin9x.htm">
	<img style="border-color:black" border=1 src="../../aspplus/images/datatypes_client.gif"><br>
	</a>
	<div class="caption">DataTypesClient.htm</div><br>
	
	
		[<a target="_blank" href="../../aspplus/nowin9x.htm">Run Sample</a>] | 
		[<a target="_blank" href="../../aspplus/samples/services/datatypes/datatypesclientaspxsource.htm">View Source</a>]
	
	
	</div>


  </span>

<!--END FOOTER-->
<p>
<hr>
<p>
</div>
</td>
</tr>
</table>
</BODY>
</html>
<!--END FOOTER-->