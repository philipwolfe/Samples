



    <link rel="stylesheet" href="../../../../../util/style.css">

    <form name="Form" method="post" action="srcview.htm?path=/QuickStart/aspplus/samples/webforms/ctrlauth/Templates/Repeater1.src&file=Repeater1.cs" id="Form">
<input type="hidden" name="__VIEWSTATE" value="YTB6MTQ3MzAyNjM4MF9hMHpfaHo1ejN4X2Ewel9oejV6MHhfYTB6aHppbm5lcmh0bWxfUmVwZWF0ZXIxLmNzeF9feHhfeHhfeF9feA==4c60b106" />


        <div class="SampleHeader" style="width:100%">
            <div class="SampleTitle">
                <span id="Title">Repeater1.cs</span>
            </div>
            <table id="SourceTable" style="font: 8pt Verdana">
    <tr>
        <td style="padding-right:10;"><b>C# Source: </b></td>
        <td><a href='../../../../../aspplus/samples/webforms/ctrlauth/templates/repeater1aspxsource.htm'>Repeater1.htm</a> &nbsp;&nbsp<a href='../../../../../aspplus/samples/webforms/ctrlauth/templates/repeater1cssource.htm'>Repeater1.cs</a> &nbsp;&nbsp<a href='../../../../../aspplus/samples/webforms/ctrlauth/templates/repeateritemcssource.htm'>RepeaterItem.cs</a> &nbsp;&nbsp<a href='../../../../../aspplus/samples/webforms/ctrlauth/templates/makesamplebatsource.htm'>makesample.bat</a> &nbsp;&nbsp</td>
    </tr>
    <tr>
        <td style="padding-right:10;"><b>VB Source: </b></td>
        <td><a href='../../../../../aspplus/samples/webforms/ctrlauth/templates/vb/repeater1aspxsource.htm'>VB/Repeater1.htm</a> &nbsp;&nbsp<a href='../../../../../aspplus/samples/webforms/ctrlauth/templates/vb/repeater1vbsource.htm'>VB/Repeater1.vb</a> &nbsp;&nbsp<a href='../../../../../aspplus/samples/webforms/ctrlauth/templates/vb/repeateritemvbsource.htm'>VB/RepeaterItem.vb</a> &nbsp;&nbsp<a href='../../../../../aspplus/samples/webforms/ctrlauth/templates/vb/makesamplebatsource.htm'>VB/makesample.bat</a> &nbsp;&nbsp</td>
    </tr>
</table>

        </div>

        <xmp>using System;
using System.Collections;
using System.Web;
using System.Web.UI;

namespace TemplateControlSamples {

    public class Repeater1 : Control, INamingContainer {

        private ITemplate   _itemTemplate   = null;      
        private ICollection _dataSource     = null;  

        public ICollection DataSource {
            get {
               return _dataSource;
            }
            set {
               _dataSource = value;
            }
        }

        [
            Template(typeof(RepeaterItem))
        ]
        public ITemplate ItemTemplate {
            get {
               return _itemTemplate;
            }
            set {
               _itemTemplate = value;
            }
        }

        // override to prevent literal controls from being added as children
        public override void AddParsedSubObject(object o) {
        }

        // override to create repeated items
        protected override void CreateChildControls() {
            object o = State["NumItems"];
            if (o != null) {
               // clear any existing child controls
               Controls.Clear();

               int numItems = (int)o;
               for (int i=0; i < numItems; i++) {
                  // create item
                  RepeaterItem item = new RepeaterItem(i, null);
                  // initialize item from template
                  ItemTemplate.Initialize(item);
                  // add item to the child controls collection
                  Controls.Add(item);
               }
            }
        }

        // override to create repeated items from DataSource
        protected override void OnDataBinding(EventArgs e) {

            if (DataSource != null) {
                // clear any existing child controls
                Controls.Clear();
                // clear any previous viewstate for existing child controls
                ClearChildViewState();

                // iterate DataSource creating a new item for each data item
                IEnumerator dataEnum = DataSource.GetEnumerator();
                int i = 0;
                while(dataEnum.MoveNext()) {

                    // create item
                    RepeaterItem item = new RepeaterItem(i, dataEnum.Current);
                    // initialize item from template
                    ItemTemplate.Initialize(item);
                    // add item to the child controls collection
                    Controls.Add(item);

                    i++;         
                }

                // prevent child controls from being created again
                ChildControlsCreated = true;
                // store the number of items created in viewstate for postback scenarios
                State["NumItems"] = i;
            }
        }    
    }
}
</xmp>
        <span id="ErrorMessage" style="color:red"></span>

    </form>
