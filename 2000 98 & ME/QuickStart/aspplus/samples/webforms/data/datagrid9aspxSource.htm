



    <link rel="stylesheet" href="../../../../util/style.css">

    <form name="Form" method="post" action="srcview.htm?path=/QuickStart/aspplus/samples/webforms/data/datagrid9.src&file=datagrid9.htm" id="Form">
<input type="hidden" name="__VIEWSTATE" value="YTB6MTQ3MzAyNjM4MF9hMHpfaHo1ejN4X2Ewel9oejV6MHhfYTB6aHppbm5lcmh0bWxfZGF0YWdyaWQ5LmFzcFx4eF9feHhfeHhfeF9feA==96c3d5dc" />


        <div class="SampleHeader" style="width:100%">
            <div class="SampleTitle">
                <span id="Title">datagrid9.htm</span>
            </div>
            <table id="SourceTable" style="font: 8pt Verdana">
    <tr>
        <td style="padding-right:10;"><b>C# Source: </b></td>
        <td><a href='../../../../aspplus/samples/webforms/data/datagrid9aspxsource.htm'>datagrid9.htm</a> &nbsp;&nbsp</td>
    </tr>
    <tr>
        <td style="padding-right:10;"><b>VB Source: </b></td>
        <td><a href='../../../../aspplus/samples/webforms/data/vb/datagrid9aspxsource.htm'>VB/datagrid9.htm</a> &nbsp;&nbsp</td>
    </tr>
    <tr>
        <td style="padding-right:10;"><b>JScript Source: </b></td>
        <td><a href='../../../../aspplus/samples/webforms/data/js/datagrid9aspxsource.htm'>JS/datagrid9.htm</a> &nbsp;&nbsp</td>
    </tr>
</table>

        </div>

        <xmp>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Data.SQL" %>

<html>

<head>
<script language="C#" runat="server">

    SQLConnection myConnection;
    public Hashtable StateIndex;

    protected void Page_Load(Object Src, EventArgs E)
    {
        myConnection = new SQLConnection("server=localhost;uid=sa;pwd=;database=pubs");

        if (!IsPostBack)
            BindGrid();

        StateIndex = new Hashtable();
        StateIndex["CA"] = 0;
        StateIndex["IN"] = 1;
        StateIndex["KS"] = 2;
        StateIndex["MD"] = 3;
        StateIndex["MI"] = 4;
        StateIndex["OR"] = 5;
        StateIndex["TN"] = 6;
        StateIndex["UT"] = 7;
    }

    public void MyDataGrid_Edit(Object sender, DataGridCommandEventArgs E)
    {
        MyDataGrid.EditItemIndex = (int)E.Item.ItemIndex;
        BindGrid();
    }

    public void MyDataGrid_Cancel(Object sender, DataGridCommandEventArgs E)
    {
        MyDataGrid.EditItemIndex = -1;
        BindGrid();
    }

    public void MyDataGrid_Update(Object sender, DataGridCommandEventArgs E)
    {
        if (Page.IsValid)
        {
            String updateCmd = "UPDATE Authors SET au_id = @Id, au_lname = @LName, au_fname = @FName, phone = @Phone, "
                + "address = @Address, city = @City, state = @State, zip = @Zip, contract = @Contract where au_id = @Id";

            SQLCommand myCommand = new SQLCommand(updateCmd, myConnection);

            myCommand.Parameters.Add(new SQLParameter("@Id", SQLDataType.VarChar, 11));
            myCommand.Parameters.Add(new SQLParameter("@LName", SQLDataType.VarChar, 40));
            myCommand.Parameters.Add(new SQLParameter("@FName", SQLDataType.VarChar, 20));
            myCommand.Parameters.Add(new SQLParameter("@Phone", SQLDataType.Char, 12));
            myCommand.Parameters.Add(new SQLParameter("@Address", SQLDataType.VarChar, 40));
            myCommand.Parameters.Add(new SQLParameter("@City", SQLDataType.VarChar, 20));
            myCommand.Parameters.Add(new SQLParameter("@State", SQLDataType.Char, 2));
            myCommand.Parameters.Add(new SQLParameter("@Zip", SQLDataType.Char, 5));
            myCommand.Parameters.Add(new SQLParameter("@Contract", SQLDataType.VarChar,1));

            myCommand.Parameters["@Id"].Value = MyDataGrid.DataKeys[(int)E.Item.ItemIndex];

            String[] cols = {"LName","FName","Phone","Address","City","Zip"};

            for (int i=0; i<6; i++)
            {
                String colvalue = ((TextBox)E.Item.FindControl("edit_" + cols[i])).Text;
                myCommand.Parameters["@" + cols[i]].Value = colvalue;
            }

            myCommand.Parameters["@State"].Value = ((DropDownList)E.Item.FindControl("edit_State")).SelectedItem.ToString();

            if (((CheckBox)E.Item.FindControl("edit_Contract")).Checked = true)
                myCommand.Parameters["@Contract"].Value = "1";
            else
                myCommand.Parameters["@Contract"].Value = "0";

            myCommand.ActiveConnection.Open();

            try
            {
                myCommand.ExecuteNonQuery();
                Message.InnerHtml = "<b>Record Updated</b><br>" + updateCmd;
                MyDataGrid.EditItemIndex = -1;
            }
            catch (SQLException e)
            {
                if (e.Number == 2627)
                    Message.InnerHtml = "ERROR: A record already exists with the same primary key";
                else
                    Message.InnerHtml = "ERROR: Could not update record, please ensure the fields are correctly filled out";
                Message.Style["color"] = "red";
            }

            myCommand.ActiveConnection.Close();

            BindGrid();
        }
        else
        {
            Message.InnerHtml = "ERROR: Null values not allowed for Name or Phone";
            Message.Style["color"] = "red";
        }
    }

    public void BindGrid() 
    {
        SQLDataSetCommand myCommand = new SQLDataSetCommand("select * from Authors", myConnection);

        DataSet ds = new DataSet();
        myCommand.FillDataSet(ds, "Authors");

        MyDataGrid.DataSource=ds.Tables["Authors"].DefaultView;
        MyDataGrid.DataBind();
    }

</script>
</head>

<body style="font: 10pt verdana">

  <form runat="server">

    <h3><font face="Verdana">Updating a Row of Data w/ Validation</font></h3>

    <span id="Message" MaintainState="false" style="font: arial 11pt;" runat="server"/><p>

    <ASP:DataGrid id="MyDataGrid" runat="server"
      Width="800"
      BackColor="#ccccff" 
      BorderColor="black"
      ShowFooter="false" 
      CellPadding=3 
      CellSpacing="0"
      Font-Name="Verdana"
      Font-Size="8pt"
      HeaderStyle-BackColor="#aaaadd"
      OnEditCommand="MyDataGrid_Edit"
      OnCancelCommand="MyDataGrid_Cancel"
      OnUpdateCommand="MyDataGrid_Update"
      DataKeyField="au_id"
      AutoGenerateColumns="false"
    >

      <property name="Columns">
        <asp:EditCommandColumn EditText="Edit" CancelText="Cancel" UpdateText="Update"  ItemStyle-Wrap="false"/>
        <asp:BoundColumn HeaderText="au_id" SortField="au_id" ReadOnly="True" DataField="au_id" ItemStyle-Wrap="false"/>
        <asp:TemplateColumn HeaderText="au_lname" SortField="au_lname">
          <template name="ItemTemplate">
            <asp:Label runat="server" Text='<%# DataBinder.Eval(Container.DataItem, "au_lname") %>'/>
          </template>
          <template name="EditItemTemplate">
            <nobr>
            <asp:TextBox runat="server" id="edit_LName" Text='<%# DataBinder.Eval(Container.DataItem, "au_lname") %>'/>
            <asp:RequiredFieldValidator id="au_lnameReqVal"
                ControlToValidate="edit_LName"
                Display="Dynamic"
                Font-Name="Verdana" Font-Size="12"
                runat=server>
                    &nbsp;*
            </asp:RequiredFieldValidator>
          </template>
        </asp:TemplateColumn>
        <asp:TemplateColumn HeaderText="au_fname" SortField="au_fname">
          <template name="ItemTemplate">
            <asp:Label runat="server" Text='<%# DataBinder.Eval(Container.DataItem, "au_fname") %>'/>
          </template>
          <template name="EditItemTemplate">
            <nobr>
            <asp:TextBox runat="server" id="edit_FName" Text='<%# DataBinder.Eval(Container.DataItem, "au_fname") %>'/>
            <asp:RequiredFieldValidator id="au_fnameReqVal"
                ControlToValidate="edit_FName"
                Display="Dynamic"
                Font-Name="Verdana" Font-Size="12"
                runat=server>
                    &nbsp;*
            </asp:RequiredFieldValidator>
          </template>
        </asp:TemplateColumn>
        <asp:TemplateColumn HeaderText="phone" SortField="phone">
          <template name="ItemTemplate">
            <asp:Label runat="server" Text='<%# DataBinder.Eval(Container.DataItem, "phone") %>'/>
          </template>
          <template name="EditItemTemplate">
            <nobr>
            <asp:TextBox runat="server" id="edit_Phone" Text='<%# DataBinder.Eval(Container.DataItem, "phone") %>'/>
            <asp:RequiredFieldValidator id="phoneReqVal"
                ControlToValidate="edit_Phone"
                Display="Dynamic"
                Font-Name="Verdana" Font-Size="12"
                runat=server>
                    &nbsp;*
            </asp:RequiredFieldValidator>
            <asp:RegularExpressionValidator id="phoneRegexVal"
                ControlToValidate="edit_Phone"
                ValidationExpression="[0-9]{3} [0-9]{3}-[0-9]{4}"
                Display="Dynamic"
                Font-Name="Arial" Font-Size="11"
                runat=server>
                    * Phone must be in form: XXX XXX-XXXX <br>
            </asp:RegularExpressionValidator>
          </template>
        </asp:TemplateColumn>
        <asp:TemplateColumn HeaderText="address" SortField="address">
          <template name="ItemTemplate">
            <asp:Label runat="server" Text='<%# DataBinder.Eval(Container.DataItem, "address") %>'/>
          </template>
          <template name="EditItemTemplate">
            <asp:TextBox runat="server" id="edit_Address" Text='<%# DataBinder.Eval(Container.DataItem, "address") %>'/>
          </template>
        </asp:TemplateColumn>
        <asp:TemplateColumn HeaderText="city" SortField="city">
          <template name="ItemTemplate">
            <asp:Label runat="server" Text='<%# DataBinder.Eval(Container.DataItem, "city") %>'/>
          </template>
          <template name="EditItemTemplate">
            <asp:TextBox runat="server" id="edit_City" Text='<%# DataBinder.Eval(Container.DataItem, "city") %>'/>
          </template>
        </asp:TemplateColumn>
        <asp:TemplateColumn HeaderText="state" SortField="state">
          <template name="ItemTemplate">
            <asp:Label runat="server" Text='<%# DataBinder.Eval(Container.DataItem, "state") %>'/>
          </template>
          <template name="EditItemTemplate">
            <asp:DropDownList runat="server" SelectedIndex='<%# StateIndex[(String)((DataRowView)Container.DataItem)["state"]] %>' id="edit_State">
                  <asp:ListItem>CA</asp:ListItem>
                  <asp:ListItem>IN</asp:ListItem>  
                  <asp:ListItem>KS</asp:ListItem>  
                  <asp:ListItem>MD</asp:ListItem>  
                  <asp:ListItem>MI</asp:ListItem>  
                  <asp:ListItem>OR</asp:ListItem> 
                  <asp:ListItem>TN</asp:ListItem>  
                  <asp:ListItem>UT</asp:ListItem>  
            </asp:DropDownList>
          </template>
        </asp:TemplateColumn>
        <asp:TemplateColumn HeaderText="zip" SortField="zip">
          <template name="ItemTemplate">
            <asp:Label runat="server" Text='<%# DataBinder.Eval(Container.DataItem, "zip") %>'/>
          </template>
          <template name="EditItemTemplate">
            <asp:TextBox runat="server" id="edit_Zip" Text='<%# DataBinder.Eval(Container.DataItem, "zip") %>'/>
            <asp:RegularExpressionValidator id="RegularExpressionValidator1"
                ASPClass="RegularExpressionValidator" ControlToValidate="edit_Zip"
                ValidationExpression="[0-9]{5}"
                Display="Dynamic"
                Font-Name="Arial" Font-Size="11"
                runat=server>
                    * Zip Code must be 5 numeric digits <br>
            </asp:RegularExpressionValidator>
          </template>
        </asp:TemplateColumn>
        <asp:TemplateColumn HeaderText="contract" SortField="contract">
          <template name="ItemTemplate">
            <asp:Label runat="server" Text='<%# DataBinder.Eval(Container.DataItem, "contract", "{0}") %>'/>
          </template>
          <template name="EditItemTemplate">
            <asp:CheckBox runat="server" id="edit_Contract" Checked='<%# DataBinder.Eval(Container.DataItem, "contract") %>'/>
          </template>
        </asp:TemplateColumn>
      </property>

    </ASP:DataGrid>

  </form>

</body>
</html>
</xmp>
        <span id="ErrorMessage" style="color:red"></span>

    </form>
