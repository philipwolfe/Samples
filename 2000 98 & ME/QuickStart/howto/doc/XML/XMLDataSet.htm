

<!--BEGIN HEADER-->
<html>
<head>
<link rel="stylesheet" href="../../../include/qsstyle.css">
</head>
<body topmargin="0" leftmargin="0" marginwidth="0" marginheight="0" >

<table class="outer" cellpadding=0 cellspacing=0>
<tr>
<td class="toc" valign="top" width="210">
  <table>
<tr>
<td nowrap style="padding-right:15">

<div class="toc" style="font-size:8pt;color:darkred;">
<!--
		<div style="padding:0,0,4,0"><a class="outer" style="color:darkred" href="../../../howto/doc/xml/overviewofxml.htm"><b>Introduction</a></b></a><br></div>
         <p>
		<div style="padding:0,0,4,0"><b>XML Readers and Writers</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/readxmlfile.htm">Read XML from a file</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/readxmlstream.htm">Read XML from a stream</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/writexmlfile.htm">Write XML to a file</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/validationreadingxml.htm">Apply validation when reading XML</a><br>
		<p>
		<div style="padding:0,0,4,0"><b>XML Document Object Model (DOM)</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/dominterfacexmldocument.htm">Load and use the XmlDocument (W3C DOM)</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/savexmldocument.htm">Save XML with the XmlDocument (W3C DOM)</a><br>
		<p>
		<div style="padding:0,0,4,0"><b>Using the XmlDataDocument</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/loadxmldocument.htm">Load and use the XmlDataDocument</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/streamanxmldocument.htm">Read XML from an XmlDataDocument</a><br>
		<p>
		<div style="padding:0,0,4,0"><b>XML Navigation and Editing</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/navigatexmldocument.htm">Navigate XML with the XmlNavigator</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/editingxmldocument.htm">Edit XML with the XmlNavigator</a><br>
		<p>
		<div style="padding:0,0,4,0"><b>XPath and XSL Transformations</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/queryxmldocumentxpath.htm">Query XML with an XPath expression</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/transformxml.htm">Apply an XSL transformation to XML</a><br>
		<p>
		<div style="padding:0,0,4,0"><b>XML and Relational Data</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/xmldataset.htm">Use XML and the DataSet class</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/datasetmapxsdschema.htm">Create DataSet mappings from an XSD schema</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/loaddatasetxmldata.htm">Load a DataSet with XML</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/datasetmapxmldata.htm">Infer DataSet mappings from XML</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/savedatasetmapxsdschema.htm">Save DataSet mappings to an XSD schema file</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/savedatasetxml.htm">Save a DataSet as XML</a><br>
-->

		<div style="padding:0,0,4,0"><b>XML Data</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/overviewofxml.htm">Overview of XML</a><p>

		<div style="padding:0,0,4,0"><b>XML Readers and Writers</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/readxmlfile.htm">Read XML from a file</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/readxmlstream.htm">Read XML from a stream</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/writexmlfile.htm">Write XML to a file</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/validationreadingxml.htm">Apply validation to XML</a><br>
		<p>
		<div style="padding:0,0,4,0"><b>XML Document Object Model</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/dominterfacexmldocument.htm">Load XML with XmlDocument</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/savexmldocument.htm">Save XML with XmlDocument</a><br>
		<p>
		<div style="padding:0,0,4,0"><b>Using the XmlDataDocument</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/loadxmldocument.htm">Load the XmlDataDocument</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/streamanxmldocument.htm">Read from XmlDataDocument</a><br>
		<p>
		<div style="padding:0,0,4,0"><b>XML Navigation and Editing</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/navigatexmldocument.htm">Navigate with XmlNavigator</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/editingxmldocument.htm">Edit with XmlNavigator</a><br>
		<p>
		<div style="padding:0,0,4,0"><b>XPath and XSL Transformations</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/queryxmldocumentxpath.htm">Query XML with an XPath</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/transformxml.htm">Apply XSL transformations</a><br>
		<p>
		<div style="padding:0,0,4,0"><b>XML and Relational Data</b><br></div>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/xmldataset.htm">Use XML and the DataSet</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/datasetmapxsdschema.htm">Create DataSet mappings</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/loaddatasetxmldata.htm">Load a DataSet with XML</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/datasetmapxmldata.htm">Infer DataSet mappings</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/savedatasetmapxsdschema.htm">Save DataSet mappings</a><br>
		&nbsp; <a class="outer" href="../../../howto/doc/xml/savedatasetxml.htm">Save a DataSet as XML</a><p>

    <div style="padding:0,0,4,0"><a target="_top" style="color:darkred" href="../../../howto"><b>Back to Index</b></a><br></div>


</div>

</td>
</tr>
</table>
</td>
<td valign="top">
<div class="body">
<!--END HEADER-->

<style>
.mydd {  font: smaller verdana; }
.code1 {
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	background:#DFDFDF;
	font-family:"Courier New";
	color:blue;
	}
.codecomment1 {
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	background:#DFDFDF;
	font-family:"Courier New";
	color:green;
	}
.issue {
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	background-color:RED;
	color:WHITE;
	font-weight:bold;
	}


body { font: smaller verdana }        

</style>





<h4>How Do I...Use XML and the DataSet?</h4>

These topics provide an introduction to the interaction between the DataSet and XMLDataDocument objects.
<p>

<span class="subhead">XML and Relational Data. Same Data, Two Views.</span>
<p>

XML often has relational structure (the fictional books in a bookstore for example) as well as being unstructured.
This set of topics cover the concept of storing
this data centrally and providing different views on this data, either as XML or relationally as tables, columns and rows with relationships. This disconnected
store of data which, for example, could represent a business object in the middle tier enforcing business rules, could serve
its data up as XML to a browser via an XSL
transform, across the internet to another site, or to a local application via the relational tables. However the data gets amended in the store, it can then be updated
to a database transactionally. Also see <A target=content href="../../../howto/doc/adoplus/adoplusoverview.htm">How do I...Get an Overview of ADO.NET?</A>
<p>

A <b>DataSet</b> represents an in-memory cache of data as a collection of tables and relationships between those tables. It is, in effect, a locally
cached database. This provides a disconnected cache of data, like a message, that enables dealing with 'chunks' of data. The DataSet has no knowledge of where
the data came from. It may have come from a file, a database connection or from a stream. DataSets provide a relational view onto this stored data.
<p>

The <b>XmlDataDocument</b> provides XML APIs for accessing this in-memory cache of data as well as supporting reading and writing XML. The XmlDataDocument is a DataSet
aware object. When creating an XmlDataDocument it implicitly creates a DataSet (accessed as a property)
that provides a relational view onto the data XML data.
This symbiotic relationship between the two objects provides a powerful technique for accessing data either relationally or as XML, irrespective of the mechanism
by which the data was sourced.
<p>

<span class="subhead">XmlDataDocument and DataSet Differences</span>

<p>
There are differences between these objects and their views. XML loaded via the <b>Load</b> method on the XmlDataDocument maintains full fidelity, which
means that all the XML structure is maintained and can be accessed via the XML API. The <b>ReadXml</b> method on the DataSet however only
loads the XML that conforms to the internally created mappings (schema). Whitespace and element ordering, as well as data that does not conform to the relational
mapping is lost. Hence it does not retain XML fidelity. Also data which has been loaded via the XmlDataDocument and which does not conform to the internal
mappings on the DataSet cannot be viewed via the relational API. Relational loaded data can always be viewed via the XML API.
<p>

XML Data can be saved from both the DataSet with the <b>WriteXmlData</b> method and the XmlDataDocument with the <b>Save</b> method. The former saves a 
normalized view of the relationally mapped data (i.e. The XML data that conforms to the internal
schema, with elements ordered according to the relational schema), whilst the latter saves the XML with full
fidelity (i.e. all the XML that has been loaded into the XmlDataDocument, including the preservation of whitespace and element ordering</span>).
<p>

<span class="subhead">Topics</span>

<p>
Here we are going to work with XML data, DataSets and the XmlDataDocument to show this inter-change.
<p>

<OL>
<LI class="indent"> Firstly we are going to cover how a DataSet can build a relational view according to
a supplied XSD schema in <A target=content href="DataSetMapXSDSchema.htm">How do I...Create DataSet mappings from an XSD schema?</A> 
<br clear="left"><br>

<LI>Then we cover how XML data gets loaded into the DataSet and accessed as relational data in
<A target=content href="LoadDataSetXMLData.htm">How do I...Load a DataSet with XML?</A> 
<br clear="left"><br>

<LI>Next we cover how to infer a relational mapping from XML data, rather than an XSD schema in
<A target=content href="DataSetMapXMLData.htm">How do I...Infer DataSet mappings from XML?</A><br clear="left"><br>

<LI>Then we show how to save the infered schema generated from loaded XML data in
<A target=content href="SaveDataSetMapXSDSchema.htm">How do I...Save DataSet mappings to an XSD schema file?</A> 
<br clear="left"><br>

<LI>And finally we cover how to access and save XML that has been loaded into the DataSet relationally in
<A target=content href="SaveDataSetXML.htm">How do I...Save a DataSet as XML?</A> </LI>
<br clear="left"><br>
</OL>

<span class="subhead">Related Topics</span>
<p>


Many features of the XmlDataDocument object utilizing the XML API have already been covered in the following preceding topics and these should be referred to in
those scenarios whereby data is assessed as XML.
<p>

<OL>
<LI class="indent"><A target=content href="LoadXmlDocument.htm">How do I...Load and use the XmlDataDocument?</A> 
<br clear="left"><br>
<LI><A target=content href="StreamAnXmlDocument.htm">How do I...Read XML from an XmlDataDocument?</A> 
<br clear="left"><br>
<LI><A target=content href="NavigateXmlDocument.htm">How do I...Navigate XML with the XmlNavigator?</A> 
<br clear="left"><br>
<LI><A target=content href="EditingXmlDocument.htm">How do I...Edit XML with the XmlNavigator?</A> </LI>
<br clear="left"><br>
</OL>


For coverage of the interaction between the DataSet and databases using managed providers see
<A target=content href="../../../howto/doc/adoplus/adoplusoverview.htm">How do I...Get an Overview of ADO.NET?</A>
<p>

<!--END FOOTER-->
<p>
<hr>
<p>
</div>
</td>
</tr>
</table>
</BODY>
</html>
<!--END FOOTER-->