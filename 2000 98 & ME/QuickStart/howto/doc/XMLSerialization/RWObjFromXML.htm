

<!--BEGIN HEADER-->
<html>
<head>
<link rel="stylesheet" href="../../../include/qsstyle.css">
</head>
<body topmargin="0" leftmargin="0" marginwidth="0" marginheight="0" >

<table class="outer" cellpadding=0 cellspacing=0>
<tr>
<td class="toc" valign="top" width="210">

<table>
<tr>
<td nowrap style="padding-right:15">

<div class="toc" style="font-size:8pt;color:darkred;">

    <div style="padding:0,0,4,0"><b>XML Serialization</b><br></div>
    &nbsp; <a class="outer" href="../../../howto/doc/xmlserialization/xsdfromcls.htm">XSD schema from a class</a><br>
    &nbsp; <a class="outer" href="../../../howto/doc/xmlserialization/xsdtocls.htm">Class from an XSD schema</a><br>
    &nbsp; <a class="outer" href="../../../howto/doc/xmlserialization/rwobjfromxml.htm">Read and Write Objs as XML</a><p>
    <div style="padding:0,0,4,0"><a target="_top" style="color:darkred" href="../../../howto"><b>Back to Index</b></a><br></div>

</div>

</td>
</tr>
</table>






</td>
<td valign="top">
<div class="body">
<!--END HEADER-->

<style>
.mydd {  font: smaller verdana; }
.code1 {
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	background:#DFDFDF;
	font-family:"Courier New";
	color:blue;
	}
.codecomment1 {
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	background:#DFDFDF;
	font-family:"Courier New";
	color:green;
	}
.issue {
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	background-color:RED;
	color:WHITE;
	font-weight:bold;
	}


body { font: smaller verdana }        

</style>





<h4>How do I read/write objects into xml?</h4>

This topic describes how to automatically map a particular xml stream into a set of objects designed to hold the XML using the XML Serialization classes.<p>

<ol>
<li>First, you'll need classes designed to work with the XML Serialization classes.  If you have an XSD schema that describes the format of the XML file you want to load or save, you're almost there.  <a href="XsdToCls.htm">Use the XSD.exe tool</a> to create these classes automatically. You can also build the classes by hand. Some information on how to do this can be found in the <a href="XsdFromCls.htm">"How do I Create an XSD schema from a class?"</a> topic. <p>
For this example, we'll be using the PurchaseOrder classes that were generated to read XML in the format defined by the purchase order schema.  Both the classes and the schema are shown below.<p>

<table border=0>
<tr><td>
<span>
  
  

        

<div class="indent">



	<a target="_blank" href="../../../howto/samples/xmlserialization/cs/purchaseordercssource.htm">
	<img style="border-color:black" border=1 src="../../../images/genicon.gif"><br>
	</a>
	<div class="caption">PurchaseOrder.vb</div><br>
	[<a target="_blank" href="../../../howto/samples/xmlserialization/cs/purchaseordercssource.htm">View Source</a>]
	</div>


  </span>

</td>
<td>
        

<div class="indent">



	<a target="_blank" href="../../../howto/samples/xmlserialization/purchaseorderxsdsource.htm">
	<img style="border-color:black" border=1 src="../../../images/genicon.gif"><br>
	</a>
	<div class="caption">PurchaseOrder.XSD</div><br>
	[<a target="_blank" href="../../../howto/samples/xmlserialization/purchaseorderxsdsource.htm">View Source</a>]
	</div>


</td></tr>
</table>
<p>

<li>Create an instance of the XmlSerializer, passing the type of the object you would like to deserialize.  Here we will use the PurchaseOrder type that was defined earlier.<p>
<div class="code"><xmp>
XmlSerializer serializer = new XmlSerializer(typeof(PurchaseOrder));
</xmp></div>
<li>To read the file, call the Deserialize method passing in a Stream, TextReader, or XmlReader.  A purchase order will be returned.
<p>
<table cellpadding=0 cellspacing=0 width="95%">
<tr>
<td>


  <script language="JavaScript">
    function doClick(index, id) {
        var numTabs = 2;
        document.all("tab" + id, index).className = "tab";
        for (var i=1; i < numTabs; i++) {
            document.all("tab" + id, (index + i) % numTabs).className = "backtab";
        }
        document.all("code" + id, index).style.display = "";
        for (var j=1; j < numTabs; j++) {
          document.all("code" + id, (index + j) % numTabs).style.display = "none";
        }
    }
  </script>
  <style>
    td.code {
      padding:0,10,0,10;
      border-style:solid;
      border-width:1;
      border-bottom:0;
      border-top:0;
      border-right:0;
      border-color:cccccc;
      background-color:ffffee
    }
    td.tab {
      text-align:center;
      font:8pt verdana;
      width:15%;
      padding:3,3,3,3;
      border-style:solid;
      border-width:1;
      border-right:0;
      border-color:black;
      background-color:eeeeee
    }
    td.backtab {
      text-align:center;
      font: 8pt verdana;
      width:15%;
      padding:3,3,3,3;
      border-style:solid;
      border-width:1;
      border-right:0;
      border-color:black;
      background-color:cccccc
    }
    td.space {
      width:70%;
      font: 8pt verdana;
      padding:0,0,0,0;
      border-style:solid;
      border-bottom:0;
      border-right:0;
      border-width:1;
      border-color:cccccc;
      border-left-color:black;
      background-color:white
    }
  </style>
    <table cellpadding=0 cellspacing=0 width="95%">
      <tr>
        <td class="code" colspan="3">
<pre id="codectrl8" style="display:none">

TextReader reader = new StreamReader("po.xml");
PurchaseOrder po = (PurchaseOrder)serializer.Deserialize(reader);
reader.Close();
</pre>
<pre id="codectrl8" style="display:">

Dim reader As TextReader = New StreamReader("po.xml")
Dim po As PurchaseOrder = CType(serializer.Deserialize(reader), PurchaseOrder)
reader.Close()
</pre>
        </td>
      </tr>
      <tr>
        <td class="backtab" id="tabctrl8" onclick="doClick(0, 'ctrl8')">
          <b>C#
        </td>
        <td class="tab" id="tabctrl8" onclick="doClick(1, 'ctrl8')">
          <b>VB
        </td>
        <td class="space">&nbsp;</td>
      </tr>
    </table>


</td>
</tr>
</table>
<p>


<li>To write the file, call the Serialize method passing in a Stream, TextReader, or XmlReader as well as an instance of the purchase order. 


<p>
<table cellpadding=0 cellspacing=0 width="95%">
<tr>
<td>


  <script language="JavaScript">
    function doClick(index, id) {
        var numTabs = 2;
        document.all("tab" + id, index).className = "tab";
        for (var i=1; i < numTabs; i++) {
            document.all("tab" + id, (index + i) % numTabs).className = "backtab";
        }
        document.all("code" + id, index).style.display = "";
        for (var j=1; j < numTabs; j++) {
          document.all("code" + id, (index + j) % numTabs).style.display = "none";
        }
    }
  </script>
  <style>
    td.code {
      padding:0,10,0,10;
      border-style:solid;
      border-width:1;
      border-bottom:0;
      border-top:0;
      border-right:0;
      border-color:cccccc;
      background-color:ffffee
    }
    td.tab {
      text-align:center;
      font:8pt verdana;
      width:15%;
      padding:3,3,3,3;
      border-style:solid;
      border-width:1;
      border-right:0;
      border-color:black;
      background-color:eeeeee
    }
    td.backtab {
      text-align:center;
      font: 8pt verdana;
      width:15%;
      padding:3,3,3,3;
      border-style:solid;
      border-width:1;
      border-right:0;
      border-color:black;
      background-color:cccccc
    }
    td.space {
      width:70%;
      font: 8pt verdana;
      padding:0,0,0,0;
      border-style:solid;
      border-bottom:0;
      border-right:0;
      border-width:1;
      border-color:cccccc;
      border-left-color:black;
      background-color:white
    }
  </style>
    <table cellpadding=0 cellspacing=0 width="95%">
      <tr>
        <td class="code" colspan="3">
<pre id="codectrl10" style="display:none">

TextWriter writer = new StreamWriter("po2.xml");
serializer.Serialize(writer, po);
writer.Close();
</pre>
<pre id="codectrl10" style="display:">

Dim writer As TextWriter = New StreamWriter("po2.xml")
serializer.Serialize(writer, po)
writer.Close()
</pre>
        </td>
      </tr>
      <tr>
        <td class="backtab" id="tabctrl10" onclick="doClick(0, 'ctrl10')">
          <b>C#
        </td>
        <td class="tab" id="tabctrl10" onclick="doClick(1, 'ctrl10')">
          <b>VB
        </td>
        <td class="space">&nbsp;</td>
      </tr>
    </table>


</td>
</tr>
</table>


</ol>

The following example puts these ideas together by reading the purchase order XML file shown below, and then writing it back out to another file.<p>

<table border=0>
<tr><td>

<span>
  
  

        

<div class="indent">



	<a target="_blank" href="../../../howto/samples/xmlserialization/vb">
	<img style="border-color:black" border=1 src="../../../images/genicon.gif"><br>
	</a>
	<div class="caption">ReadWriteXML</div><br>
	
	
		[<a target="_blank" href="../../../howto/samples/xmlserialization/vb">Run Sample</a>] | 
		[<a target="_blank" href="../../../howto/samples/xmlserialization/cs/readwritexmlcssource.htm">View Source</a>]
	
	
	</div>


  </span>

</td><td>
        

<div class="indent">



	<a target="_blank" href="../../../howto/samples/xmlserialization/purchaseorderxmlsource.htm">
	<img style="border-color:black" border=1 src="../../../images/genicon.gif"><br>
	</a>
	<div class="caption">PurchaseOrder.xml</div><br>
	[<a target="_blank" href="../../../howto/samples/xmlserialization/purchaseorderxmlsource.htm">View Source</a>]
	</div>



</td></tr>
</table>



<!--END FOOTER-->
<p>
<hr>
<p>
</div>
</td>
</tr>
</table>
</BODY>
</html>
<!--END FOOTER-->