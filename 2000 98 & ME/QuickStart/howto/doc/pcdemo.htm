

<!--BEGIN HEADER-->
<html>
<head>
<link rel="stylesheet" href="../../include/qsstyle.css">
</head>
<body topmargin="0" leftmargin="0" marginwidth="0" marginheight="0" >

<table class="outer" cellpadding=0 cellspacing=0>
<tr>
<td class="toc" valign="top" width="210">

<table>
<tr>
<td nowrap style="padding-right:15">

<div class="toc" style="font-size:8pt;color:darkred;">

    <div style="padding:0,0,4,0"><b>Diagnostics</b><br></div>
    &nbsp; <a class="outer" href="../../howto/doc/logwrite.htm">Write to an event log</a><br>
    &nbsp; <a class="outer" href="../../howto/doc/loginfo.htm">Read from an event log</a><br>
    &nbsp; <a class="outer" href="../../howto/doc/logmonitor.htm">Monitor an event log</a><br>
    &nbsp; <a class="outer" href="../../howto/doc/pcwrite.htm">Write to a perf counter</a><br>
    &nbsp; <a class="outer" href="../../howto/doc/pcread.htm">Read from a perf counter</a><br>
    &nbsp; <a class="outer" href="../../howto/doc/pcdemo.htm">Count rate of change</a><br>
    &nbsp; <a class="outer" href="../../howto/doc/trace.htm">Work with tracing</a><br>
    &nbsp; <a class="outer" href="../../howto/doc/switches.htm">Use trace switches/listeners</a><br>
    &nbsp; <a class="outer" href="../../howto/doc/tracedemo.htm">Instrument an application</a><br>
    &nbsp; <a class="outer" href="../../howto/doc/processdemo.htm">Start and stop a process</a><br>
    &nbsp; <a class="outer" href="../../howto/doc/prinfo.htm">Get process information</a><p>
    <div style="padding:0,0,4,0"><a target="_top" style="color:darkred" href="../../howto"><b>Back to Index</b></a><br></div>

</div>

</td>
</tr>
</table>

</td>
<td valign="top">
<div class="body">
<!--END HEADER-->

<style>
.mydd {  font: smaller verdana; }
.code1 {
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	background:#DFDFDF;
	font-family:"Courier New";
	color:blue;
	}
.codecomment1 {
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	background:#DFDFDF;
	font-family:"Courier New";
	color:green;
	}
.issue {
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	background-color:RED;
	color:WHITE;
	font-weight:bold;
	}


body { font: smaller verdana }        

</style>





<h4>How Do I...Count rate of change?</h4>

Windows performance counters allow
your applications and components to publish, capture, and analyze the
performance data that applications, services, and drivers provide. You can use
this information to determine system bottlenecks and fine-tune system and
application performance. For example, you might use a performance counter to
track the number of orders processes per second or the number of users currently
connected to the system. Using the Common Language Runtime's <span class="Bold">PerformanceCounter</span>
component, you can easily create your own custom counters and publish
performance data relevant to your application, such as those mentioned above.

<p>
This sample illustrates how to publish the number of orders processed per second using a
custom performance counter. It's a small console application that can be run
from a command prompt. Let's run it:

<div class="code"><pre>
&gt; PCDemo.exe
</pre></div>

<p>
Now, wait for the application to display &quot;Started&quot; and run the PerfMon.exe.
In PerfMon, click on the &quot;add&quot; toolbar button. A dialog will open.
Select the &quot;ACounterDemo&quot; performance object, &quot;CountPerSecond&quot;
counter, and &quot;_Total&quot; instance. Click &quot;Add&quot;, close the
dialog, and observe that you can use the PCDemo sample to change the published
value by pressing &quot;+&quot; or &quot;-&quot;. When, the application starts, 
it simulates processing two new orders per
second. The &quot;+&quot; and &quot;-&quot; keys can be used to double or halve
the number.

<p>
In its simplest form, writing to a custom performance counter that counts number of
items per second involves:

<ol>

<li>Creating a counter of the RateOfChangePerSecond32 type:

<p>
<table cellpadding=0 cellspacing=0 width="95%">
<tr>
<td>


  <script language="JavaScript">
    function doClick(index, id) {
        var numTabs = 2;
        document.all("tab" + id, index).className = "tab";
        for (var i=1; i < numTabs; i++) {
            document.all("tab" + id, (index + i) % numTabs).className = "backtab";
        }
        document.all("code" + id, index).style.display = "";
        for (var j=1; j < numTabs; j++) {
          document.all("code" + id, (index + j) % numTabs).style.display = "none";
        }
    }
  </script>
  <style>
    td.code {
      padding:0,10,0,10;
      border-style:solid;
      border-width:1;
      border-bottom:0;
      border-top:0;
      border-right:0;
      border-color:cccccc;
      background-color:ffffee
    }
    td.tab {
      text-align:center;
      font:8pt verdana;
      width:15%;
      padding:3,3,3,3;
      border-style:solid;
      border-width:1;
      border-right:0;
      border-color:black;
      background-color:eeeeee
    }
    td.backtab {
      text-align:center;
      font: 8pt verdana;
      width:15%;
      padding:3,3,3,3;
      border-style:solid;
      border-width:1;
      border-right:0;
      border-color:black;
      background-color:cccccc
    }
    td.space {
      width:70%;
      font: 8pt verdana;
      padding:0,0,0,0;
      border-style:solid;
      border-bottom:0;
      border-right:0;
      border-width:1;
      border-color:cccccc;
      border-left-color:black;
      background-color:white
    }
  </style>
    <table cellpadding=0 cellspacing=0 width="95%">
      <tr>
        <td class="code" colspan="3">
<pre id="codectrl4" style="display:none">

if (!PerformanceCounter.CategoryExists(objectName)) {
    CounterCreationData ccd = new CounterCreationData();
    ccd.CounterName = counterName;
    ccd.CounterType = PerformanceCounterType.RateOfChangePerSecond32;
    CounterCreationData[] ccds = new CounterCreationData[1];
    ccds[0] = ccd;

    PerformanceCounterCategory.Create(objectName, &quot;Sample Object&quot;, ccds);
}
</pre>
<pre id="codectrl4" style="display:">

If (Not PerformanceCounter.CategoryExists(objectName)) Then
    Dim ccd As CounterCreationData = new CounterCreationData()
    ccd.CounterName = counterName
    ccd.CounterType = PerformanceCounterType.RateOfChangePerSecond32
    Dim ccds(1) As CounterCreationData
    ccds(0) = ccd

    PerformanceCounterCategory.Create(objectName,"Sample Object",ccds)
End If
</pre>
        </td>
      </tr>
      <tr>
        <td class="backtab" id="tabctrl4" onclick="doClick(0, 'ctrl4')">
          <b>C#
        </td>
        <td class="tab" id="tabctrl4" onclick="doClick(1, 'ctrl4')">
          <b>VB
        </td>
        <td class="space">&nbsp;</td>
      </tr>
    </table>


</td>
</tr>
</table>
<p>

<li>Instantiating a PerformanceCounter component and pointing it to an appropriate performance
counter:

<p>
<table cellpadding=0 cellspacing=0 width="95%">
<tr>
<td>


  <script language="JavaScript">
    function doClick(index, id) {
        var numTabs = 2;
        document.all("tab" + id, index).className = "tab";
        for (var i=1; i < numTabs; i++) {
            document.all("tab" + id, (index + i) % numTabs).className = "backtab";
        }
        document.all("code" + id, index).style.display = "";
        for (var j=1; j < numTabs; j++) {
          document.all("code" + id, (index + j) % numTabs).style.display = "none";
        }
    }
  </script>
  <style>
    td.code {
      padding:0,10,0,10;
      border-style:solid;
      border-width:1;
      border-bottom:0;
      border-top:0;
      border-right:0;
      border-color:cccccc;
      background-color:ffffee
    }
    td.tab {
      text-align:center;
      font:8pt verdana;
      width:15%;
      padding:3,3,3,3;
      border-style:solid;
      border-width:1;
      border-right:0;
      border-color:black;
      background-color:eeeeee
    }
    td.backtab {
      text-align:center;
      font: 8pt verdana;
      width:15%;
      padding:3,3,3,3;
      border-style:solid;
      border-width:1;
      border-right:0;
      border-color:black;
      background-color:cccccc
    }
    td.space {
      width:70%;
      font: 8pt verdana;
      padding:0,0,0,0;
      border-style:solid;
      border-bottom:0;
      border-right:0;
      border-width:1;
      border-color:cccccc;
      border-left-color:black;
      background-color:white
    }
  </style>
    <table cellpadding=0 cellspacing=0 width="95%">
      <tr>
        <td class="code" colspan="3">
<pre id="codectrl6" style="display:none">

String objectName = ... ;
String counterName = ... ;
String instanceName = ... ;

PerformanceCounter counter;
counter = new PerformanceCounter(objectName, counterName, instanceName);
</pre>
<pre id="codectrl6" style="display:">

Dim objectName As String = ... ;
Dim counterName As String = ... ;
Dim instanceName As String = ... ;

Dim counter As PerformanceCounter
counter = New PerformanceCounter(objectName, counterName, instanceName)
</pre>
        </td>
      </tr>
      <tr>
        <td class="backtab" id="tabctrl6" onclick="doClick(0, 'ctrl6')">
          <b>C#
        </td>
        <td class="tab" id="tabctrl6" onclick="doClick(1, 'ctrl6')">
          <b>VB
        </td>
        <td class="space">&nbsp;</td>
      </tr>
    </table>


</td>
</tr>
</table>
<p>


<li>Setting the RawValue property of the counter:


<p>
<table cellpadding=0 cellspacing=0 width="95%">
<tr>
<td>


  <script language="JavaScript">
    function doClick(index, id) {
        var numTabs = 2;
        document.all("tab" + id, index).className = "tab";
        for (var i=1; i < numTabs; i++) {
            document.all("tab" + id, (index + i) % numTabs).className = "backtab";
        }
        document.all("code" + id, index).style.display = "";
        for (var j=1; j < numTabs; j++) {
          document.all("code" + id, (index + j) % numTabs).style.display = "none";
        }
    }
  </script>
  <style>
    td.code {
      padding:0,10,0,10;
      border-style:solid;
      border-width:1;
      border-bottom:0;
      border-top:0;
      border-right:0;
      border-color:cccccc;
      background-color:ffffee
    }
    td.tab {
      text-align:center;
      font:8pt verdana;
      width:15%;
      padding:3,3,3,3;
      border-style:solid;
      border-width:1;
      border-right:0;
      border-color:black;
      background-color:eeeeee
    }
    td.backtab {
      text-align:center;
      font: 8pt verdana;
      width:15%;
      padding:3,3,3,3;
      border-style:solid;
      border-width:1;
      border-right:0;
      border-color:black;
      background-color:cccccc
    }
    td.space {
      width:70%;
      font: 8pt verdana;
      padding:0,0,0,0;
      border-style:solid;
      border-bottom:0;
      border-right:0;
      border-width:1;
      border-color:cccccc;
      border-left-color:black;
      background-color:white
    }
  </style>
    <table cellpadding=0 cellspacing=0 width="95%">
      <tr>
        <td class="code" colspan="3">
<pre id="codectrl8" style="display:none">

counter.IncrementBy(1);
</pre>
<pre id="codectrl8" style="display:">

counter.IncrementBy(1)
</pre>
        </td>
      </tr>
      <tr>
        <td class="backtab" id="tabctrl8" onclick="doClick(0, 'ctrl8')">
          <b>C#
        </td>
        <td class="tab" id="tabctrl8" onclick="doClick(1, 'ctrl8')">
          <b>VB
        </td>
        <td class="space">&nbsp;</td>
      </tr>
    </table>


</td>
</tr>
</table>

</ol>

<h4>Example</h4>

<span>
  
  

        

<div class="indent">



	<a target="_blank" href="../../howto/samples/services/performancecounters/pcdemo/vb">
	<img style="border-color:black" border=1 src="../../images/console.gif"><br>
	</a>
	<div class="caption">PCDemo.exe</div><br>
	
	
		[<a target="_blank" href="../../howto/samples/services/performancecounters/pcdemo/vb">Run Sample</a>] | 
		[<a target="_blank" href="../../howto/samples/services/performancecounters/pcdemo/pcdemocssource.htm">View Source</a>]
	
	
	</div>


  </span>

<!--END FOOTER-->
<p>
<hr>
<p>
</div>
</td>
</tr>
</table>
</BODY>
</html>
<!--END FOOTER-->