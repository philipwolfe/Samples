



    <link rel="stylesheet" href="../../../../../util/style.css">

    <form name="Form" method="post" action="srcview.htm?path=/QuickStart/howto/samples/assemblies/version/version.src&file=calcrv6/calcr.cs" id="Form">
<input type="hidden" name="__VIEWSTATE" value="YTB6MTQ3MzAyNjM4MF9hMHpfaHo1ejN4X2Ewel9oejV6MHhfYTB6aHppbm5lcmh0bWxfY2FsY3J2Ni9jYWxjci5jc3hfX3h4X3h4X3hfX3g=176cf55d" />


        <div class="SampleHeader" style="width:100%">
            <div class="SampleTitle">
                <span id="Title">calcrv6/calcr.cs</span>
            </div>
            <table id="SourceTable" style="font: 8pt Verdana">
    <tr>
        <td style="padding-right:10;"><b>C# Source: </b></td>
        <td><a href='../../../../../howto/samples/assemblies/version/mathcssource.htm'>math.cs</a> &nbsp;&nbsp<a href='../../../../../howto/samples/assemblies/version/mathcfgsource.htm'>math.cfg</a> &nbsp;&nbsp<a href='../../../../../howto/samples/assemblies/version/makefilesource.htm'>makefile</a> &nbsp;&nbsp<a href='../../../../../howto/samples/assemblies/version/parser/parsercssource.htm'>parser/parser.cs</a> &nbsp;&nbsp<a href='../../../../../howto/samples/assemblies/version/parser/makefilesource.htm'>parser/makefile</a> &nbsp;&nbsp<a href='../../../../../howto/samples/assemblies/version/calcrv5/calcrcssource.htm'>calcrv5/calcr.cs</a> &nbsp;&nbsp<a href='../../../../../howto/samples/assemblies/version/calcrv5/makefilesource.htm'>calcrv5/makefile</a> &nbsp;&nbsp<a href='../../../../../howto/samples/assemblies/version/calcrv6/calcrcssource.htm'>calcrv6/calcr.cs</a> &nbsp;&nbsp<a href='../../../../../howto/samples/assemblies/version/calcrv6/makefilesource.htm'>calcrv6/makefile</a> &nbsp;&nbsp</td>
    </tr>
</table>

        </div>

        <xmp>using System;

namespace Samples.Math.Calculator
{
   public class Calc
   {
		public String GetResult(int arg1, Char op, int arg2)
		{
			switch(op)
			{
				case '+':
					return String.Format("Result: {0:####}", arg1 + arg2);
				case '-':
					return String.Format("Result: {0:####}", arg1 - arg2);
				case '*':
					return String.Format("Result: {0:####}", arg1 * arg2);
				case '/':
					return String.Format("Result: {0:####}", arg1 / arg2);
				default:
					return "Invalid operator: "+ op;
			}
		}

   }

}
</xmp>
        <span id="ErrorMessage" style="color:red"></span>

    </form>
