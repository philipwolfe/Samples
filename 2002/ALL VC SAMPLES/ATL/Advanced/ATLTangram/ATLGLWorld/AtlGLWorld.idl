// AtlTangramGLWorld.idl : IDL source for AtlTangramGLWorld.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (AtlTangramGLWorld.tlb) and marshalling code.

// ITangramModelEvent 
import "..\ATLTangramCanvas\ATLTangramCanvas.idl";
import "..\ATLModel\ATLModel.idl";
import "..\AtlGdiWorld\AtlGdiWorld.idl";
interface IAtlTangramGLWorld;

	[
	
		uuid(6B05C590-AF5B-11D0-B69F-00A0C903487A),
	
		helpstring("IAtlTangramGLVisual Interface"),
		pointer_default(unique)
	]
	interface IAtlTangramGLVisual : IAtlTangramVisual
	{
		HRESULT Initialize([in] IATLTangramModel* pModel, [in] IAtlTangramGLWorld* pWorld) ;	
		HRESULT DrawOn([in] IAtlTangramCanvas* pCanvas) ;    	
		[helpstring("method ReleaseConnectionPoint")] HRESULT ReleaseConnectionPoint();
	};

	[
	
		uuid(6B05C592-AF5B-11D0-B69F-00A0C903487A),
	
		helpstring("IAtlTangramGLWorld Interface"),
		pointer_default(unique)
	]
	interface IAtlTangramGLWorld : IAtlTangramWorld
	{
	   HRESULT ModelToDevice([in] TangramPoint2d pptIn, [out] TangramPoint2d* pptOut) ;
	};
[
	uuid(6B05C583-AF5B-11D0-B69F-00A0C903487A),
	version(1.0),
	helpstring("AtlTangramGLWorld 1.0 Type Library")
]
library AtlTangramGLWorldLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(6B05C591-AF5B-11D0-B69F-00A0C903487A),
		helpstring("AtlTangramGLVisual Class")
	]
	coclass AtlTangramGLVisual
	{
		[default] interface IAtlTangramGLVisual;
		interface IAtlTangramVisual ;
		interface IATLTangramModelEvent ;
	};
	[
		uuid(6B05C593-AF5B-11D0-B69F-00A0C903487A),
		helpstring("AtlTangramGLWorld Class")
	]
	coclass AtlTangramGLWorld
	{
		[default] interface IAtlTangramGLWorld;
		interface IAtlTangramWorld;
		interface IAtlTangramCanvas ;
	};
};
