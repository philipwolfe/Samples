// File: demoApp.cpp
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
// This source code is only intended as a supplement to the
// Microsoft Classes Reference and related electronic
// documentation provided with the library.
// See these sources for detailed information regarding the
// Microsoft C++ Libraries products.

#define _WIN32_WINDOWS 0x0500
// include the file generated by sproxy for simpleTestApp.dll
#include "SimpleSoapAppProxy.h"
using namespace SimpleSoapAppService;

// Include the header for the Debug client
#include "SoapDebugClient.h"

void main()
{
	
	CoInitialize(NULL);

	{
		BSTR bstrIn, bstrOut;
		
		// Instantiate the template on the debug client instead of one of the  ...Inet clients
		CSimpleSoapAppServiceT<CSoapDebugClient>	srv;
		
		// Set the path to the dll to be loaded
		// If this path is not set, the client looks for the dll in the current directory
		srv.SetSoapAppDllPath("..\\simpleSoapApp\\Debug\\simpleSoapApp.dll");

		//	Optional settings specific to CSoapDebugClient
		
		// Specify the Error file, used to dump errors - default is STD_ERR
		// srv.SetErrorFile("SoapDebugErrors.txt");
		
		// SPecify the Output file, used to dump HTTP and or SOAP content, default is STD_OUT
		// srv.SetOutputFile("SoapDebugDump.txt");
		
		// Logging options. May be any bitwise combination of 
		// - SOAP_DEBUG_LOG_SOAP
		// - SOAP_DEBUG_LOG_HTTP
		// - SOAP_DEBUG_LOG_NOTHING
		// - SOAP_DEBUG_LOG_ALL
		// Default is ...ALL
		// srv.SetLogOption(SOAP_DEBUG_LOG_SOAP);
		
		// Protocol to be used in communication. Default is HTTP/1.1
		// srv.SetProtocol("HTTP/1.0");

		
		// Everything after this line is NOT specific to the SoapDebugClient
		bstrIn	=	::SysAllocString(L"User");
		
		HRESULT hr = srv.HelloWorld(bstrIn, &bstrOut);
	
		printf("Return : %d\n", hr);
		if( SUCCEEDED(hr))
		{
			printf("Result %S\n", bstrOut);
			::SysFreeString( bstrOut);
		}
		
		srv.Cleanup();
	}
	CoUninitialize();
}