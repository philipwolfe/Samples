using System;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using DynamicFileManager;

namespace DynamicFiles
{
	/// <summary>
	/// Summary description for WebForm1.
	/// </summary>
	public class WebForm1 : System.Web.UI.Page
	{
		protected System.Web.UI.WebControls.Button bttnStoreImage;
		protected System.Web.UI.WebControls.TextBox fileID;
		protected System.Web.UI.WebControls.Button bttnRedirect;
		protected System.Web.UI.WebControls.DataGrid fileList;
		protected System.Web.UI.WebControls.DataList fileLinks;
		protected System.Web.UI.WebControls.Button bttnGetImage;
	
		private void Page_Load(object sender, System.EventArgs e)
		{
			FileManager fm = new FileManager();
			fileList.DataSource = fm.GetAllFileIDs();
			fileList.DataBind();
		}

		#region Web Form Designer generated code
		override protected void OnInit(EventArgs e)
		{
			//
			// CODEGEN: This call is required by the ASP.NET Web Form Designer.
			//
			InitializeComponent();
			base.OnInit(e);
		}
		
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent()
		{    
			this.bttnStoreImage.Click += new System.EventHandler(this.bttnStoreImage_Click);
			this.bttnGetImage.Click += new System.EventHandler(this.bttnGetImage_Click);
			this.bttnRedirect.Click += new System.EventHandler(this.bttnRedirect_Click);
			this.Load += new System.EventHandler(this.Page_Load);

		}
		#endregion

		private void bttnGetImage_Click(object sender, System.EventArgs e)
		{
			FileManager fm = new FileManager();
			System.IO.Stream s = null;
			try 
			{
				s = fm.GetLoadStream(fileID.Text);
				int bufferSize = 4096;
				byte[] buffer = new byte[4096];
				int numRead = s.Read(buffer, 0, bufferSize);
				while(numRead > 0) 
				{
					Context.Response.OutputStream.Write(buffer, 0, numRead);
					numRead = s.Read(buffer, 0, bufferSize);
				}
			}
			catch (ArgumentException ex)
			{
				Context.Trace.Write("GetImage", ex.Message);
				Context.Response.StatusCode = 404;
				Context.Response.End();
			}
			catch (Exception ex)
			{
				Context.Trace.Write("GetImage", ex.Message);
				throw ex;
			}
			finally
			{
				if (s != null) 
				{
					s.Close();
				}
				Context.Response.End();
			}
		}

		private void bttnStoreImage_Click(object sender, System.EventArgs e)
		{
			FileManager fm = new FileManager();

			#region CreateADynamicBitmap
			// create a new bitmap
			Bitmap bmp = new Bitmap(200, 100);
			Graphics g = Graphics.FromImage(bmp);

			// fill the background with blue
			g.FillRectangle(Brushes.Blue, 0, 0, 200, 100);

			// draw the current time in yellow
			string message = DateTime.Now.ToShortTimeString();
			Font f = new Font(FontFamily.GenericSansSerif, 20);
			SizeF size = g.MeasureString(message, f);
			g.DrawString(message, f, Brushes.Yellow, new PointF(100.0f-size.Width/2.0f, 50-size.Height/2));
			#endregion

			#region Store the bitmap in the file manager
			// store the bitmap with an autogenerated file ID
			string id;

			// get a stream to save the file
			System.IO.Stream s = fm.GetStorageStream(out id);

			// store the bitmap and close the stream
			bmp.Save(s, System.Drawing.Imaging.ImageFormat.Jpeg);
			s.Close();
			#endregion

			// save the stored file ID in the text box
			fileID.Text = id;

			// list all the valid file IDs for this session
			fileList.DataSource = fm.GetAllFileIDs();
			fileList.DataBind();
		}

		private void bttnRedirect_Click(object sender, System.EventArgs e)
		{
			// redirect the client to the files URL
			FileManager fm = new FileManager();
			Response.Redirect(fm.GenerateFileName(fileID.Text), false);
		}
	}
}
