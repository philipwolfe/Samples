//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.209
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace BTnet1 {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class ReleaseDataSet1 : DataSet {
        
        private BT_RELEASEDataTable tableBT_RELEASE;
        
        public ReleaseDataSet1() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected ReleaseDataSet1(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["BT_RELEASE"] != null)) {
                    this.Tables.Add(new BT_RELEASEDataTable(ds.Tables["BT_RELEASE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BT_RELEASEDataTable BT_RELEASE {
            get {
                return this.tableBT_RELEASE;
            }
        }
        
        public override DataSet Clone() {
            ReleaseDataSet1 cln = ((ReleaseDataSet1)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["BT_RELEASE"] != null)) {
                this.Tables.Add(new BT_RELEASEDataTable(ds.Tables["BT_RELEASE"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableBT_RELEASE = ((BT_RELEASEDataTable)(this.Tables["BT_RELEASE"]));
            if ((this.tableBT_RELEASE != null)) {
                this.tableBT_RELEASE.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "ReleaseDataSet1";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/ReleaseDataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableBT_RELEASE = new BT_RELEASEDataTable();
            this.Tables.Add(this.tableBT_RELEASE);
        }
        
        private bool ShouldSerializeBT_RELEASE() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void BT_RELEASERowChangeEventHandler(object sender, BT_RELEASERowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BT_RELEASEDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columncompletionTimestamp;
            
            private DataColumn columncreationTimestamp;
            
            private DataColumn columncreatorOID;
            
            private DataColumn columndeadlineTimestamp;
            
            private DataColumn columndescription;
            
            private DataColumn columnname;
            
            private DataColumn columnreleaseOID;
            
            private DataColumn columnversion;
            
            private DataColumn columnextra1;
            
            private DataColumn columnextra2;
            
            private DataColumn columnextra3;
            
            private DataColumn columnextra4;
            
            internal BT_RELEASEDataTable() : 
                    base("BT_RELEASE") {
                this.InitClass();
            }
            
            internal BT_RELEASEDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn completionTimestampColumn {
                get {
                    return this.columncompletionTimestamp;
                }
            }
            
            internal DataColumn creationTimestampColumn {
                get {
                    return this.columncreationTimestamp;
                }
            }
            
            internal DataColumn creatorOIDColumn {
                get {
                    return this.columncreatorOID;
                }
            }
            
            internal DataColumn deadlineTimestampColumn {
                get {
                    return this.columndeadlineTimestamp;
                }
            }
            
            internal DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            internal DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            internal DataColumn releaseOIDColumn {
                get {
                    return this.columnreleaseOID;
                }
            }
            
            internal DataColumn versionColumn {
                get {
                    return this.columnversion;
                }
            }
            
            internal DataColumn extra1Column {
                get {
                    return this.columnextra1;
                }
            }
            
            internal DataColumn extra2Column {
                get {
                    return this.columnextra2;
                }
            }
            
            internal DataColumn extra3Column {
                get {
                    return this.columnextra3;
                }
            }
            
            internal DataColumn extra4Column {
                get {
                    return this.columnextra4;
                }
            }
            
            public BT_RELEASERow this[int index] {
                get {
                    return ((BT_RELEASERow)(this.Rows[index]));
                }
            }
            
            public event BT_RELEASERowChangeEventHandler BT_RELEASERowChanged;
            
            public event BT_RELEASERowChangeEventHandler BT_RELEASERowChanging;
            
            public event BT_RELEASERowChangeEventHandler BT_RELEASERowDeleted;
            
            public event BT_RELEASERowChangeEventHandler BT_RELEASERowDeleting;
            
            public void AddBT_RELEASERow(BT_RELEASERow row) {
                this.Rows.Add(row);
            }
            
            public BT_RELEASERow AddBT_RELEASERow(System.DateTime completionTimestamp, System.DateTime creationTimestamp, string creatorOID, System.DateTime deadlineTimestamp, string description, string name, string releaseOID, string version, string extra1, string extra2, string extra3, string extra4) {
                BT_RELEASERow rowBT_RELEASERow = ((BT_RELEASERow)(this.NewRow()));
                rowBT_RELEASERow.ItemArray = new object[] {
                        completionTimestamp,
                        creationTimestamp,
                        creatorOID,
                        deadlineTimestamp,
                        description,
                        name,
                        releaseOID,
                        version,
                        extra1,
                        extra2,
                        extra3,
                        extra4};
                this.Rows.Add(rowBT_RELEASERow);
                return rowBT_RELEASERow;
            }
            
            public BT_RELEASERow FindByreleaseOID(string releaseOID) {
                return ((BT_RELEASERow)(this.Rows.Find(new object[] {
                            releaseOID})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                BT_RELEASEDataTable cln = ((BT_RELEASEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new BT_RELEASEDataTable();
            }
            
            internal void InitVars() {
                this.columncompletionTimestamp = this.Columns["completionTimestamp"];
                this.columncreationTimestamp = this.Columns["creationTimestamp"];
                this.columncreatorOID = this.Columns["creatorOID"];
                this.columndeadlineTimestamp = this.Columns["deadlineTimestamp"];
                this.columndescription = this.Columns["description"];
                this.columnname = this.Columns["name"];
                this.columnreleaseOID = this.Columns["releaseOID"];
                this.columnversion = this.Columns["version"];
                this.columnextra1 = this.Columns["extra1"];
                this.columnextra2 = this.Columns["extra2"];
                this.columnextra3 = this.Columns["extra3"];
                this.columnextra4 = this.Columns["extra4"];
            }
            
            private void InitClass() {
                this.columncompletionTimestamp = new DataColumn("completionTimestamp", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncompletionTimestamp);
                this.columncreationTimestamp = new DataColumn("creationTimestamp", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncreationTimestamp);
                this.columncreatorOID = new DataColumn("creatorOID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncreatorOID);
                this.columndeadlineTimestamp = new DataColumn("deadlineTimestamp", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndeadlineTimestamp);
                this.columndescription = new DataColumn("description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndescription);
                this.columnname = new DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnname);
                this.columnreleaseOID = new DataColumn("releaseOID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnreleaseOID);
                this.columnversion = new DataColumn("version", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnversion);
                this.columnextra1 = new DataColumn("extra1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnextra1);
                this.columnextra2 = new DataColumn("extra2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnextra2);
                this.columnextra3 = new DataColumn("extra3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnextra3);
                this.columnextra4 = new DataColumn("extra4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnextra4);
                this.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[] {
                                this.columnreleaseOID}, true));
                this.columnreleaseOID.AllowDBNull = false;
                this.columnreleaseOID.Unique = true;
            }
            
            public BT_RELEASERow NewBT_RELEASERow() {
                return ((BT_RELEASERow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new BT_RELEASERow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(BT_RELEASERow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BT_RELEASERowChanged != null)) {
                    this.BT_RELEASERowChanged(this, new BT_RELEASERowChangeEvent(((BT_RELEASERow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BT_RELEASERowChanging != null)) {
                    this.BT_RELEASERowChanging(this, new BT_RELEASERowChangeEvent(((BT_RELEASERow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BT_RELEASERowDeleted != null)) {
                    this.BT_RELEASERowDeleted(this, new BT_RELEASERowChangeEvent(((BT_RELEASERow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BT_RELEASERowDeleting != null)) {
                    this.BT_RELEASERowDeleting(this, new BT_RELEASERowChangeEvent(((BT_RELEASERow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveBT_RELEASERow(BT_RELEASERow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BT_RELEASERow : DataRow {
            
            private BT_RELEASEDataTable tableBT_RELEASE;
            
            internal BT_RELEASERow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableBT_RELEASE = ((BT_RELEASEDataTable)(this.Table));
            }
            
            public System.DateTime completionTimestamp {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableBT_RELEASE.completionTimestampColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBT_RELEASE.completionTimestampColumn] = value;
                }
            }
            
            public System.DateTime creationTimestamp {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableBT_RELEASE.creationTimestampColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBT_RELEASE.creationTimestampColumn] = value;
                }
            }
            
            public string creatorOID {
                get {
                    try {
                        return ((string)(this[this.tableBT_RELEASE.creatorOIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBT_RELEASE.creatorOIDColumn] = value;
                }
            }
            
            public System.DateTime deadlineTimestamp {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableBT_RELEASE.deadlineTimestampColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBT_RELEASE.deadlineTimestampColumn] = value;
                }
            }
            
            public string description {
                get {
                    try {
                        return ((string)(this[this.tableBT_RELEASE.descriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBT_RELEASE.descriptionColumn] = value;
                }
            }
            
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableBT_RELEASE.nameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBT_RELEASE.nameColumn] = value;
                }
            }
            
            public string releaseOID {
                get {
                    return ((string)(this[this.tableBT_RELEASE.releaseOIDColumn]));
                }
                set {
                    this[this.tableBT_RELEASE.releaseOIDColumn] = value;
                }
            }
            
            public string version {
                get {
                    try {
                        return ((string)(this[this.tableBT_RELEASE.versionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBT_RELEASE.versionColumn] = value;
                }
            }
            
            public string extra1 {
                get {
                    try {
                        return ((string)(this[this.tableBT_RELEASE.extra1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBT_RELEASE.extra1Column] = value;
                }
            }
            
            public string extra2 {
                get {
                    try {
                        return ((string)(this[this.tableBT_RELEASE.extra2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBT_RELEASE.extra2Column] = value;
                }
            }
            
            public string extra3 {
                get {
                    try {
                        return ((string)(this[this.tableBT_RELEASE.extra3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBT_RELEASE.extra3Column] = value;
                }
            }
            
            public string extra4 {
                get {
                    try {
                        return ((string)(this[this.tableBT_RELEASE.extra4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBT_RELEASE.extra4Column] = value;
                }
            }
            
            public bool IscompletionTimestampNull() {
                return this.IsNull(this.tableBT_RELEASE.completionTimestampColumn);
            }
            
            public void SetcompletionTimestampNull() {
                this[this.tableBT_RELEASE.completionTimestampColumn] = System.Convert.DBNull;
            }
            
            public bool IscreationTimestampNull() {
                return this.IsNull(this.tableBT_RELEASE.creationTimestampColumn);
            }
            
            public void SetcreationTimestampNull() {
                this[this.tableBT_RELEASE.creationTimestampColumn] = System.Convert.DBNull;
            }
            
            public bool IscreatorOIDNull() {
                return this.IsNull(this.tableBT_RELEASE.creatorOIDColumn);
            }
            
            public void SetcreatorOIDNull() {
                this[this.tableBT_RELEASE.creatorOIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsdeadlineTimestampNull() {
                return this.IsNull(this.tableBT_RELEASE.deadlineTimestampColumn);
            }
            
            public void SetdeadlineTimestampNull() {
                this[this.tableBT_RELEASE.deadlineTimestampColumn] = System.Convert.DBNull;
            }
            
            public bool IsdescriptionNull() {
                return this.IsNull(this.tableBT_RELEASE.descriptionColumn);
            }
            
            public void SetdescriptionNull() {
                this[this.tableBT_RELEASE.descriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsnameNull() {
                return this.IsNull(this.tableBT_RELEASE.nameColumn);
            }
            
            public void SetnameNull() {
                this[this.tableBT_RELEASE.nameColumn] = System.Convert.DBNull;
            }
            
            public bool IsversionNull() {
                return this.IsNull(this.tableBT_RELEASE.versionColumn);
            }
            
            public void SetversionNull() {
                this[this.tableBT_RELEASE.versionColumn] = System.Convert.DBNull;
            }
            
            public bool Isextra1Null() {
                return this.IsNull(this.tableBT_RELEASE.extra1Column);
            }
            
            public void Setextra1Null() {
                this[this.tableBT_RELEASE.extra1Column] = System.Convert.DBNull;
            }
            
            public bool Isextra2Null() {
                return this.IsNull(this.tableBT_RELEASE.extra2Column);
            }
            
            public void Setextra2Null() {
                this[this.tableBT_RELEASE.extra2Column] = System.Convert.DBNull;
            }
            
            public bool Isextra3Null() {
                return this.IsNull(this.tableBT_RELEASE.extra3Column);
            }
            
            public void Setextra3Null() {
                this[this.tableBT_RELEASE.extra3Column] = System.Convert.DBNull;
            }
            
            public bool Isextra4Null() {
                return this.IsNull(this.tableBT_RELEASE.extra4Column);
            }
            
            public void Setextra4Null() {
                this[this.tableBT_RELEASE.extra4Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BT_RELEASERowChangeEvent : EventArgs {
            
            private BT_RELEASERow eventRow;
            
            private DataRowAction eventAction;
            
            public BT_RELEASERowChangeEvent(BT_RELEASERow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public BT_RELEASERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
