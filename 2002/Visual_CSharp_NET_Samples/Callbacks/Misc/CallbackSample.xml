<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Resolve</name>
    </assembly>
    <members>
        <member name="T:CallbackSample.CallbackOption">
            <summary>
            The CallbackOption enumeration defines the demonstrations included in this sample.
            </summary>
        </member>
        <member name="T:CallbackSample.IResolveCallback">
            <summary>
            The IResolveCallback interface defines a callback method to use when the called
            object completes its work.
            </summary>
        </member>
        <member name="M:CallbackSample.IResolveCallback.HostResolved(System.Net.IPHostEntry)">
            <summary>
            This method will be called when the callback option is UseInterface
            and the host has been resolved.
            </summary>
            <param name="hostInformation">The host information returned to the caller.</param>
        </member>
        <member name="T:CallbackSample.ResolveCallbackDelegate">
            <summary>
            The ResolveCallbackDelegate is used to wrap calls having this signature.
            </summary>
        </member>
        <member name="T:CallbackSample.ResolveConsole">
            <summary>
            The ResolveConsole class demonstrates various types of callbacks and
            asynchronous calls.
            </summary>
        </member>
        <member name="M:CallbackSample.ResolveConsole.HostResolved(System.Net.IPHostEntry)">
            <summary>
            This method implements the IResolveCallback interface and allows
            a called object to inform the caller of any results.
            </summary>
            <param name="hostInformation">The host information resulting from
            a DNS resolution</param>
        </member>
        <member name="M:CallbackSample.ResolveConsole.DoResolve(System.String,CallbackSample.CallbackOption)">
            <summary>
            This method is called by the Main static method to perform the
            DNS resolutions requested by the user demonstrating the callback
            options specified.
            </summary>
            <param name="host">An IP address or host name to resolve</param>
            <param name="methodToUse">The callback option to demonstrate</param>
        </member>
        <member name="M:CallbackSample.ResolveConsole.DisplayResults(System.Net.IPHostEntry)">
            <summary>
            Display the host information from an IPHostEntry object
            </summary>
            <param name="hostInformation">An IPHostEntry object containing host information</param>
        </member>
        <member name="M:CallbackSample.ResolveConsole.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:CallbackSample.ResolveDelegate">
            <summary>
            The ResolveDelegate is used to wrap calls to methods having this signature.
            </summary>
        </member>
        <member name="T:CallbackSample.Resolver">
            <summary>
            The Resolver class supplies some synchronous methods to do DNS resolution
            with (this wraps the Dns.Resolve method defined by the framework, but any
            long-running operation will suffice).  Some of these methods accept a
            callback interface or delegate as a parameter to inform the caller when
            the operation is complete.
            </summary>
        </member>
        <member name="M:CallbackSample.Resolver.Resolve(System.String,CallbackSample.IResolveCallback)">
            <summary>
            Resolve an IP address or host name, and return the result synchronously
            through the interface provided.
            </summary>
            <param name="host">The IP address or host name to resolve</param>
            <param name="callbackInterface">The interface defining the callback method</param>
        </member>
        <member name="M:CallbackSample.Resolver.Resolve(System.String,CallbackSample.ResolveCallbackDelegate)">
            <summary>
            Resolve an IP address or host name, and return the result synchronously
            through the delegate passed in by the caller.
            </summary>
            <param name="host">The IP address or host name to resolve</param>
            <param name="callbackDelegate">The delegate wrapping the callback method</param>
        </member>
        <member name="M:CallbackSample.Resolver.Resolve(System.String)">
            <summary>
            Resolve an IP address or host name, and return the result synchronously.
            </summary>
            <param name="host">The IP address or host name to resolve</param>
            <returns>An IPHostEntry object containing information about the host</returns>
        </member>
    </members>
</doc>
