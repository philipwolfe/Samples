//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.2914.14
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace terraDemo.TerraServer {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    [System.Web.Services.WebServiceBindingAttribute(Name="TerraServiceSoap", Namespace="http://terraservice.net/terraserver/")]
    public class TerraService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public TerraService() {
            this.Url = "http://207.46.235.39/TerraService.asmx";
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/ConvertLonLatPtToNearestPlace", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConvertLonLatPtToNearestPlace([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] LonLatPt point) {
            object[] results = this.Invoke("ConvertLonLatPtToNearestPlace", new object[] {
                        point});
            return ((string)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginConvertLonLatPtToNearestPlace(LonLatPt point, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConvertLonLatPtToNearestPlace", new object[] {
                        point}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public string EndConvertLonLatPtToNearestPlace(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/ConvertLonLatPtToUtmPt", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public UtmPt ConvertLonLatPtToUtmPt([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] LonLatPt point) {
            object[] results = this.Invoke("ConvertLonLatPtToUtmPt", new object[] {
                        point});
            return ((UtmPt)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginConvertLonLatPtToUtmPt(LonLatPt point, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConvertLonLatPtToUtmPt", new object[] {
                        point}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public UtmPt EndConvertLonLatPtToUtmPt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UtmPt)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/ConvertUtmPtToLonLatPt", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public LonLatPt ConvertUtmPtToLonLatPt([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] UtmPt utm) {
            object[] results = this.Invoke("ConvertUtmPtToLonLatPt", new object[] {
                        utm});
            return ((LonLatPt)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginConvertUtmPtToLonLatPt(UtmPt utm, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConvertUtmPtToLonLatPt", new object[] {
                        utm}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public LonLatPt EndConvertUtmPtToLonLatPt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LonLatPt)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/ConvertPlaceToLonLatPt", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public LonLatPt ConvertPlaceToLonLatPt([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] Place place) {
            object[] results = this.Invoke("ConvertPlaceToLonLatPt", new object[] {
                        place});
            return ((LonLatPt)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginConvertPlaceToLonLatPt(Place place, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConvertPlaceToLonLatPt", new object[] {
                        place}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public LonLatPt EndConvertPlaceToLonLatPt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LonLatPt)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/CountPlacesInRect", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CountPlacesInRect([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] LonLatPt upperleft, [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] LonLatPt lowerright, PlaceType ptype) {
            object[] results = this.Invoke("CountPlacesInRect", new object[] {
                        upperleft,
                        lowerright,
                        ptype});
            return ((int)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginCountPlacesInRect(LonLatPt upperleft, LonLatPt lowerright, PlaceType ptype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CountPlacesInRect", new object[] {
                        upperleft,
                        lowerright,
                        ptype}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public int EndCountPlacesInRect(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/GetAreaFromPt", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public AreaBoundingBox GetAreaFromPt([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] LonLatPt center, Theme theme, Scale scale, int displayPixWidth, int displayPixHeight) {
            object[] results = this.Invoke("GetAreaFromPt", new object[] {
                        center,
                        theme,
                        scale,
                        displayPixWidth,
                        displayPixHeight});
            return ((AreaBoundingBox)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginGetAreaFromPt(LonLatPt center, Theme theme, Scale scale, int displayPixWidth, int displayPixHeight, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAreaFromPt", new object[] {
                        center,
                        theme,
                        scale,
                        displayPixWidth,
                        displayPixHeight}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public AreaBoundingBox EndGetAreaFromPt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AreaBoundingBox)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/GetAreaFromRect", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public AreaBoundingBox GetAreaFromRect([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] LonLatPt upperLeft, [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] LonLatPt lowerRight, Theme theme, Scale scale) {
            object[] results = this.Invoke("GetAreaFromRect", new object[] {
                        upperLeft,
                        lowerRight,
                        theme,
                        scale});
            return ((AreaBoundingBox)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginGetAreaFromRect(LonLatPt upperLeft, LonLatPt lowerRight, Theme theme, Scale scale, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAreaFromRect", new object[] {
                        upperLeft,
                        lowerRight,
                        theme,
                        scale}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public AreaBoundingBox EndGetAreaFromRect(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AreaBoundingBox)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/GetAreaFromTileId", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public AreaBoundingBox GetAreaFromTileId([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] TileId id, int displayPixWidth, int displayPixHeight) {
            object[] results = this.Invoke("GetAreaFromTileId", new object[] {
                        id,
                        displayPixWidth,
                        displayPixHeight});
            return ((AreaBoundingBox)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginGetAreaFromTileId(TileId id, int displayPixWidth, int displayPixHeight, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAreaFromTileId", new object[] {
                        id,
                        displayPixWidth,
                        displayPixHeight}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public AreaBoundingBox EndGetAreaFromTileId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AreaBoundingBox)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/GetLatLonMetrics", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ThemeBoundingBox", IsNullable=false)]
        public ThemeBoundingBox[] GetLatLonMetrics([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] LonLatPt point) {
            object[] results = this.Invoke("GetLatLonMetrics", new object[] {
                        point});
            return ((ThemeBoundingBox[])(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginGetLatLonMetrics(LonLatPt point, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatLonMetrics", new object[] {
                        point}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public ThemeBoundingBox[] EndGetLatLonMetrics(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ThemeBoundingBox[])(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/GetPlaceFacts", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public PlaceFacts GetPlaceFacts([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] Place place) {
            object[] results = this.Invoke("GetPlaceFacts", new object[] {
                        place});
            return ((PlaceFacts)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginGetPlaceFacts(Place place, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPlaceFacts", new object[] {
                        place}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public PlaceFacts EndGetPlaceFacts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PlaceFacts)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/GetPlaceList", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("PlaceFacts", IsNullable=false)]
        public PlaceFacts[] GetPlaceList(string placeName, int MaxItems, bool imagePresence) {
            object[] results = this.Invoke("GetPlaceList", new object[] {
                        placeName,
                        MaxItems,
                        imagePresence});
            return ((PlaceFacts[])(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginGetPlaceList(string placeName, int MaxItems, bool imagePresence, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPlaceList", new object[] {
                        placeName,
                        MaxItems,
                        imagePresence}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public PlaceFacts[] EndGetPlaceList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PlaceFacts[])(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/GetPlaceListInRect", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("PlaceFacts", IsNullable=false)]
        public PlaceFacts[] GetPlaceListInRect([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] LonLatPt upperleft, [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] LonLatPt lowerright, PlaceType ptype, int MaxItems) {
            object[] results = this.Invoke("GetPlaceListInRect", new object[] {
                        upperleft,
                        lowerright,
                        ptype,
                        MaxItems});
            return ((PlaceFacts[])(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginGetPlaceListInRect(LonLatPt upperleft, LonLatPt lowerright, PlaceType ptype, int MaxItems, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPlaceListInRect", new object[] {
                        upperleft,
                        lowerright,
                        ptype,
                        MaxItems}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public PlaceFacts[] EndGetPlaceListInRect(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PlaceFacts[])(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/GetTheme", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public ThemeInfo GetTheme(Theme theme) {
            object[] results = this.Invoke("GetTheme", new object[] {
                        theme});
            return ((ThemeInfo)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginGetTheme(Theme theme, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTheme", new object[] {
                        theme}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public ThemeInfo EndGetTheme(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ThemeInfo)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/GetTileMetaFromLonLatPt", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public TileMeta GetTileMetaFromLonLatPt([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] LonLatPt point, Theme theme, Scale scale) {
            object[] results = this.Invoke("GetTileMetaFromLonLatPt", new object[] {
                        point,
                        theme,
                        scale});
            return ((TileMeta)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginGetTileMetaFromLonLatPt(LonLatPt point, Theme theme, Scale scale, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTileMetaFromLonLatPt", new object[] {
                        point,
                        theme,
                        scale}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public TileMeta EndGetTileMetaFromLonLatPt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TileMeta)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/GetTileMetaFromTileId", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public TileMeta GetTileMetaFromTileId([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] TileId id) {
            object[] results = this.Invoke("GetTileMetaFromTileId", new object[] {
                        id});
            return ((TileMeta)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginGetTileMetaFromTileId(TileId id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTileMetaFromTileId", new object[] {
                        id}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public TileMeta EndGetTileMetaFromTileId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TileMeta)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice.net/terraserver/GetTile", RequestNamespace="http://terraservice.net/terraserver/", ResponseNamespace="http://terraservice.net/terraserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public System.Byte[] GetTile([System.Xml.Serialization.XmlElementAttribute(IsNullable=false)] TileId id) {
            object[] results = this.Invoke("GetTile", new object[] {
                        id});
            return ((System.Byte[])(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginGetTile(TileId id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTile", new object[] {
                        id}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.Byte[] EndGetTile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Byte[])(results[0]));
        }
    }
    
    public class LonLatPt {
        
        public System.Double Lon;
        
        public System.Double Lat;
    }
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://terraservice.net/terraserver/")]
    public class ThemeInfo {
        
        public Theme Theme;
        
        public string Name;
        
        public string Description;
        
        public string Supplier;
        
        public Scale LoScale;
        
        public Scale HiScale;
        
        public ProjectionType ProjectionId;
        
        public string ProjectionName;
        
        public string CopyrightNotice;
    }
    
    public enum Theme {
        
        Photo,
        
        Topo,
        
        Relief,
    }
    
    public enum Scale {
        
        Scale1mm,
        
        Scale2mm,
        
        Scale4mm,
        
        Scale8mm,
        
        Scale16mm,
        
        Scale32mm,
        
        Scale63mm,
        
        Scale125mm,
        
        Scale250mm,
        
        Scale500mm,
        
        Scale1m,
        
        Scale2m,
        
        Scale4m,
        
        Scale8m,
        
        Scale16m,
        
        Scale32m,
        
        Scale64m,
        
        Scale128m,
        
        Scale256m,
        
        Scale512m,
        
        Scale1km,
        
        Scale2km,
        
        Scale4km,
        
        Scale8km,
        
        Scale16km,
    }
    
    public enum ProjectionType {
        
        Geographic,
        
        UtmNad27,
        
        UtmNad83,
    }
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://terraservice.net/terraserver/")]
    public class PlaceFacts {
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public Place Place;
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public LonLatPt Center;
        
        public Themes AvailableThemeMask;
        
        public PlaceType PlaceTypeId;
        
        public int Population;
    }
    
    public class Place {
        
        public string City;
        
        public string State;
        
        public string Country;
    }
    
    [System.FlagsAttribute()]
    public enum Themes {
        
        Photo = 1,
        
        Topo = 2,
        
        Relief = 4,
    }
    
    public enum PlaceType {
        
        UnknownPlaceType,
        
        AirRailStation,
        
        BayGulf,
        
        CapePeninsula,
        
        CityTown,
        
        HillMountain,
        
        Island,
        
        Lake,
        
        OtherLandFeature,
        
        OtherWaterFeature,
        
        ParkBeach,
        
        PointOfInterest,
        
        River,
    }
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://terraservice.net/terraserver/")]
    public class ThemeBoundingBox {
        
        public Theme Theme;
        
        public string ThemeName;
        
        public int Sparseness;
        
        public Scale LoScale;
        
        public Scale HiScale;
        
        public ProjectionType ProjectionId;
        
        public string ProjectionName;
        
        public System.Double WestLongitude;
        
        public System.Double NorthLatitude;
        
        public System.Double EastLongitude;
        
        public System.Double SouthLatitude;
    }
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://terraservice.net/terraserver/")]
    public class OverlappingThemeInfo {
        
        public bool LocalTheme;
        
        public Theme Theme;
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public LonLatPt Point;
        
        public string ThemeName;
        
        public System.DateTime Capture;
        
        public ProjectionType ProjectionId;
        
        public Scale LoScale;
        
        public Scale HiScale;
        
        public string Url;
    }
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://terraservice.net/terraserver/")]
    public class LonLatPtOffset {
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public LonLatPt Point;
        
        public int XOffset;
        
        public int YOffset;
    }
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://terraservice.net/terraserver/")]
    public class TileId {
        
        public Theme Theme;
        
        public Scale Scale;
        
        public int Scene;
        
        public int X;
        
        public int Y;
    }
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://terraservice.net/terraserver/")]
    public class TileMeta {
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public TileId Id;
        
        public bool TileExists;
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public LonLatPt NorthWest;
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public LonLatPt NorthEast;
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public LonLatPt SouthWest;
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public LonLatPt SouthEast;
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public LonLatPt Center;
        
        public System.DateTime Capture;
    }
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://terraservice.net/terraserver/")]
    public class AreaCoordinate {
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public TileMeta TileMeta;
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public LonLatPtOffset Offset;
    }
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://terraservice.net/terraserver/")]
    public class AreaBoundingBox {
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public AreaCoordinate NorthWest;
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public AreaCoordinate NorthEast;
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public AreaCoordinate SouthWest;
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public AreaCoordinate SouthEast;
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public AreaCoordinate Center;
        
        public string NearestPlace;
        
        [System.Xml.Serialization.XmlArrayItemAttribute("OverlappingThemeInfo", IsNullable=false)]
        public OverlappingThemeInfo[] OverlappingThemeInfos;
    }
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://terraservice.net/terraserver/")]
    public class UtmPt {
        
        public int Zone;
        
        public System.Double X;
        
        public System.Double Y;
    }
}
