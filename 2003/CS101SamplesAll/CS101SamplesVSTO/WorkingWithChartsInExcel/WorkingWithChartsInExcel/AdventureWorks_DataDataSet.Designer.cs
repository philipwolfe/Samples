//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.26
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WorkingWithChartsInExcel {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("AdventureWorks_DataDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AdventureWorks_DataDataSet : System.Data.DataSet {
        
        private vSalesPersonSalesByFiscalYearsDataTable tablevSalesPersonSalesByFiscalYears;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AdventureWorks_DataDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected AdventureWorks_DataDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["vSalesPersonSalesByFiscalYears"] != null)) {
                    base.Tables.Add(new vSalesPersonSalesByFiscalYearsDataTable(ds.Tables["vSalesPersonSalesByFiscalYears"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vSalesPersonSalesByFiscalYearsDataTable vSalesPersonSalesByFiscalYears {
            get {
                return this.tablevSalesPersonSalesByFiscalYears;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            AdventureWorks_DataDataSet cln = ((AdventureWorks_DataDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["vSalesPersonSalesByFiscalYears"] != null)) {
                    base.Tables.Add(new vSalesPersonSalesByFiscalYearsDataTable(ds.Tables["vSalesPersonSalesByFiscalYears"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablevSalesPersonSalesByFiscalYears = ((vSalesPersonSalesByFiscalYearsDataTable)(base.Tables["vSalesPersonSalesByFiscalYears"]));
            if ((initTable == true)) {
                if ((this.tablevSalesPersonSalesByFiscalYears != null)) {
                    this.tablevSalesPersonSalesByFiscalYears.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "AdventureWorks_DataDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AdventureWorks_DataDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablevSalesPersonSalesByFiscalYears = new vSalesPersonSalesByFiscalYearsDataTable();
            base.Tables.Add(this.tablevSalesPersonSalesByFiscalYears);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevSalesPersonSalesByFiscalYears() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            AdventureWorks_DataDataSet ds = new AdventureWorks_DataDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void vSalesPersonSalesByFiscalYearsRowChangeEventHandler(object sender, vSalesPersonSalesByFiscalYearsRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vSalesPersonSalesByFiscalYearsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnFullName;
            
            private System.Data.DataColumn column2002;
            
            private System.Data.DataColumn column2003;
            
            private System.Data.DataColumn column2004;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSalesPersonSalesByFiscalYearsDataTable() {
                this.TableName = "vSalesPersonSalesByFiscalYears";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vSalesPersonSalesByFiscalYearsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vSalesPersonSalesByFiscalYearsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn _2002Column {
                get {
                    return this.column2002;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn _2003Column {
                get {
                    return this.column2003;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn _2004Column {
                get {
                    return this.column2004;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSalesPersonSalesByFiscalYearsRow this[int index] {
                get {
                    return ((vSalesPersonSalesByFiscalYearsRow)(this.Rows[index]));
                }
            }
            
            public event vSalesPersonSalesByFiscalYearsRowChangeEventHandler vSalesPersonSalesByFiscalYearsRowChanging;
            
            public event vSalesPersonSalesByFiscalYearsRowChangeEventHandler vSalesPersonSalesByFiscalYearsRowChanged;
            
            public event vSalesPersonSalesByFiscalYearsRowChangeEventHandler vSalesPersonSalesByFiscalYearsRowDeleting;
            
            public event vSalesPersonSalesByFiscalYearsRowChangeEventHandler vSalesPersonSalesByFiscalYearsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvSalesPersonSalesByFiscalYearsRow(vSalesPersonSalesByFiscalYearsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSalesPersonSalesByFiscalYearsRow AddvSalesPersonSalesByFiscalYearsRow(string FullName, decimal _2002, decimal _2003, decimal _2004) {
                vSalesPersonSalesByFiscalYearsRow rowvSalesPersonSalesByFiscalYearsRow = ((vSalesPersonSalesByFiscalYearsRow)(this.NewRow()));
                rowvSalesPersonSalesByFiscalYearsRow.ItemArray = new object[] {
                        FullName,
                        _2002,
                        _2003,
                        _2004};
                this.Rows.Add(rowvSalesPersonSalesByFiscalYearsRow);
                return rowvSalesPersonSalesByFiscalYearsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vSalesPersonSalesByFiscalYearsDataTable cln = ((vSalesPersonSalesByFiscalYearsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vSalesPersonSalesByFiscalYearsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFullName = base.Columns["FullName"];
                this.column2002 = base.Columns["2002"];
                this.column2003 = base.Columns["2003"];
                this.column2004 = base.Columns["2004"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFullName = new System.Data.DataColumn("FullName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.column2002 = new System.Data.DataColumn("2002", typeof(decimal), null, System.Data.MappingType.Element);
                this.column2002.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_2002");
                this.column2002.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_2002Column");
                this.column2002.ExtendedProperties.Add("Generator_UserColumnName", "2002");
                base.Columns.Add(this.column2002);
                this.column2003 = new System.Data.DataColumn("2003", typeof(decimal), null, System.Data.MappingType.Element);
                this.column2003.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_2003");
                this.column2003.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_2003Column");
                this.column2003.ExtendedProperties.Add("Generator_UserColumnName", "2003");
                base.Columns.Add(this.column2003);
                this.column2004 = new System.Data.DataColumn("2004", typeof(decimal), null, System.Data.MappingType.Element);
                this.column2004.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_2004");
                this.column2004.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_2004Column");
                this.column2004.ExtendedProperties.Add("Generator_UserColumnName", "2004");
                base.Columns.Add(this.column2004);
                this.columnFullName.MaxLength = 152;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSalesPersonSalesByFiscalYearsRow NewvSalesPersonSalesByFiscalYearsRow() {
                return ((vSalesPersonSalesByFiscalYearsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vSalesPersonSalesByFiscalYearsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vSalesPersonSalesByFiscalYearsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vSalesPersonSalesByFiscalYearsRowChanged != null)) {
                    this.vSalesPersonSalesByFiscalYearsRowChanged(this, new vSalesPersonSalesByFiscalYearsRowChangeEvent(((vSalesPersonSalesByFiscalYearsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vSalesPersonSalesByFiscalYearsRowChanging != null)) {
                    this.vSalesPersonSalesByFiscalYearsRowChanging(this, new vSalesPersonSalesByFiscalYearsRowChangeEvent(((vSalesPersonSalesByFiscalYearsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vSalesPersonSalesByFiscalYearsRowDeleted != null)) {
                    this.vSalesPersonSalesByFiscalYearsRowDeleted(this, new vSalesPersonSalesByFiscalYearsRowChangeEvent(((vSalesPersonSalesByFiscalYearsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vSalesPersonSalesByFiscalYearsRowDeleting != null)) {
                    this.vSalesPersonSalesByFiscalYearsRowDeleting(this, new vSalesPersonSalesByFiscalYearsRowChangeEvent(((vSalesPersonSalesByFiscalYearsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevSalesPersonSalesByFiscalYearsRow(vSalesPersonSalesByFiscalYearsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                AdventureWorks_DataDataSet ds = new AdventureWorks_DataDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vSalesPersonSalesByFiscalYearsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vSalesPersonSalesByFiscalYearsRow : System.Data.DataRow {
            
            private vSalesPersonSalesByFiscalYearsDataTable tablevSalesPersonSalesByFiscalYears;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vSalesPersonSalesByFiscalYearsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevSalesPersonSalesByFiscalYears = ((vSalesPersonSalesByFiscalYearsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tablevSalesPersonSalesByFiscalYears.FullNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FullName\' in table \'vSalesPersonSalesByFiscalYears\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablevSalesPersonSalesByFiscalYears.FullNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _2002 {
                get {
                    try {
                        return ((decimal)(this[this.tablevSalesPersonSalesByFiscalYears._2002Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'2002\' in table \'vSalesPersonSalesByFiscalYears\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevSalesPersonSalesByFiscalYears._2002Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _2003 {
                get {
                    try {
                        return ((decimal)(this[this.tablevSalesPersonSalesByFiscalYears._2003Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'2003\' in table \'vSalesPersonSalesByFiscalYears\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevSalesPersonSalesByFiscalYears._2003Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _2004 {
                get {
                    try {
                        return ((decimal)(this[this.tablevSalesPersonSalesByFiscalYears._2004Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'2004\' in table \'vSalesPersonSalesByFiscalYears\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevSalesPersonSalesByFiscalYears._2004Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullNameNull() {
                return this.IsNull(this.tablevSalesPersonSalesByFiscalYears.FullNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullNameNull() {
                this[this.tablevSalesPersonSalesByFiscalYears.FullNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_2002Null() {
                return this.IsNull(this.tablevSalesPersonSalesByFiscalYears._2002Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_2002Null() {
                this[this.tablevSalesPersonSalesByFiscalYears._2002Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_2003Null() {
                return this.IsNull(this.tablevSalesPersonSalesByFiscalYears._2003Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_2003Null() {
                this[this.tablevSalesPersonSalesByFiscalYears._2003Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_2004Null() {
                return this.IsNull(this.tablevSalesPersonSalesByFiscalYears._2004Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_2004Null() {
                this[this.tablevSalesPersonSalesByFiscalYears._2004Column] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vSalesPersonSalesByFiscalYearsRowChangeEvent : System.EventArgs {
            
            private vSalesPersonSalesByFiscalYearsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSalesPersonSalesByFiscalYearsRowChangeEvent(vSalesPersonSalesByFiscalYearsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSalesPersonSalesByFiscalYearsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WorkingWithChartsInExcel.AdventureWorks_DataDataSetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vSalesPersonSalesByFiscalYearsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vSalesPersonSalesByFiscalYearsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vSalesPersonSalesByFiscalYears";
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("2002", "2002");
            tableMapping.ColumnMappings.Add("2003", "2003");
            tableMapping.ColumnMappings.Add("2004", "2004");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WorkingWithChartsInExcel.Properties.Settings.Default.AdventureWorks_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FullName, [2002], [2003], [2004] FROM Sales.vSalesPersonSalesByFiscalYears" +
                "";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AdventureWorks_DataDataSet.vSalesPersonSalesByFiscalYearsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AdventureWorks_DataDataSet.vSalesPersonSalesByFiscalYearsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AdventureWorks_DataDataSet.vSalesPersonSalesByFiscalYearsDataTable dataTable = new AdventureWorks_DataDataSet.vSalesPersonSalesByFiscalYearsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591