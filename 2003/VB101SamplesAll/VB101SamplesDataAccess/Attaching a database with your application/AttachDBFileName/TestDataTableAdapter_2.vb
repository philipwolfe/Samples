Imports System
Imports System.Collections.Generic
Imports System.Text
Imports System.Data.SqlClient
Imports System.Reflection
Imports System.IO
Imports System.Configuration


Namespace PerfTestDataSetTableAdapters
    ''' <summary>
    ''' This partial clas extends the functionality
    ''' that exists when the TestDataTableAdapter class is generated
    ''' You use a partial class to indicated that it is part of the main class.
    ''' </summary>
    Partial Public Class TestDataTableAdapter

        ''' <summary>
        ''' This method executes a query that is sent in as a parameter.
        ''' It creates and opens a the SqlCommand connection by using the autogenerated
        ''' connection string from the TestDataTableAdapter.  The command object then
        ''' executes a non-query.
        ''' </summary>
        ''' <param name="QueryString"></param>
        ''' <returns></returns>

        Public Function QueryInsert(ByVal QueryString As String) As Integer


            Dim command As New SqlCommand
            Dim myConnection As SqlConnection
            Dim returnValue As Integer
            command.CommandText = QueryString

            Try
                myConnection = Connection()
                command.Connection = myConnection
                command.Connection.Open()
                returnValue = command.ExecuteNonQuery()
            Finally
                command.Connection.Close()
            End Try

            Return returnValue

        End Function

        ''' <summary>
        ''' ''' This method executes a stored procedure with three parameters.
        ''' It creates and opens a the SqlCommand connection by using the autogenerated
        ''' connection string from the TestDataTableAdapter.  The command object then
        ''' executes a non-query.
        ''' </summary>
        ''' <param name="QueryString"></param>
        ''' <param name="Parameter1"></param>
        ''' <param name="Parameter2"></param>
        ''' <param name="Parameter3"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function StoredProcedureQueryInsert(ByVal QueryString As String, ByVal Parameter1 As String, ByVal Parameter2 As String, ByVal Parameter3 As String) As Integer


            Dim command As New SqlCommand()
            Dim returnValue As Integer
            
            Try

                command.CommandText = QueryString
                command.Connection = Me.Connection
                command.Connection.Open()

                command.Parameters.AddWithValue("@firstValue", Parameter1)
                command.Parameters.AddWithValue("@secondValue", Parameter2)
                command.Parameters.AddWithValue("@timeStamp", Parameter3)
                command.CommandType = Data.CommandType.StoredProcedure
                returnValue = command.ExecuteNonQuery()
            Catch ex As Exception
                Dim fu As String = ex.Message
            Finally

                command.Connection.Close()


            End Try

            Return returnValue

        End Function


        ''' <summary>
        ''' This method sets the connection string to access the second database.
        ''' </summary>
        Public Sub AttachDB2()

            If m_connection Is Nothing Then

                m_connection = New SqlConnection()
                InitConnection()

            Else
                m_connection.Close()
            End If

            m_connection.ConnectionString = ConfigurationManager.ConnectionStrings("DB2").ConnectionString

        End Sub
        ''' <summary>
        ''' This method sets the connection string to access the first database.
        ''' </summary>
        Public Sub AttachDB1()

            If m_connection Is Nothing Then

                m_connection = New SqlConnection()
                InitConnection()

            Else
                m_connection.Close()
            End If

            m_connection.ConnectionString = ConfigurationManager.ConnectionStrings("DB1").ConnectionString

        End Sub

    End Class

End Namespace
