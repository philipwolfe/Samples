'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50215.44
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50215.44.
'
Namespace IgnyteTheaterMovieService
    
    '''<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="MovieInformationSoap", [Namespace]:="http://www.ignyte.com/whatsshowing")>  _
    Partial Public Class MovieInformation
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetTheatersAndMoviesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUpcomingMoviesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = WorkingWithXMLInExcel.Settings.Default.WorkingWithXMLInExcel_IgnyteTheaterMovieService_MovieInformation
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetTheatersAndMoviesCompleted As GetTheatersAndMoviesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUpcomingMoviesCompleted As GetUpcomingMoviesCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ignyte.com/whatsshowing/GetTheatersAndMovies", RequestNamespace:="http://www.ignyte.com/whatsshowing", ResponseNamespace:="http://www.ignyte.com/whatsshowing", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTheatersAndMovies(ByVal zipCode As String, ByVal radius As Integer) As Theater()
            Dim results() As Object = Me.Invoke("GetTheatersAndMovies", New Object() {zipCode, radius})
            Return CType(results(0),Theater())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTheatersAndMoviesAsync(ByVal zipCode As String, ByVal radius As Integer)
            Me.GetTheatersAndMoviesAsync(zipCode, radius, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTheatersAndMoviesAsync(ByVal zipCode As String, ByVal radius As Integer, ByVal userState As Object)
            If (Me.GetTheatersAndMoviesOperationCompleted Is Nothing) Then
                Me.GetTheatersAndMoviesOperationCompleted = AddressOf Me.OnGetTheatersAndMoviesOperationCompleted
            End If
            Me.InvokeAsync("GetTheatersAndMovies", New Object() {zipCode, radius}, Me.GetTheatersAndMoviesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTheatersAndMoviesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTheatersAndMoviesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTheatersAndMoviesCompleted(Me, New GetTheatersAndMoviesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ignyte.com/whatsshowing/GetUpcomingMovies", RequestNamespace:="http://www.ignyte.com/whatsshowing", ResponseNamespace:="http://www.ignyte.com/whatsshowing", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUpcomingMovies(ByVal month As Integer, ByVal year As Integer) As UpcomingMovie()
            Dim results() As Object = Me.Invoke("GetUpcomingMovies", New Object() {month, year})
            Return CType(results(0),UpcomingMovie())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUpcomingMoviesAsync(ByVal month As Integer, ByVal year As Integer)
            Me.GetUpcomingMoviesAsync(month, year, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUpcomingMoviesAsync(ByVal month As Integer, ByVal year As Integer, ByVal userState As Object)
            If (Me.GetUpcomingMoviesOperationCompleted Is Nothing) Then
                Me.GetUpcomingMoviesOperationCompleted = AddressOf Me.OnGetUpcomingMoviesOperationCompleted
            End If
            Me.InvokeAsync("GetUpcomingMovies", New Object() {month, year}, Me.GetUpcomingMoviesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUpcomingMoviesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUpcomingMoviesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUpcomingMoviesCompleted(Me, New GetUpcomingMoviesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If (((wsUri.Port >= 1024)  _
                        AndAlso (wsUri.Port <= 5000))  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", true) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.ignyte.com/whatsshowing")>  _
    Partial Public Class Theater
        
        Private nameField As String
        
        Private addressField As String
        
        Private moviesField() As Movie
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address() As String
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Movies() As Movie()
            Get
                Return Me.moviesField
            End Get
            Set
                Me.moviesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.ignyte.com/whatsshowing")>  _
    Partial Public Class Movie
        
        Private ratingField As String
        
        Private nameField As String
        
        Private runningTimeField As String
        
        Private showTimesField As String
        
        '''<remarks/>
        Public Property Rating() As String
            Get
                Return Me.ratingField
            End Get
            Set
                Me.ratingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RunningTime() As String
            Get
                Return Me.runningTimeField
            End Get
            Set
                Me.runningTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowTimes() As String
            Get
                Return Me.showTimesField
            End Get
            Set
                Me.showTimesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.ignyte.com/whatsshowing")>  _
    Partial Public Class UpcomingMovie
        
        Private movieNameField As String
        
        '''<remarks/>
        Public Property MovieName() As String
            Get
                Return Me.movieNameField
            End Get
            Set
                Me.movieNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    Public Delegate Sub GetTheatersAndMoviesCompletedEventHandler(ByVal sender As Object, ByVal e As GetTheatersAndMoviesCompletedEventArgs)
    
    '''<remarks/>
    Partial Public Class GetTheatersAndMoviesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Theater()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Theater())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    Public Delegate Sub GetUpcomingMoviesCompletedEventHandler(ByVal sender As Object, ByVal e As GetUpcomingMoviesCompletedEventArgs)
    
    '''<remarks/>
    Partial Public Class GetUpcomingMoviesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UpcomingMovie()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UpcomingMovie())
            End Get
        End Property
    End Class
End Namespace
