Imports System.Data
Imports System.Data.Sqlclient
Imports System.ComponentModel

Public Class Form1
    ' A DataSet of Employee data, used for the 2nd and 3rd tabs
    Private employeeDataSet As DataSet

    ' A List of Employees, for use as a DataSource for binding on the 3rd tab
    Private employeesList As System.Collections.Generic.List(Of Employee)

    Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        ' TODO: This line of code loads data into the 'adventureWorks_DataDataSet.Employee' table. You can move, or remove it, as needed.
        Me.employeeTableAdapter.Fill(Me.adventureWorks_DataDataSet.Employee)

        ' NOTE:
        ' Method code above this was generated by the IDE as part of
        ' the design time work on the first tab
        '

        ' Retrieve the employee data
        Me.employeeDataSet = LoadDBData()
        SetupGrid2()
        SetupGrid3()
    End Sub

		private sub SetupGrid2()
		
			' Create a BindingSource of employees
        Dim dbBindingSource As New BindingSource()
        dbBindingSource.DataSource = Me.employeeDataSet.Tables("Employee")
        dbBindingSource.AllowNew = False

			' Create a BindingNavigator for navigating through the Employees
        Dim dbBindingNavigator As New BindingNavigator(True)
        dbBindingNavigator.BindingSource = dbBindingSource

			' Bind the controls to the BindingSource
        Me.dbBirthDateDateTimePicker.DataBindings.Add( _
            New System.Windows.Forms.Binding("Text", dbBindingSource, "BirthDate", True))
        Me.dbEmployeeIdTextBox.DataBindings.Add( _
           New System.Windows.Forms.Binding("Text", dbBindingSource, "EmployeeId", True))
        Me.dbFirstNameTextBox.DataBindings.Add( _
           New System.Windows.Forms.Binding("Text", dbBindingSource, "FirstName", True))
        Me.dbHireDateDateTimePicker.DataBindings.Add( _
           New System.Windows.Forms.Binding("Text", dbBindingSource, "HireDate", True))
        Me.dbLastNameTextBox.DataBindings.Add( _
            New System.Windows.Forms.Binding("Text", dbBindingSource, "LastName", True))
        Me.dbMaritalStatusTextBox.DataBindings.Add( _
            New System.Windows.Forms.Binding("Text", dbBindingSource, "MaritalStatus", True))
        Me.dbTitleTextBox.DataBindings.Add( _
          New System.Windows.Forms.Binding("Text", dbBindingSource, "Title", True))

			' Place navigator on 2nd tab
			me.tabPage2.Controls.Add(dbBindingNavigator)
			dbBindingNavigator.Dock = DockStyle.Top
    End Sub

    Private Sub SetupGrid3()

        ' Wrap the employee class around the employee data
        Me.employeesList = Employee.LoadEmployees(Me.employeeDataSet.Tables("Employee"))

        ' Create a BindingSource of employees
        Dim classBindingSource As New BindingSource()
        classBindingSource.DataSource = Me.employeesList
        classBindingSource.AllowNew = False

        ' Create a BindingNavigator for navigating through the Employees
        Dim classBindingNavigator As New BindingNavigator(True)
        classBindingNavigator.BindingSource = classBindingSource

        ' Bind the controls to the BindingSource
        Me.classBirthDateDateTimePicker.DataBindings.Add( _
            New System.Windows.Forms.Binding("Text", classBindingSource, "BirthDate", True))
        Me.classEmployeeIdTextBox.DataBindings.Add( _
           New System.Windows.Forms.Binding("Text", classBindingSource, "EmployeeId", True))
        Me.classFirstNameTextBox.DataBindings.Add( _
           New System.Windows.Forms.Binding("Text", classBindingSource, "FirstName", True))
        Me.classHireDateDateTimePicker.DataBindings.Add( _
           New System.Windows.Forms.Binding("Text", classBindingSource, "HireDate", True))
        Me.classLastNameTextBox.DataBindings.Add( _
          New System.Windows.Forms.Binding("Text", classBindingSource, "LastName", True))
        Me.classMaritalStatusTextBox.DataBindings.Add( _
           New System.Windows.Forms.Binding("Text", classBindingSource, "MaritalStatus", True))
        Me.classTitleTextBox.DataBindings.Add( _
           New System.Windows.Forms.Binding("Text", classBindingSource, "Title", True))

        ' Place navigator on 3rd tab
        Me.tabPage3.Controls.Add(classBindingNavigator)
        classBindingNavigator.Dock = DockStyle.Top
    End Sub

    ' Retrieve Employee data from the database
    Private Function LoadDBData() As DataSet

        Try

            ' Retrieve Employee data from database into a DataSet
            ' Build a connnection string to the database
            Dim connectStringBuilder As New SqlConnectionStringBuilder()
            connectStringBuilder.DataSource = ".\SQLEXPRESS"
            connectStringBuilder.AttachDBFilename = "C:\Program Files\Microsoft SQL Server\MSSQL.1\MSSQL\Data\AdventureWorks_Data.mdf"
            connectStringBuilder.IntegratedSecurity = True
            connectStringBuilder.UserInstance = True

            ' Prepare a DataSet to receive the Employee data
            Dim ds As New DataSet()

            ' Open connection to the AdventureWorks database
            Using connection As New SqlConnection(connectStringBuilder.ConnectionString)

                connection.Open()

                ' Retrieve Employee data
                ' By joining off to the Contact table, 
                ' this data contains the Employee's first and last names
                Dim employeeCommand As New SqlCommand( _
                 "SELECT TOP 100" _
                   + "  Employee.*" _
                   + ", EmployeeContact.*" _
                   + " FROM [HumanResources].[Employee] AS Employee" _
                   + " INNER JOIN [Person].[Contact] AS EmployeeContact ON (EmployeeContact.ContactID = Employee.ContactID)" _
                   + " ORDER BY Employee.EmployeeID", _
                 connection)

                Using dataReaderEmployees As SqlDataReader = employeeCommand.ExecuteReader()

                    ' Load the data into the DataSet
                    ds.Load( _
                     dataReaderEmployees, _
                     LoadOption.OverwriteChanges, _
                     New String() {"Employee"})
                End Using

                ' Close the connection to the database
                connection.Close()
            End Using

            Return ds
        Catch err As SqlException

            MessageBox.Show(err.Message, "SQL Exception", MessageBoxButtons.OK, MessageBoxIcon.Error)
            Return Nothing
        End Try
    End Function

    Private Sub employeeIDTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles employeeIDTextBox.Validating
        Me.HandleValidation(sender, e, Me.employeeIDTextBox.Text.Trim(), False)
    End Sub

    Private Sub titleTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles titleTextBox.Validating
        Me.HandleValidation(sender, e, Me.titleTextBox.Text.Trim(), False)
    End Sub

    Private Sub maritalStatusTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles maritalStatusTextBox.Validating
        Me.HandleValidation(sender, e, Me.maritalStatusTextBox.Text.Trim(), False)
    End Sub

    Private Sub genderTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles genderTextBox.Validating
        Me.HandleValidation(sender, e, Me.genderTextBox.Text.Trim(), False)
    End Sub

    Private Sub HandleValidation(ByVal sender As Object, ByVal e As CancelEventArgs, ByVal text As String, ByVal requiresNumeric As Boolean)
        Dim err As String = Nothing
        Dim numericFailed As Boolean = False
        If requiresNumeric Then
            Dim output As Integer
            Dim isNumeric As Boolean = Integer.TryParse(text, output)
            numericFailed = Not isNumeric
        End If
        If ((text.Length = 0) OrElse numericFailed) Then
            err = IIf(requiresNumeric, "Required Numeric Field", "Required Field")
            ErrorProvider1.SetError(CType(sender, Control), err)
            e.Cancel = True
        Else
            ErrorProvider1.Clear()
        End If
    End Sub

    Private Sub dbEmployeeIdTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles dbEmployeeIdTextBox.Validating
        Me.HandleValidation(sender, e, Me.dbEmployeeIdTextBox.Text.Trim(), True)
    End Sub

    Private Sub dbFirstNameTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles dbFirstNameTextBox.Validating
        Me.HandleValidation(sender, e, Me.dbFirstNameTextBox.Text.Trim(), False)
    End Sub

    Private Sub dbLastNameTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles dbLastNameTextBox.Validating
        Me.HandleValidation(sender, e, Me.dbLastNameTextBox.Text.Trim(), False)
    End Sub

    Private Sub dbTitleTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles dbTitleTextBox.Validating
        Me.HandleValidation(sender, e, Me.dbTitleTextBox.Text.Trim(), False)
    End Sub

    Private Sub dbMaritalStatusTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles dbMaritalStatusTextBox.Validating
        Me.HandleValidation(sender, e, Me.dbMaritalStatusTextBox.Text.Trim(), False)
    End Sub

    Private Sub classFirstNameTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles classFirstNameTextBox.Validating
        Me.HandleValidation(sender, e, Me.classFirstNameTextBox.Text.Trim(), False)
    End Sub

    Private Sub classLastNameTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles classLastNameTextBox.Validating
        Me.HandleValidation(sender, e, Me.classLastNameTextBox.Text.Trim(), False)
    End Sub

    Private Sub classTitleTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles classTitleTextBox.Validating
        Me.HandleValidation(sender, e, Me.classTitleTextBox.Text.Trim(), False)
    End Sub

    Private Sub classMaritalStatusTextBox_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles classMaritalStatusTextBox.Validating
        Me.HandleValidation(sender, e, Me.classMaritalStatusTextBox.Text.Trim(), False)
    End Sub
End Class
