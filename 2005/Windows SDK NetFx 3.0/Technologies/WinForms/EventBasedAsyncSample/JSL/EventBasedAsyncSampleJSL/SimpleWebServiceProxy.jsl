package SimpleWebServices; 
import System.Windows.Forms.*;

//---------------------------------------------------------------------
//  This file is part of the Microsoft.NET Framework SDK Code Samples.
// 
//  Copyright (C) Microsoft Corporation.  All rights reserved.
// 
//This source code is intended only as a supplement to Microsoft
//Development Tools and/or on-line documentation.  See these other
//materials for detailed information regarding Microsoft code samples.
// 
//THIS CODE AND INFORMATION ARE PROVIDED AS IS WITHOUT WARRANTY OF ANY
//KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
//IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
//PARTICULAR PURPOSE.
//---------------------------------------------------------------------
//------------------------------------------------------------------------------
// 
// In Beta1 the Visual Studio "Add Web Reference" dialog does not generate the 
// event based async methods and so this proxy was manually generated using the 
// SDK wsdl.exe tool. 
// 
// It can be regenerated using the following wsdl command: 
// 
//   wsdl.exe /l:JSL /n:SimpleWebServices /out:SimpleWebServiceProxy.jsl
//   http://localhost/simplewebservice.asmx?WSDL
// 
//------------------------------------------------------------------------------
// 
// This source code was auto-generated by wsdl, Version=2.0.40423.0.
// 
import System.Diagnostics.*;
import System.Web.Services.*;
import System.ComponentModel.*;
import System.Web.Services.Protocols.*;
import System.*;
import System.Xml.Serialization.*;

/// <remarks/>
/** @attribute System.Diagnostics.DebuggerStepThroughAttribute()
 */
/** @attribute System.ComponentModel.DesignerCategoryAttribute("code")
 */
/** @attribute System.Web.Services.WebServiceBindingAttribute(Name = 
    "SimpleWebServiceSoap", Namespace = "http://localhost/samplewebservices/")
 */
public class SimpleWebService 
    extends System.Web.Services.Protocols.SoapHttpClientProtocol
{
    private System.Threading.SendOrPostCallback getAnswerOperationCompleted = null;

    /// <remarks/>
    public SimpleWebService()
    {
        this.set_Url("http://localhost/simplewebservice.asmx");
        this.set_ConformanceClaims(System.Web.Services.WsiClaims.BP10);
    } //SimpleWebService

    /// <remarks/>
    public GetAnswerCompletedEventHandler getAnswerCompleted = null;

    /** @event 
     */
    public void add_getAnswerCompleted(GetAnswerCompletedEventHandler p)
    {
        getAnswerCompleted =(GetAnswerCompletedEventHandler)System.Delegate.
            Combine(getAnswerCompleted, p);
    } //add_getAnswerCompleted

    /** @event 
     */
    public void remove_getAnswerCompleted(GetAnswerCompletedEventHandler p)
    {
        getAnswerCompleted =(GetAnswerCompletedEventHandler)System.Delegate.
            Remove(getAnswerCompleted, p);
    } //remove_getAnswerCompleted

    /// <remarks/>
    /** @attribute System.Web.Services.Protocols.SoapDocumentMethodAttribute(
        "http://localhost/samplewebservices/GetAnswer", 
        RequestNamespace = "http://localhost/samplewebservices/", 
        ResponseNamespace = "http://localhost/samplewebservices/", 
        Use = System.Web.Services.Description.SoapBindingUse.Literal, 
        ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)
     */
    public String GetAnswer(String question)
    {
        Object results[] = this.Invoke("GetAnswer", new Object[] { question });
        return (String)results.get_Item(0);
    } //GetAnswer

    /// <remarks/>
    public System.IAsyncResult BeginGetAnswer(String question, 
        System.AsyncCallback callback, Object asyncState)
    {
        return this.BeginInvoke("GetAnswer", new Object[] { question }, callback,
            asyncState);
    } //BeginGetAnswer

    /// <remarks/>
    public String EndGetAnswer(System.IAsyncResult asyncResult)
    {
        Object results[] = this.EndInvoke(asyncResult);
        return (String)results.get_Item(0);
    } //EndGetAnswer

    /// <remarks/>
    public void GetAnswerAsync(String question)
    {
        this.GetAnswerAsync(question, null);
    } //GetAnswerAsync

    /// <remarks/>
    public void GetAnswerAsync(String question, Object userState)
    {
        if (this.getAnswerOperationCompleted == null) {
            this.getAnswerOperationCompleted = new System.Threading.
                SendOrPostCallback(this.OnGetAnswerOperationCompleted);
        }
        this.InvokeAsync("GetAnswer", new Object[] { question }, 
            this.getAnswerOperationCompleted, userState);
    } //GetAnswerAsync

    private void OnGetAnswerOperationCompleted(Object arg)
    {
        if (this.getAnswerCompleted != null) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs =
                (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
            this.getAnswerCompleted.Invoke((Object)this, 
                new GetAnswerCompletedEventArgs(invokeArgs.get_Results(), 
                invokeArgs.get_Error(), invokeArgs.get_Cancelled(), 
                invokeArgs.get_UserState()));
        }
    } //OnGetAnswerOperationCompleted

    /// <remarks/>
    public void CancelAsync(Object userState)
    {
        super.CancelAsync(userState);
    } //CancelAsync
} //SimpleWebService

/** @delegate 
 */
/// <remarks/>
public delegate void GetAnswerCompletedEventHandler(Object sender, 
    GetAnswerCompletedEventArgs args);
      
/// <remarks/>
public class GetAnswerCompletedEventArgs
    extends System.ComponentModel.AsyncCompletedEventArgs
{
    private Object results[];

    GetAnswerCompletedEventArgs(Object results[], System.Exception exception, 
        boolean cancelled, Object userState)
    {
        super(exception, cancelled, userState);
        this.results = results;
    } //GetAnswerCompletedEventArgs

    /// <remarks/>
    /** @property 
     */
    public String get_Result()
    {
        this.RaiseExceptionIfNecessary();
        return (String)this.results.get_Item(0);
    } //get_Result
} //GetAnswerCompletedEventArgs
