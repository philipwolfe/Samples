'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version:2.0.41227.0
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.41227.0.
'
Namespace SimpleWebServices
    
    '''<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SimpleWebServiceSoap", [Namespace]:="http://localhost/samplewebservices/")>  _
    Partial Public Class SimpleWebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetAnswerOperationCompleted As System.Threading.SendOrPostCallback
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Microsoft.Samples.WinForms.EventBasedAsync.Settings.Default.EventBasedAsyncSampleVB_SimpleWebServices_SimpleWebService
        End Sub
        
        '''<remarks/>
        Public Event GetAnswerCompleted As GetAnswerCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/samplewebservices/GetAnswer", RequestNamespace:="http://localhost/samplewebservices/", ResponseNamespace:="http://localhost/samplewebservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAnswer(ByVal question As String) As String
            Dim results() As Object = Me.Invoke("GetAnswer", New Object() {question})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAnswer(ByVal question As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAnswer", New Object() {question}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAnswer(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAnswerAsync(ByVal question As String)
            Me.GetAnswerAsync(question, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAnswerAsync(ByVal question As String, ByVal userState As Object)
            If (Me.GetAnswerOperationCompleted Is Nothing) Then
                Me.GetAnswerOperationCompleted = AddressOf Me.OnGetAnswerOperationCompleted
            End If
            Me.InvokeAsync("GetAnswer", New Object() {question}, Me.GetAnswerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAnswerOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAnswerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAnswerCompleted(Me, New GetAnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class
    
    '''<remarks/>
    Public Delegate Sub GetAnswerCompletedEventHandler(ByVal sender As Object, ByVal args As GetAnswerCompletedEventArgs)
    
    '''<remarks/>
    Partial Public Class GetAnswerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
