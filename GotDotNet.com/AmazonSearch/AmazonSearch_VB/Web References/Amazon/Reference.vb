'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version:2.0.40607.16
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=2.0.40607.16.
'
Namespace Amazon

    '''<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="AmazonSearchBinding", [Namespace]:="http://soap.amazon.com"), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(OrderItem)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Package)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ShortSummary)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ItemQuantity)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(AddItem)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Item)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(SellerSearchDetails)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Feedback)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(SellerProfileDetails)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(MarketplaceSearchDetails)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ProductLine)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Variation)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(FeaturedProduct)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(CustomerReview)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Track)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(BrowseNode)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ThirdPartyProductDetails)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(KeyPhrase)), _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Details))> _
    Public Class AmazonSearchService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private KeywordSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private TextStreamSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private PowerSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private BrowseNodeSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private AsinSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private BlendedSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private UpcSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private SkuSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private AuthorSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private ArtistSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private ActorSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private ManufacturerSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private DirectorSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private ListManiaSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private WishlistSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private ExchangeSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private MarketplaceSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private SellerProfileSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private SellerSearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private SimilaritySearchRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private GetShoppingCartRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private ClearShoppingCartRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private AddShoppingCartItemsRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private RemoveShoppingCartItemsRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private ModifyShoppingCartItemsRequestOperationCompleted As System.Threading.SendOrPostCallback

        Private GetTransactionDetailsRequestOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New()
            MyBase.New()
            Me.Url = "http://soap.amazon.com/onca/soap3"
        End Sub

        '''<remarks/>
        Public Event KeywordSearchRequestCompleted As KeywordSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event TextStreamSearchRequestCompleted As TextStreamSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event PowerSearchRequestCompleted As PowerSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event BrowseNodeSearchRequestCompleted As BrowseNodeSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event AsinSearchRequestCompleted As AsinSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event BlendedSearchRequestCompleted As BlendedSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event UpcSearchRequestCompleted As UpcSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event SkuSearchRequestCompleted As SkuSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event AuthorSearchRequestCompleted As AuthorSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event ArtistSearchRequestCompleted As ArtistSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event ActorSearchRequestCompleted As ActorSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event ManufacturerSearchRequestCompleted As ManufacturerSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event DirectorSearchRequestCompleted As DirectorSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event ListManiaSearchRequestCompleted As ListManiaSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event WishlistSearchRequestCompleted As WishlistSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event ExchangeSearchRequestCompleted As ExchangeSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event MarketplaceSearchRequestCompleted As MarketplaceSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event SellerProfileSearchRequestCompleted As SellerProfileSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event SellerSearchRequestCompleted As SellerSearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event SimilaritySearchRequestCompleted As SimilaritySearchRequestCompletedEventHandler

        '''<remarks/>
        Public Event GetShoppingCartRequestCompleted As GetShoppingCartRequestCompletedEventHandler

        '''<remarks/>
        Public Event ClearShoppingCartRequestCompleted As ClearShoppingCartRequestCompletedEventHandler

        '''<remarks/>
        Public Event AddShoppingCartItemsRequestCompleted As AddShoppingCartItemsRequestCompletedEventHandler

        '''<remarks/>
        Public Event RemoveShoppingCartItemsRequestCompleted As RemoveShoppingCartItemsRequestCompletedEventHandler

        '''<remarks/>
        Public Event ModifyShoppingCartItemsRequestCompleted As ModifyShoppingCartItemsRequestCompletedEventHandler

        '''<remarks/>
        Public Event GetTransactionDetailsRequestCompleted As GetTransactionDetailsRequestCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function KeywordSearchRequest(<System.Xml.Serialization.SoapElementAttribute("KeywordSearchRequest")> ByVal KeywordSearchRequest1 As KeywordRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("KeywordSearchRequest", New Object() {KeywordSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginKeywordSearchRequest(ByVal KeywordSearchRequest1 As KeywordRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("KeywordSearchRequest", New Object() {KeywordSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndKeywordSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub KeywordSearchRequestAsync(ByVal KeywordSearchRequest1 As KeywordRequest)
            Me.KeywordSearchRequestAsync(KeywordSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub KeywordSearchRequestAsync(ByVal KeywordSearchRequest1 As KeywordRequest, ByVal userState As Object)
            If (Me.KeywordSearchRequestOperationCompleted Is Nothing) Then
                Me.KeywordSearchRequestOperationCompleted = AddressOf Me.OnKeywordSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("KeywordSearchRequest", New Object() {KeywordSearchRequest1}, Me.KeywordSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnKeywordSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.KeywordSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KeywordSearchRequestCompleted(Me, New KeywordSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function TextStreamSearchRequest(<System.Xml.Serialization.SoapElementAttribute("TextStreamSearchRequest")> ByVal TextStreamSearchRequest1 As TextStreamRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("TextStreamSearchRequest", New Object() {TextStreamSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginTextStreamSearchRequest(ByVal TextStreamSearchRequest1 As TextStreamRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TextStreamSearchRequest", New Object() {TextStreamSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTextStreamSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub TextStreamSearchRequestAsync(ByVal TextStreamSearchRequest1 As TextStreamRequest)
            Me.TextStreamSearchRequestAsync(TextStreamSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TextStreamSearchRequestAsync(ByVal TextStreamSearchRequest1 As TextStreamRequest, ByVal userState As Object)
            If (Me.TextStreamSearchRequestOperationCompleted Is Nothing) Then
                Me.TextStreamSearchRequestOperationCompleted = AddressOf Me.OnTextStreamSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("TextStreamSearchRequest", New Object() {TextStreamSearchRequest1}, Me.TextStreamSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnTextStreamSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.TextStreamSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TextStreamSearchRequestCompleted(Me, New TextStreamSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function PowerSearchRequest(<System.Xml.Serialization.SoapElementAttribute("PowerSearchRequest")> ByVal PowerSearchRequest1 As PowerRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("PowerSearchRequest", New Object() {PowerSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginPowerSearchRequest(ByVal PowerSearchRequest1 As PowerRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PowerSearchRequest", New Object() {PowerSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndPowerSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub PowerSearchRequestAsync(ByVal PowerSearchRequest1 As PowerRequest)
            Me.PowerSearchRequestAsync(PowerSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub PowerSearchRequestAsync(ByVal PowerSearchRequest1 As PowerRequest, ByVal userState As Object)
            If (Me.PowerSearchRequestOperationCompleted Is Nothing) Then
                Me.PowerSearchRequestOperationCompleted = AddressOf Me.OnPowerSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("PowerSearchRequest", New Object() {PowerSearchRequest1}, Me.PowerSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnPowerSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.PowerSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PowerSearchRequestCompleted(Me, New PowerSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function BrowseNodeSearchRequest(<System.Xml.Serialization.SoapElementAttribute("BrowseNodeSearchRequest")> ByVal BrowseNodeSearchRequest1 As BrowseNodeRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("BrowseNodeSearchRequest", New Object() {BrowseNodeSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginBrowseNodeSearchRequest(ByVal BrowseNodeSearchRequest1 As BrowseNodeRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BrowseNodeSearchRequest", New Object() {BrowseNodeSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndBrowseNodeSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub BrowseNodeSearchRequestAsync(ByVal BrowseNodeSearchRequest1 As BrowseNodeRequest)
            Me.BrowseNodeSearchRequestAsync(BrowseNodeSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub BrowseNodeSearchRequestAsync(ByVal BrowseNodeSearchRequest1 As BrowseNodeRequest, ByVal userState As Object)
            If (Me.BrowseNodeSearchRequestOperationCompleted Is Nothing) Then
                Me.BrowseNodeSearchRequestOperationCompleted = AddressOf Me.OnBrowseNodeSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("BrowseNodeSearchRequest", New Object() {BrowseNodeSearchRequest1}, Me.BrowseNodeSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnBrowseNodeSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.BrowseNodeSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BrowseNodeSearchRequestCompleted(Me, New BrowseNodeSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function AsinSearchRequest(<System.Xml.Serialization.SoapElementAttribute("AsinSearchRequest")> ByVal AsinSearchRequest1 As AsinRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("AsinSearchRequest", New Object() {AsinSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginAsinSearchRequest(ByVal AsinSearchRequest1 As AsinRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AsinSearchRequest", New Object() {AsinSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndAsinSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub AsinSearchRequestAsync(ByVal AsinSearchRequest1 As AsinRequest)
            Me.AsinSearchRequestAsync(AsinSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AsinSearchRequestAsync(ByVal AsinSearchRequest1 As AsinRequest, ByVal userState As Object)
            If (Me.AsinSearchRequestOperationCompleted Is Nothing) Then
                Me.AsinSearchRequestOperationCompleted = AddressOf Me.OnAsinSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("AsinSearchRequest", New Object() {AsinSearchRequest1}, Me.AsinSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnAsinSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.AsinSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AsinSearchRequestCompleted(Me, New AsinSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function BlendedSearchRequest(<System.Xml.Serialization.SoapElementAttribute("BlendedSearchRequest")> ByVal BlendedSearchRequest1 As BlendedRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductLine()
            Dim results() As Object = Me.Invoke("BlendedSearchRequest", New Object() {BlendedSearchRequest1})
            Return CType(results(0), ProductLine())
        End Function

        '''<remarks/>
        Public Function BeginBlendedSearchRequest(ByVal BlendedSearchRequest1 As BlendedRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BlendedSearchRequest", New Object() {BlendedSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndBlendedSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductLine()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductLine())
        End Function

        '''<remarks/>
        Public Overloads Sub BlendedSearchRequestAsync(ByVal BlendedSearchRequest1 As BlendedRequest)
            Me.BlendedSearchRequestAsync(BlendedSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub BlendedSearchRequestAsync(ByVal BlendedSearchRequest1 As BlendedRequest, ByVal userState As Object)
            If (Me.BlendedSearchRequestOperationCompleted Is Nothing) Then
                Me.BlendedSearchRequestOperationCompleted = AddressOf Me.OnBlendedSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("BlendedSearchRequest", New Object() {BlendedSearchRequest1}, Me.BlendedSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnBlendedSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.BlendedSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BlendedSearchRequestCompleted(Me, New BlendedSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function UpcSearchRequest(<System.Xml.Serialization.SoapElementAttribute("UpcSearchRequest")> ByVal UpcSearchRequest1 As UpcRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("UpcSearchRequest", New Object() {UpcSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginUpcSearchRequest(ByVal UpcSearchRequest1 As UpcRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpcSearchRequest", New Object() {UpcSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndUpcSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub UpcSearchRequestAsync(ByVal UpcSearchRequest1 As UpcRequest)
            Me.UpcSearchRequestAsync(UpcSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub UpcSearchRequestAsync(ByVal UpcSearchRequest1 As UpcRequest, ByVal userState As Object)
            If (Me.UpcSearchRequestOperationCompleted Is Nothing) Then
                Me.UpcSearchRequestOperationCompleted = AddressOf Me.OnUpcSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("UpcSearchRequest", New Object() {UpcSearchRequest1}, Me.UpcSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnUpcSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpcSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpcSearchRequestCompleted(Me, New UpcSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function SkuSearchRequest(<System.Xml.Serialization.SoapElementAttribute("SkuSearchRequest")> ByVal SkuSearchRequest1 As SkuRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("SkuSearchRequest", New Object() {SkuSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginSkuSearchRequest(ByVal SkuSearchRequest1 As SkuRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SkuSearchRequest", New Object() {SkuSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndSkuSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub SkuSearchRequestAsync(ByVal SkuSearchRequest1 As SkuRequest)
            Me.SkuSearchRequestAsync(SkuSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub SkuSearchRequestAsync(ByVal SkuSearchRequest1 As SkuRequest, ByVal userState As Object)
            If (Me.SkuSearchRequestOperationCompleted Is Nothing) Then
                Me.SkuSearchRequestOperationCompleted = AddressOf Me.OnSkuSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("SkuSearchRequest", New Object() {SkuSearchRequest1}, Me.SkuSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnSkuSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.SkuSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SkuSearchRequestCompleted(Me, New SkuSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function AuthorSearchRequest(<System.Xml.Serialization.SoapElementAttribute("AuthorSearchRequest")> ByVal AuthorSearchRequest1 As AuthorRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("AuthorSearchRequest", New Object() {AuthorSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginAuthorSearchRequest(ByVal AuthorSearchRequest1 As AuthorRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AuthorSearchRequest", New Object() {AuthorSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndAuthorSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub AuthorSearchRequestAsync(ByVal AuthorSearchRequest1 As AuthorRequest)
            Me.AuthorSearchRequestAsync(AuthorSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AuthorSearchRequestAsync(ByVal AuthorSearchRequest1 As AuthorRequest, ByVal userState As Object)
            If (Me.AuthorSearchRequestOperationCompleted Is Nothing) Then
                Me.AuthorSearchRequestOperationCompleted = AddressOf Me.OnAuthorSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("AuthorSearchRequest", New Object() {AuthorSearchRequest1}, Me.AuthorSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnAuthorSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthorSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthorSearchRequestCompleted(Me, New AuthorSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function ArtistSearchRequest(<System.Xml.Serialization.SoapElementAttribute("ArtistSearchRequest")> ByVal ArtistSearchRequest1 As ArtistRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("ArtistSearchRequest", New Object() {ArtistSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginArtistSearchRequest(ByVal ArtistSearchRequest1 As ArtistRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ArtistSearchRequest", New Object() {ArtistSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndArtistSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub ArtistSearchRequestAsync(ByVal ArtistSearchRequest1 As ArtistRequest)
            Me.ArtistSearchRequestAsync(ArtistSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ArtistSearchRequestAsync(ByVal ArtistSearchRequest1 As ArtistRequest, ByVal userState As Object)
            If (Me.ArtistSearchRequestOperationCompleted Is Nothing) Then
                Me.ArtistSearchRequestOperationCompleted = AddressOf Me.OnArtistSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("ArtistSearchRequest", New Object() {ArtistSearchRequest1}, Me.ArtistSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnArtistSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArtistSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArtistSearchRequestCompleted(Me, New ArtistSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function ActorSearchRequest(<System.Xml.Serialization.SoapElementAttribute("ActorSearchRequest")> ByVal ActorSearchRequest1 As ActorRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("ActorSearchRequest", New Object() {ActorSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginActorSearchRequest(ByVal ActorSearchRequest1 As ActorRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActorSearchRequest", New Object() {ActorSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndActorSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub ActorSearchRequestAsync(ByVal ActorSearchRequest1 As ActorRequest)
            Me.ActorSearchRequestAsync(ActorSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ActorSearchRequestAsync(ByVal ActorSearchRequest1 As ActorRequest, ByVal userState As Object)
            If (Me.ActorSearchRequestOperationCompleted Is Nothing) Then
                Me.ActorSearchRequestOperationCompleted = AddressOf Me.OnActorSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("ActorSearchRequest", New Object() {ActorSearchRequest1}, Me.ActorSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnActorSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActorSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActorSearchRequestCompleted(Me, New ActorSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function ManufacturerSearchRequest(<System.Xml.Serialization.SoapElementAttribute("ManufacturerSearchRequest")> ByVal ManufacturerSearchRequest1 As ManufacturerRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("ManufacturerSearchRequest", New Object() {ManufacturerSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginManufacturerSearchRequest(ByVal ManufacturerSearchRequest1 As ManufacturerRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ManufacturerSearchRequest", New Object() {ManufacturerSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndManufacturerSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub ManufacturerSearchRequestAsync(ByVal ManufacturerSearchRequest1 As ManufacturerRequest)
            Me.ManufacturerSearchRequestAsync(ManufacturerSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ManufacturerSearchRequestAsync(ByVal ManufacturerSearchRequest1 As ManufacturerRequest, ByVal userState As Object)
            If (Me.ManufacturerSearchRequestOperationCompleted Is Nothing) Then
                Me.ManufacturerSearchRequestOperationCompleted = AddressOf Me.OnManufacturerSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("ManufacturerSearchRequest", New Object() {ManufacturerSearchRequest1}, Me.ManufacturerSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnManufacturerSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.ManufacturerSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ManufacturerSearchRequestCompleted(Me, New ManufacturerSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function DirectorSearchRequest(<System.Xml.Serialization.SoapElementAttribute("DirectorSearchRequest")> ByVal DirectorSearchRequest1 As DirectorRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("DirectorSearchRequest", New Object() {DirectorSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginDirectorSearchRequest(ByVal DirectorSearchRequest1 As DirectorRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DirectorSearchRequest", New Object() {DirectorSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndDirectorSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub DirectorSearchRequestAsync(ByVal DirectorSearchRequest1 As DirectorRequest)
            Me.DirectorSearchRequestAsync(DirectorSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub DirectorSearchRequestAsync(ByVal DirectorSearchRequest1 As DirectorRequest, ByVal userState As Object)
            If (Me.DirectorSearchRequestOperationCompleted Is Nothing) Then
                Me.DirectorSearchRequestOperationCompleted = AddressOf Me.OnDirectorSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("DirectorSearchRequest", New Object() {DirectorSearchRequest1}, Me.DirectorSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnDirectorSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.DirectorSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DirectorSearchRequestCompleted(Me, New DirectorSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function ListManiaSearchRequest(<System.Xml.Serialization.SoapElementAttribute("ListManiaSearchRequest")> ByVal ListManiaSearchRequest1 As ListManiaRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("ListManiaSearchRequest", New Object() {ListManiaSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginListManiaSearchRequest(ByVal ListManiaSearchRequest1 As ListManiaRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListManiaSearchRequest", New Object() {ListManiaSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndListManiaSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub ListManiaSearchRequestAsync(ByVal ListManiaSearchRequest1 As ListManiaRequest)
            Me.ListManiaSearchRequestAsync(ListManiaSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ListManiaSearchRequestAsync(ByVal ListManiaSearchRequest1 As ListManiaRequest, ByVal userState As Object)
            If (Me.ListManiaSearchRequestOperationCompleted Is Nothing) Then
                Me.ListManiaSearchRequestOperationCompleted = AddressOf Me.OnListManiaSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("ListManiaSearchRequest", New Object() {ListManiaSearchRequest1}, Me.ListManiaSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnListManiaSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListManiaSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListManiaSearchRequestCompleted(Me, New ListManiaSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function WishlistSearchRequest(<System.Xml.Serialization.SoapElementAttribute("WishlistSearchRequest")> ByVal WishlistSearchRequest1 As WishlistRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("WishlistSearchRequest", New Object() {WishlistSearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginWishlistSearchRequest(ByVal WishlistSearchRequest1 As WishlistRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("WishlistSearchRequest", New Object() {WishlistSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndWishlistSearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub WishlistSearchRequestAsync(ByVal WishlistSearchRequest1 As WishlistRequest)
            Me.WishlistSearchRequestAsync(WishlistSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub WishlistSearchRequestAsync(ByVal WishlistSearchRequest1 As WishlistRequest, ByVal userState As Object)
            If (Me.WishlistSearchRequestOperationCompleted Is Nothing) Then
                Me.WishlistSearchRequestOperationCompleted = AddressOf Me.OnWishlistSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("WishlistSearchRequest", New Object() {WishlistSearchRequest1}, Me.WishlistSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnWishlistSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.WishlistSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WishlistSearchRequestCompleted(Me, New WishlistSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function ExchangeSearchRequest(<System.Xml.Serialization.SoapElementAttribute("ExchangeSearchRequest")> ByVal ExchangeSearchRequest1 As ExchangeRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ListingProductDetails
            Dim results() As Object = Me.Invoke("ExchangeSearchRequest", New Object() {ExchangeSearchRequest1})
            Return CType(results(0), ListingProductDetails)
        End Function

        '''<remarks/>
        Public Function BeginExchangeSearchRequest(ByVal ExchangeSearchRequest1 As ExchangeRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ExchangeSearchRequest", New Object() {ExchangeSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndExchangeSearchRequest(ByVal asyncResult As System.IAsyncResult) As ListingProductDetails
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ListingProductDetails)
        End Function

        '''<remarks/>
        Public Overloads Sub ExchangeSearchRequestAsync(ByVal ExchangeSearchRequest1 As ExchangeRequest)
            Me.ExchangeSearchRequestAsync(ExchangeSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ExchangeSearchRequestAsync(ByVal ExchangeSearchRequest1 As ExchangeRequest, ByVal userState As Object)
            If (Me.ExchangeSearchRequestOperationCompleted Is Nothing) Then
                Me.ExchangeSearchRequestOperationCompleted = AddressOf Me.OnExchangeSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("ExchangeSearchRequest", New Object() {ExchangeSearchRequest1}, Me.ExchangeSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnExchangeSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExchangeSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExchangeSearchRequestCompleted(Me, New ExchangeSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function MarketplaceSearchRequest(<System.Xml.Serialization.SoapElementAttribute("MarketplaceSearchRequest")> ByVal MarketplaceSearchRequest1 As MarketplaceRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> MarketplaceSearch
            Dim results() As Object = Me.Invoke("MarketplaceSearchRequest", New Object() {MarketplaceSearchRequest1})
            Return CType(results(0), MarketplaceSearch)
        End Function

        '''<remarks/>
        Public Function BeginMarketplaceSearchRequest(ByVal MarketplaceSearchRequest1 As MarketplaceRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MarketplaceSearchRequest", New Object() {MarketplaceSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndMarketplaceSearchRequest(ByVal asyncResult As System.IAsyncResult) As MarketplaceSearch
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), MarketplaceSearch)
        End Function

        '''<remarks/>
        Public Overloads Sub MarketplaceSearchRequestAsync(ByVal MarketplaceSearchRequest1 As MarketplaceRequest)
            Me.MarketplaceSearchRequestAsync(MarketplaceSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub MarketplaceSearchRequestAsync(ByVal MarketplaceSearchRequest1 As MarketplaceRequest, ByVal userState As Object)
            If (Me.MarketplaceSearchRequestOperationCompleted Is Nothing) Then
                Me.MarketplaceSearchRequestOperationCompleted = AddressOf Me.OnMarketplaceSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("MarketplaceSearchRequest", New Object() {MarketplaceSearchRequest1}, Me.MarketplaceSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnMarketplaceSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.MarketplaceSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MarketplaceSearchRequestCompleted(Me, New MarketplaceSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function SellerProfileSearchRequest(<System.Xml.Serialization.SoapElementAttribute("SellerProfileSearchRequest")> ByVal SellerProfileSearchRequest1 As SellerProfileRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> SellerProfile
            Dim results() As Object = Me.Invoke("SellerProfileSearchRequest", New Object() {SellerProfileSearchRequest1})
            Return CType(results(0), SellerProfile)
        End Function

        '''<remarks/>
        Public Function BeginSellerProfileSearchRequest(ByVal SellerProfileSearchRequest1 As SellerProfileRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SellerProfileSearchRequest", New Object() {SellerProfileSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndSellerProfileSearchRequest(ByVal asyncResult As System.IAsyncResult) As SellerProfile
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), SellerProfile)
        End Function

        '''<remarks/>
        Public Overloads Sub SellerProfileSearchRequestAsync(ByVal SellerProfileSearchRequest1 As SellerProfileRequest)
            Me.SellerProfileSearchRequestAsync(SellerProfileSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub SellerProfileSearchRequestAsync(ByVal SellerProfileSearchRequest1 As SellerProfileRequest, ByVal userState As Object)
            If (Me.SellerProfileSearchRequestOperationCompleted Is Nothing) Then
                Me.SellerProfileSearchRequestOperationCompleted = AddressOf Me.OnSellerProfileSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("SellerProfileSearchRequest", New Object() {SellerProfileSearchRequest1}, Me.SellerProfileSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnSellerProfileSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.SellerProfileSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SellerProfileSearchRequestCompleted(Me, New SellerProfileSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function SellerSearchRequest(<System.Xml.Serialization.SoapElementAttribute("SellerSearchRequest")> ByVal SellerSearchRequest1 As SellerRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> SellerSearch
            Dim results() As Object = Me.Invoke("SellerSearchRequest", New Object() {SellerSearchRequest1})
            Return CType(results(0), SellerSearch)
        End Function

        '''<remarks/>
        Public Function BeginSellerSearchRequest(ByVal SellerSearchRequest1 As SellerRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SellerSearchRequest", New Object() {SellerSearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndSellerSearchRequest(ByVal asyncResult As System.IAsyncResult) As SellerSearch
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), SellerSearch)
        End Function

        '''<remarks/>
        Public Overloads Sub SellerSearchRequestAsync(ByVal SellerSearchRequest1 As SellerRequest)
            Me.SellerSearchRequestAsync(SellerSearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub SellerSearchRequestAsync(ByVal SellerSearchRequest1 As SellerRequest, ByVal userState As Object)
            If (Me.SellerSearchRequestOperationCompleted Is Nothing) Then
                Me.SellerSearchRequestOperationCompleted = AddressOf Me.OnSellerSearchRequestOperationCompleted
            End If
            Me.InvokeAsync("SellerSearchRequest", New Object() {SellerSearchRequest1}, Me.SellerSearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnSellerSearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.SellerSearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SellerSearchRequestCompleted(Me, New SellerSearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function SimilaritySearchRequest(<System.Xml.Serialization.SoapElementAttribute("SimilaritySearchRequest")> ByVal SimilaritySearchRequest1 As SimilarityRequest) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductInfo
            Dim results() As Object = Me.Invoke("SimilaritySearchRequest", New Object() {SimilaritySearchRequest1})
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Function BeginSimilaritySearchRequest(ByVal SimilaritySearchRequest1 As SimilarityRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SimilaritySearchRequest", New Object() {SimilaritySearchRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndSimilaritySearchRequest(ByVal asyncResult As System.IAsyncResult) As ProductInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ProductInfo)
        End Function

        '''<remarks/>
        Public Overloads Sub SimilaritySearchRequestAsync(ByVal SimilaritySearchRequest1 As SimilarityRequest)
            Me.SimilaritySearchRequestAsync(SimilaritySearchRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub SimilaritySearchRequestAsync(ByVal SimilaritySearchRequest1 As SimilarityRequest, ByVal userState As Object)
            If (Me.SimilaritySearchRequestOperationCompleted Is Nothing) Then
                Me.SimilaritySearchRequestOperationCompleted = AddressOf Me.OnSimilaritySearchRequestOperationCompleted
            End If
            Me.InvokeAsync("SimilaritySearchRequest", New Object() {SimilaritySearchRequest1}, Me.SimilaritySearchRequestOperationCompleted, userState)
        End Sub

        Private Sub OnSimilaritySearchRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.SimilaritySearchRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SimilaritySearchRequestCompleted(Me, New SimilaritySearchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function GetShoppingCartRequest(<System.Xml.Serialization.SoapElementAttribute("GetShoppingCartRequest")> ByVal GetShoppingCartRequest1 As GetShoppingCartRequest) As <System.Xml.Serialization.SoapElementAttribute("ShoppingCart")> ShoppingCart
            Dim results() As Object = Me.Invoke("GetShoppingCartRequest", New Object() {GetShoppingCartRequest1})
            Return CType(results(0), ShoppingCart)
        End Function

        '''<remarks/>
        Public Function BeginGetShoppingCartRequest(ByVal GetShoppingCartRequest1 As GetShoppingCartRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetShoppingCartRequest", New Object() {GetShoppingCartRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetShoppingCartRequest(ByVal asyncResult As System.IAsyncResult) As ShoppingCart
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ShoppingCart)
        End Function

        '''<remarks/>
        Public Overloads Sub GetShoppingCartRequestAsync(ByVal GetShoppingCartRequest1 As GetShoppingCartRequest)
            Me.GetShoppingCartRequestAsync(GetShoppingCartRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetShoppingCartRequestAsync(ByVal GetShoppingCartRequest1 As GetShoppingCartRequest, ByVal userState As Object)
            If (Me.GetShoppingCartRequestOperationCompleted Is Nothing) Then
                Me.GetShoppingCartRequestOperationCompleted = AddressOf Me.OnGetShoppingCartRequestOperationCompleted
            End If
            Me.InvokeAsync("GetShoppingCartRequest", New Object() {GetShoppingCartRequest1}, Me.GetShoppingCartRequestOperationCompleted, userState)
        End Sub

        Private Sub OnGetShoppingCartRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetShoppingCartRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetShoppingCartRequestCompleted(Me, New GetShoppingCartRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function ClearShoppingCartRequest(<System.Xml.Serialization.SoapElementAttribute("ClearShoppingCartRequest")> ByVal ClearShoppingCartRequest1 As ClearShoppingCartRequest) As <System.Xml.Serialization.SoapElementAttribute("ShoppingCart")> ShoppingCart
            Dim results() As Object = Me.Invoke("ClearShoppingCartRequest", New Object() {ClearShoppingCartRequest1})
            Return CType(results(0), ShoppingCart)
        End Function

        '''<remarks/>
        Public Function BeginClearShoppingCartRequest(ByVal ClearShoppingCartRequest1 As ClearShoppingCartRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ClearShoppingCartRequest", New Object() {ClearShoppingCartRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndClearShoppingCartRequest(ByVal asyncResult As System.IAsyncResult) As ShoppingCart
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ShoppingCart)
        End Function

        '''<remarks/>
        Public Overloads Sub ClearShoppingCartRequestAsync(ByVal ClearShoppingCartRequest1 As ClearShoppingCartRequest)
            Me.ClearShoppingCartRequestAsync(ClearShoppingCartRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ClearShoppingCartRequestAsync(ByVal ClearShoppingCartRequest1 As ClearShoppingCartRequest, ByVal userState As Object)
            If (Me.ClearShoppingCartRequestOperationCompleted Is Nothing) Then
                Me.ClearShoppingCartRequestOperationCompleted = AddressOf Me.OnClearShoppingCartRequestOperationCompleted
            End If
            Me.InvokeAsync("ClearShoppingCartRequest", New Object() {ClearShoppingCartRequest1}, Me.ClearShoppingCartRequestOperationCompleted, userState)
        End Sub

        Private Sub OnClearShoppingCartRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.ClearShoppingCartRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ClearShoppingCartRequestCompleted(Me, New ClearShoppingCartRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function AddShoppingCartItemsRequest(<System.Xml.Serialization.SoapElementAttribute("AddShoppingCartItemsRequest")> ByVal AddShoppingCartItemsRequest1 As AddShoppingCartItemsRequest) As <System.Xml.Serialization.SoapElementAttribute("ShoppingCart")> ShoppingCart
            Dim results() As Object = Me.Invoke("AddShoppingCartItemsRequest", New Object() {AddShoppingCartItemsRequest1})
            Return CType(results(0), ShoppingCart)
        End Function

        '''<remarks/>
        Public Function BeginAddShoppingCartItemsRequest(ByVal AddShoppingCartItemsRequest1 As AddShoppingCartItemsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddShoppingCartItemsRequest", New Object() {AddShoppingCartItemsRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndAddShoppingCartItemsRequest(ByVal asyncResult As System.IAsyncResult) As ShoppingCart
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ShoppingCart)
        End Function

        '''<remarks/>
        Public Overloads Sub AddShoppingCartItemsRequestAsync(ByVal AddShoppingCartItemsRequest1 As AddShoppingCartItemsRequest)
            Me.AddShoppingCartItemsRequestAsync(AddShoppingCartItemsRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AddShoppingCartItemsRequestAsync(ByVal AddShoppingCartItemsRequest1 As AddShoppingCartItemsRequest, ByVal userState As Object)
            If (Me.AddShoppingCartItemsRequestOperationCompleted Is Nothing) Then
                Me.AddShoppingCartItemsRequestOperationCompleted = AddressOf Me.OnAddShoppingCartItemsRequestOperationCompleted
            End If
            Me.InvokeAsync("AddShoppingCartItemsRequest", New Object() {AddShoppingCartItemsRequest1}, Me.AddShoppingCartItemsRequestOperationCompleted, userState)
        End Sub

        Private Sub OnAddShoppingCartItemsRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddShoppingCartItemsRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddShoppingCartItemsRequestCompleted(Me, New AddShoppingCartItemsRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function RemoveShoppingCartItemsRequest(<System.Xml.Serialization.SoapElementAttribute("RemoveShoppingCartItemsRequest")> ByVal RemoveShoppingCartItemsRequest1 As RemoveShoppingCartItemsRequest) As <System.Xml.Serialization.SoapElementAttribute("ShoppingCart")> ShoppingCart
            Dim results() As Object = Me.Invoke("RemoveShoppingCartItemsRequest", New Object() {RemoveShoppingCartItemsRequest1})
            Return CType(results(0), ShoppingCart)
        End Function

        '''<remarks/>
        Public Function BeginRemoveShoppingCartItemsRequest(ByVal RemoveShoppingCartItemsRequest1 As RemoveShoppingCartItemsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RemoveShoppingCartItemsRequest", New Object() {RemoveShoppingCartItemsRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndRemoveShoppingCartItemsRequest(ByVal asyncResult As System.IAsyncResult) As ShoppingCart
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ShoppingCart)
        End Function

        '''<remarks/>
        Public Overloads Sub RemoveShoppingCartItemsRequestAsync(ByVal RemoveShoppingCartItemsRequest1 As RemoveShoppingCartItemsRequest)
            Me.RemoveShoppingCartItemsRequestAsync(RemoveShoppingCartItemsRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub RemoveShoppingCartItemsRequestAsync(ByVal RemoveShoppingCartItemsRequest1 As RemoveShoppingCartItemsRequest, ByVal userState As Object)
            If (Me.RemoveShoppingCartItemsRequestOperationCompleted Is Nothing) Then
                Me.RemoveShoppingCartItemsRequestOperationCompleted = AddressOf Me.OnRemoveShoppingCartItemsRequestOperationCompleted
            End If
            Me.InvokeAsync("RemoveShoppingCartItemsRequest", New Object() {RemoveShoppingCartItemsRequest1}, Me.RemoveShoppingCartItemsRequestOperationCompleted, userState)
        End Sub

        Private Sub OnRemoveShoppingCartItemsRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveShoppingCartItemsRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveShoppingCartItemsRequestCompleted(Me, New RemoveShoppingCartItemsRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function ModifyShoppingCartItemsRequest(<System.Xml.Serialization.SoapElementAttribute("ModifyShoppingCartItemsRequest")> ByVal ModifyShoppingCartItemsRequest1 As ModifyShoppingCartItemsRequest) As <System.Xml.Serialization.SoapElementAttribute("ShoppingCart")> ShoppingCart
            Dim results() As Object = Me.Invoke("ModifyShoppingCartItemsRequest", New Object() {ModifyShoppingCartItemsRequest1})
            Return CType(results(0), ShoppingCart)
        End Function

        '''<remarks/>
        Public Function BeginModifyShoppingCartItemsRequest(ByVal ModifyShoppingCartItemsRequest1 As ModifyShoppingCartItemsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModifyShoppingCartItemsRequest", New Object() {ModifyShoppingCartItemsRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndModifyShoppingCartItemsRequest(ByVal asyncResult As System.IAsyncResult) As ShoppingCart
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), ShoppingCart)
        End Function

        '''<remarks/>
        Public Overloads Sub ModifyShoppingCartItemsRequestAsync(ByVal ModifyShoppingCartItemsRequest1 As ModifyShoppingCartItemsRequest)
            Me.ModifyShoppingCartItemsRequestAsync(ModifyShoppingCartItemsRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ModifyShoppingCartItemsRequestAsync(ByVal ModifyShoppingCartItemsRequest1 As ModifyShoppingCartItemsRequest, ByVal userState As Object)
            If (Me.ModifyShoppingCartItemsRequestOperationCompleted Is Nothing) Then
                Me.ModifyShoppingCartItemsRequestOperationCompleted = AddressOf Me.OnModifyShoppingCartItemsRequestOperationCompleted
            End If
            Me.InvokeAsync("ModifyShoppingCartItemsRequest", New Object() {ModifyShoppingCartItemsRequest1}, Me.ModifyShoppingCartItemsRequestOperationCompleted, userState)
        End Sub

        Private Sub OnModifyShoppingCartItemsRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModifyShoppingCartItemsRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModifyShoppingCartItemsRequestCompleted(Me, New ModifyShoppingCartItemsRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.amazon.com", RequestNamespace:="http://soap.amazon.com", ResponseNamespace:="http://soap.amazon.com")> _
        Public Function GetTransactionDetailsRequest(<System.Xml.Serialization.SoapElementAttribute("GetTransactionDetailsRequest")> ByVal GetTransactionDetailsRequest1 As GetTransactionDetailsRequest) As <System.Xml.Serialization.SoapElementAttribute("GetTransactionDetailsResponse")> GetTransactionDetailsResponse
            Dim results() As Object = Me.Invoke("GetTransactionDetailsRequest", New Object() {GetTransactionDetailsRequest1})
            Return CType(results(0), GetTransactionDetailsResponse)
        End Function

        '''<remarks/>
        Public Function BeginGetTransactionDetailsRequest(ByVal GetTransactionDetailsRequest1 As GetTransactionDetailsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTransactionDetailsRequest", New Object() {GetTransactionDetailsRequest1}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetTransactionDetailsRequest(ByVal asyncResult As System.IAsyncResult) As GetTransactionDetailsResponse
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), GetTransactionDetailsResponse)
        End Function

        '''<remarks/>
        Public Overloads Sub GetTransactionDetailsRequestAsync(ByVal GetTransactionDetailsRequest1 As GetTransactionDetailsRequest)
            Me.GetTransactionDetailsRequestAsync(GetTransactionDetailsRequest1, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetTransactionDetailsRequestAsync(ByVal GetTransactionDetailsRequest1 As GetTransactionDetailsRequest, ByVal userState As Object)
            If (Me.GetTransactionDetailsRequestOperationCompleted Is Nothing) Then
                Me.GetTransactionDetailsRequestOperationCompleted = AddressOf Me.OnGetTransactionDetailsRequestOperationCompleted
            End If
            Me.InvokeAsync("GetTransactionDetailsRequest", New Object() {GetTransactionDetailsRequest1}, Me.GetTransactionDetailsRequestOperationCompleted, userState)
        End Sub

        Private Sub OnGetTransactionDetailsRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransactionDetailsRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransactionDetailsRequestCompleted(Me, New GetTransactionDetailsRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class KeywordRequest

        Private keywordField As String

        Private pageField As String

        Private modeField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private sortField As String

        Private localeField As String

        Private priceField As String

        '''<remarks/>
        Public Property keyword() As String
            Get
                Return Me.keywordField
            End Get
            Set(ByVal value As String)
                Me.keywordField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sort() As String
            Get
                Return Me.sortField
            End Get
            Set(ByVal value As String)
                Me.sortField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property price() As String
            Get
                Return Me.priceField
            End Get
            Set(ByVal value As String)
                Me.priceField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class OrderItem

        Private itemNumberField As String

        Private aSINField As String

        Private exchangeIdField As String

        Private quantityField As String

        Private unitPriceField As Price

        Private totalPriceField As Price

        '''<remarks/>
        Public Property ItemNumber() As String
            Get
                Return Me.itemNumberField
            End Get
            Set(ByVal value As String)
                Me.itemNumberField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ASIN() As String
            Get
                Return Me.aSINField
            End Get
            Set(ByVal value As String)
                Me.aSINField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeId() As String
            Get
                Return Me.exchangeIdField
            End Get
            Set(ByVal value As String)
                Me.exchangeIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Quantity() As String
            Get
                Return Me.quantityField
            End Get
            Set(ByVal value As String)
                Me.quantityField = value
            End Set
        End Property

        '''<remarks/>
        Public Property UnitPrice() As Price
            Get
                Return Me.unitPriceField
            End Get
            Set(ByVal value As Price)
                Me.unitPriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property TotalPrice() As Price
            Get
                Return Me.totalPriceField
            End Get
            Set(ByVal value As Price)
                Me.totalPriceField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class Price

        Private amountField As String

        Private currencyCodeField As String

        '''<remarks/>
        Public Property Amount() As String
            Get
                Return Me.amountField
            End Get
            Set(ByVal value As String)
                Me.amountField = value
            End Set
        End Property

        '''<remarks/>
        Public Property CurrencyCode() As String
            Get
                Return Me.currencyCodeField
            End Get
            Set(ByVal value As String)
                Me.currencyCodeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class Package

        Private trackingNumberField As String

        Private carrierNameField As String

        '''<remarks/>
        Public Property TrackingNumber() As String
            Get
                Return Me.trackingNumberField
            End Get
            Set(ByVal value As String)
                Me.trackingNumberField = value
            End Set
        End Property

        '''<remarks/>
        Public Property CarrierName() As String
            Get
                Return Me.carrierNameField
            End Get
            Set(ByVal value As String)
                Me.carrierNameField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ShortSummary

        Private orderIdField As String

        Private sellerIdField As String

        Private conditionField As String

        Private transactionDateField As String

        Private transactionDateEpochField As String

        Private totalField As Price

        Private subtotalField As Price

        Private shippingField As Price

        Private taxField As Price

        Private promotionField As Price

        Private storeNameField As String

        Private packagesField() As Package

        Private orderItemsField() As OrderItem

        Private errorCodeField As String

        Private errorStringField As String

        '''<remarks/>
        Public Property OrderId() As String
            Get
                Return Me.orderIdField
            End Get
            Set(ByVal value As String)
                Me.orderIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property SellerId() As String
            Get
                Return Me.sellerIdField
            End Get
            Set(ByVal value As String)
                Me.sellerIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Condition() As String
            Get
                Return Me.conditionField
            End Get
            Set(ByVal value As String)
                Me.conditionField = value
            End Set
        End Property

        '''<remarks/>
        Public Property TransactionDate() As String
            Get
                Return Me.transactionDateField
            End Get
            Set(ByVal value As String)
                Me.transactionDateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property TransactionDateEpoch() As String
            Get
                Return Me.transactionDateEpochField
            End Get
            Set(ByVal value As String)
                Me.transactionDateEpochField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Total() As Price
            Get
                Return Me.totalField
            End Get
            Set(ByVal value As Price)
                Me.totalField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Subtotal() As Price
            Get
                Return Me.subtotalField
            End Get
            Set(ByVal value As Price)
                Me.subtotalField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Shipping() As Price
            Get
                Return Me.shippingField
            End Get
            Set(ByVal value As Price)
                Me.shippingField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Tax() As Price
            Get
                Return Me.taxField
            End Get
            Set(ByVal value As Price)
                Me.taxField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Promotion() As Price
            Get
                Return Me.promotionField
            End Get
            Set(ByVal value As Price)
                Me.promotionField = value
            End Set
        End Property

        '''<remarks/>
        Public Property StoreName() As String
            Get
                Return Me.storeNameField
            End Get
            Set(ByVal value As String)
                Me.storeNameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Packages() As Package()
            Get
                Return Me.packagesField
            End Get
            Set(ByVal value As Package())
                Me.packagesField = value
            End Set
        End Property

        '''<remarks/>
        Public Property OrderItems() As OrderItem()
            Get
                Return Me.orderItemsField
            End Get
            Set(ByVal value As OrderItem())
                Me.orderItemsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ErrorCode() As String
            Get
                Return Me.errorCodeField
            End Get
            Set(ByVal value As String)
                Me.errorCodeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ErrorString() As String
            Get
                Return Me.errorStringField
            End Get
            Set(ByVal value As String)
                Me.errorStringField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class GetTransactionDetailsResponse

        Private shortSummariesField() As ShortSummary

        '''<remarks/>
        Public Property ShortSummaries() As ShortSummary()
            Get
                Return Me.shortSummariesField
            End Get
            Set(ByVal value As ShortSummary())
                Me.shortSummariesField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class GetTransactionDetailsRequest

        Private tagField As String

        Private devtagField As String

        Private keyField As String

        Private orderIdsField() As String

        Private localeField As String

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property key() As String
            Get
                Return Me.keyField
            End Get
            Set(ByVal value As String)
                Me.keyField = value
            End Set
        End Property

        '''<remarks/>
        Public Property OrderIds() As String()
            Get
                Return Me.orderIdsField
            End Get
            Set(ByVal value As String())
                Me.orderIdsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ItemQuantity

        Private itemIdField As String

        Private quantityField As String

        '''<remarks/>
        Public Property ItemId() As String
            Get
                Return Me.itemIdField
            End Get
            Set(ByVal value As String)
                Me.itemIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Quantity() As String
            Get
                Return Me.quantityField
            End Get
            Set(ByVal value As String)
                Me.quantityField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ModifyShoppingCartItemsRequest

        Private tagField As String

        Private devtagField As String

        Private cartIdField As String

        Private hMACField As String

        Private itemsField() As ItemQuantity

        Private localeField As String

        Private simsField As String

        Private mergeCartField As String

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property CartId() As String
            Get
                Return Me.cartIdField
            End Get
            Set(ByVal value As String)
                Me.cartIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property HMAC() As String
            Get
                Return Me.hMACField
            End Get
            Set(ByVal value As String)
                Me.hMACField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Items() As ItemQuantity()
            Get
                Return Me.itemsField
            End Get
            Set(ByVal value As ItemQuantity())
                Me.itemsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sims() As String
            Get
                Return Me.simsField
            End Get
            Set(ByVal value As String)
                Me.simsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MergeCart() As String
            Get
                Return Me.mergeCartField
            End Get
            Set(ByVal value As String)
                Me.mergeCartField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class RemoveShoppingCartItemsRequest

        Private tagField As String

        Private devtagField As String

        Private cartIdField As String

        Private hMACField As String

        Private itemsField() As String

        Private localeField As String

        Private simsField As String

        Private mergeCartField As String

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property CartId() As String
            Get
                Return Me.cartIdField
            End Get
            Set(ByVal value As String)
                Me.cartIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property HMAC() As String
            Get
                Return Me.hMACField
            End Get
            Set(ByVal value As String)
                Me.hMACField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Items() As String()
            Get
                Return Me.itemsField
            End Get
            Set(ByVal value As String())
                Me.itemsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sims() As String
            Get
                Return Me.simsField
            End Get
            Set(ByVal value As String)
                Me.simsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MergeCart() As String
            Get
                Return Me.mergeCartField
            End Get
            Set(ByVal value As String)
                Me.mergeCartField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class AddItem

        Private parentAsinField As String

        Private asinField As String

        Private merchantIdField As String

        Private exchangeIdField As String

        Private quantityField As String

        '''<remarks/>
        Public Property ParentAsin() As String
            Get
                Return Me.parentAsinField
            End Get
            Set(ByVal value As String)
                Me.parentAsinField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Asin() As String
            Get
                Return Me.asinField
            End Get
            Set(ByVal value As String)
                Me.asinField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MerchantId() As String
            Get
                Return Me.merchantIdField
            End Get
            Set(ByVal value As String)
                Me.merchantIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeId() As String
            Get
                Return Me.exchangeIdField
            End Get
            Set(ByVal value As String)
                Me.exchangeIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Quantity() As String
            Get
                Return Me.quantityField
            End Get
            Set(ByVal value As String)
                Me.quantityField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class AddShoppingCartItemsRequest

        Private tagField As String

        Private devtagField As String

        Private cartIdField As String

        Private hMACField As String

        Private itemsField() As AddItem

        Private localeField As String

        Private simsField As String

        Private mergeCartField As String

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property CartId() As String
            Get
                Return Me.cartIdField
            End Get
            Set(ByVal value As String)
                Me.cartIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property HMAC() As String
            Get
                Return Me.hMACField
            End Get
            Set(ByVal value As String)
                Me.hMACField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Items() As AddItem()
            Get
                Return Me.itemsField
            End Get
            Set(ByVal value As AddItem())
                Me.itemsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sims() As String
            Get
                Return Me.simsField
            End Get
            Set(ByVal value As String)
                Me.simsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MergeCart() As String
            Get
                Return Me.mergeCartField
            End Get
            Set(ByVal value As String)
                Me.mergeCartField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ClearShoppingCartRequest

        Private tagField As String

        Private devtagField As String

        Private cartIdField As String

        Private hMACField As String

        Private localeField As String

        Private mergeCartField As String

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property CartId() As String
            Get
                Return Me.cartIdField
            End Get
            Set(ByVal value As String)
                Me.cartIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property HMAC() As String
            Get
                Return Me.hMACField
            End Get
            Set(ByVal value As String)
                Me.hMACField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MergeCart() As String
            Get
                Return Me.mergeCartField
            End Get
            Set(ByVal value As String)
                Me.mergeCartField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class Item

        Private itemIdField As String

        Private productNameField As String

        Private catalogField As String

        Private asinField As String

        Private exchangeIdField As String

        Private quantityField As String

        Private listPriceField As String

        Private ourPriceField As String

        Private merchantSkuField As String

        '''<remarks/>
        Public Property ItemId() As String
            Get
                Return Me.itemIdField
            End Get
            Set(ByVal value As String)
                Me.itemIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ProductName() As String
            Get
                Return Me.productNameField
            End Get
            Set(ByVal value As String)
                Me.productNameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Catalog() As String
            Get
                Return Me.catalogField
            End Get
            Set(ByVal value As String)
                Me.catalogField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Asin() As String
            Get
                Return Me.asinField
            End Get
            Set(ByVal value As String)
                Me.asinField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeId() As String
            Get
                Return Me.exchangeIdField
            End Get
            Set(ByVal value As String)
                Me.exchangeIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Quantity() As String
            Get
                Return Me.quantityField
            End Get
            Set(ByVal value As String)
                Me.quantityField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ListPrice() As String
            Get
                Return Me.listPriceField
            End Get
            Set(ByVal value As String)
                Me.listPriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property OurPrice() As String
            Get
                Return Me.ourPriceField
            End Get
            Set(ByVal value As String)
                Me.ourPriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MerchantSku() As String
            Get
                Return Me.merchantSkuField
            End Get
            Set(ByVal value As String)
                Me.merchantSkuField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ShoppingCart

        Private cartIdField As String

        Private hMACField As String

        Private purchaseUrlField As String

        Private itemsField() As Item

        Private similarProductsField() As String

        '''<remarks/>
        Public Property CartId() As String
            Get
                Return Me.cartIdField
            End Get
            Set(ByVal value As String)
                Me.cartIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property HMAC() As String
            Get
                Return Me.hMACField
            End Get
            Set(ByVal value As String)
                Me.hMACField = value
            End Set
        End Property

        '''<remarks/>
        Public Property PurchaseUrl() As String
            Get
                Return Me.purchaseUrlField
            End Get
            Set(ByVal value As String)
                Me.purchaseUrlField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Items() As Item()
            Get
                Return Me.itemsField
            End Get
            Set(ByVal value As Item())
                Me.itemsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property SimilarProducts() As String()
            Get
                Return Me.similarProductsField
            End Get
            Set(ByVal value As String())
                Me.similarProductsField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class GetShoppingCartRequest

        Private tagField As String

        Private devtagField As String

        Private cartIdField As String

        Private hMACField As String

        Private localeField As String

        Private simsField As String

        Private mergeCartField As String

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property CartId() As String
            Get
                Return Me.cartIdField
            End Get
            Set(ByVal value As String)
                Me.cartIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property HMAC() As String
            Get
                Return Me.hMACField
            End Get
            Set(ByVal value As String)
                Me.hMACField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sims() As String
            Get
                Return Me.simsField
            End Get
            Set(ByVal value As String)
                Me.simsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MergeCart() As String
            Get
                Return Me.mergeCartField
            End Get
            Set(ByVal value As String)
                Me.mergeCartField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class SimilarityRequest

        Private asinField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private localeField As String

        '''<remarks/>
        Public Property asin() As String
            Get
                Return Me.asinField
            End Get
            Set(ByVal value As String)
                Me.asinField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class SellerSearchDetails

        Private sellerNicknameField As String

        Private storeIdField As String

        Private storeNameField As String

        Private numberOfOpenListingsField As String

        Private listingProductInfoField As ListingProductInfo

        '''<remarks/>
        Public Property SellerNickname() As String
            Get
                Return Me.sellerNicknameField
            End Get
            Set(ByVal value As String)
                Me.sellerNicknameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property StoreId() As String
            Get
                Return Me.storeIdField
            End Get
            Set(ByVal value As String)
                Me.storeIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property StoreName() As String
            Get
                Return Me.storeNameField
            End Get
            Set(ByVal value As String)
                Me.storeNameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property NumberOfOpenListings() As String
            Get
                Return Me.numberOfOpenListingsField
            End Get
            Set(ByVal value As String)
                Me.numberOfOpenListingsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ListingProductInfo() As ListingProductInfo
            Get
                Return Me.listingProductInfoField
            End Get
            Set(ByVal value As ListingProductInfo)
                Me.listingProductInfoField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ListingProductInfo

        Private listingProductDetailsField() As ListingProductDetails

        '''<remarks/>
        Public Property ListingProductDetails() As ListingProductDetails()
            Get
                Return Me.listingProductDetailsField
            End Get
            Set(ByVal value As ListingProductDetails())
                Me.listingProductDetailsField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ListingProductDetails

        Private exchangeIdField As String

        Private listingIdField As String

        Private exchangeTitleField As String

        Private exchangeDescriptionField As String

        Private exchangePriceField As String

        Private exchangeAsinField As String

        Private exchangeEndDateField As String

        Private exchangeTinyImageField As String

        Private exchangeSellerIdField As String

        Private exchangeSellerNicknameField As String

        Private exchangeStartDateField As String

        Private exchangeStatusField As String

        Private exchangeQuantityField As String

        Private exchangeQuantityAllocatedField As String

        Private exchangeFeaturedCategoryField As String

        Private exchangeConditionField As String

        Private exchangeConditionTypeField As String

        Private exchangeAvailabilityField As String

        Private exchangeOfferingTypeField As String

        Private exchangeSellerStateField As String

        Private exchangeSellerCountryField As String

        Private exchangeSellerRatingField As String

        '''<remarks/>
        Public Property ExchangeId() As String
            Get
                Return Me.exchangeIdField
            End Get
            Set(ByVal value As String)
                Me.exchangeIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ListingId() As String
            Get
                Return Me.listingIdField
            End Get
            Set(ByVal value As String)
                Me.listingIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeTitle() As String
            Get
                Return Me.exchangeTitleField
            End Get
            Set(ByVal value As String)
                Me.exchangeTitleField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeDescription() As String
            Get
                Return Me.exchangeDescriptionField
            End Get
            Set(ByVal value As String)
                Me.exchangeDescriptionField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangePrice() As String
            Get
                Return Me.exchangePriceField
            End Get
            Set(ByVal value As String)
                Me.exchangePriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeAsin() As String
            Get
                Return Me.exchangeAsinField
            End Get
            Set(ByVal value As String)
                Me.exchangeAsinField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeEndDate() As String
            Get
                Return Me.exchangeEndDateField
            End Get
            Set(ByVal value As String)
                Me.exchangeEndDateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeTinyImage() As String
            Get
                Return Me.exchangeTinyImageField
            End Get
            Set(ByVal value As String)
                Me.exchangeTinyImageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeSellerId() As String
            Get
                Return Me.exchangeSellerIdField
            End Get
            Set(ByVal value As String)
                Me.exchangeSellerIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeSellerNickname() As String
            Get
                Return Me.exchangeSellerNicknameField
            End Get
            Set(ByVal value As String)
                Me.exchangeSellerNicknameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeStartDate() As String
            Get
                Return Me.exchangeStartDateField
            End Get
            Set(ByVal value As String)
                Me.exchangeStartDateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeStatus() As String
            Get
                Return Me.exchangeStatusField
            End Get
            Set(ByVal value As String)
                Me.exchangeStatusField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeQuantity() As String
            Get
                Return Me.exchangeQuantityField
            End Get
            Set(ByVal value As String)
                Me.exchangeQuantityField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeQuantityAllocated() As String
            Get
                Return Me.exchangeQuantityAllocatedField
            End Get
            Set(ByVal value As String)
                Me.exchangeQuantityAllocatedField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeFeaturedCategory() As String
            Get
                Return Me.exchangeFeaturedCategoryField
            End Get
            Set(ByVal value As String)
                Me.exchangeFeaturedCategoryField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeCondition() As String
            Get
                Return Me.exchangeConditionField
            End Get
            Set(ByVal value As String)
                Me.exchangeConditionField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeConditionType() As String
            Get
                Return Me.exchangeConditionTypeField
            End Get
            Set(ByVal value As String)
                Me.exchangeConditionTypeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeAvailability() As String
            Get
                Return Me.exchangeAvailabilityField
            End Get
            Set(ByVal value As String)
                Me.exchangeAvailabilityField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeOfferingType() As String
            Get
                Return Me.exchangeOfferingTypeField
            End Get
            Set(ByVal value As String)
                Me.exchangeOfferingTypeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeSellerState() As String
            Get
                Return Me.exchangeSellerStateField
            End Get
            Set(ByVal value As String)
                Me.exchangeSellerStateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeSellerCountry() As String
            Get
                Return Me.exchangeSellerCountryField
            End Get
            Set(ByVal value As String)
                Me.exchangeSellerCountryField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeSellerRating() As String
            Get
                Return Me.exchangeSellerRatingField
            End Get
            Set(ByVal value As String)
                Me.exchangeSellerRatingField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class SellerSearch

        Private sellerSearchDetailsField() As SellerSearchDetails

        '''<remarks/>
        Public Property SellerSearchDetails() As SellerSearchDetails()
            Get
                Return Me.sellerSearchDetailsField
            End Get
            Set(ByVal value As SellerSearchDetails())
                Me.sellerSearchDetailsField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class SellerRequest

        Private seller_idField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private offerstatusField As String

        Private pageField As String

        Private seller_browse_idField As String

        Private keywordField As String

        Private descField As String

        Private localeField As String

        Private indexField As String

        '''<remarks/>
        Public Property seller_id() As String
            Get
                Return Me.seller_idField
            End Get
            Set(ByVal value As String)
                Me.seller_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property offerstatus() As String
            Get
                Return Me.offerstatusField
            End Get
            Set(ByVal value As String)
                Me.offerstatusField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property seller_browse_id() As String
            Get
                Return Me.seller_browse_idField
            End Get
            Set(ByVal value As String)
                Me.seller_browse_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property keyword() As String
            Get
                Return Me.keywordField
            End Get
            Set(ByVal value As String)
                Me.keywordField = value
            End Set
        End Property

        '''<remarks/>
        Public Property desc() As String
            Get
                Return Me.descField
            End Get
            Set(ByVal value As String)
                Me.descField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property index() As String
            Get
                Return Me.indexField
            End Get
            Set(ByVal value As String)
                Me.indexField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class Feedback

        Private feedbackRatingField As String

        Private feedbackCommentsField As String

        Private feedbackDateField As String

        Private feedbackRaterField As String

        '''<remarks/>
        Public Property FeedbackRating() As String
            Get
                Return Me.feedbackRatingField
            End Get
            Set(ByVal value As String)
                Me.feedbackRatingField = value
            End Set
        End Property

        '''<remarks/>
        Public Property FeedbackComments() As String
            Get
                Return Me.feedbackCommentsField
            End Get
            Set(ByVal value As String)
                Me.feedbackCommentsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property FeedbackDate() As String
            Get
                Return Me.feedbackDateField
            End Get
            Set(ByVal value As String)
                Me.feedbackDateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property FeedbackRater() As String
            Get
                Return Me.feedbackRaterField
            End Get
            Set(ByVal value As String)
                Me.feedbackRaterField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class SellerFeedback

        Private feedbackField() As Feedback

        '''<remarks/>
        Public Property Feedback() As Feedback()
            Get
                Return Me.feedbackField
            End Get
            Set(ByVal value As Feedback())
                Me.feedbackField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class SellerProfileDetails

        Private sellerNicknameField As String

        Private overallFeedbackRatingField As String

        Private numberOfFeedbackField As String

        Private numberOfCanceledBidsField As String

        Private numberOfCanceledAuctionsField As String

        Private storeIdField As String

        Private storeNameField As String

        Private sellerFeedbackField As SellerFeedback

        '''<remarks/>
        Public Property SellerNickname() As String
            Get
                Return Me.sellerNicknameField
            End Get
            Set(ByVal value As String)
                Me.sellerNicknameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property OverallFeedbackRating() As String
            Get
                Return Me.overallFeedbackRatingField
            End Get
            Set(ByVal value As String)
                Me.overallFeedbackRatingField = value
            End Set
        End Property

        '''<remarks/>
        Public Property NumberOfFeedback() As String
            Get
                Return Me.numberOfFeedbackField
            End Get
            Set(ByVal value As String)
                Me.numberOfFeedbackField = value
            End Set
        End Property

        '''<remarks/>
        Public Property NumberOfCanceledBids() As String
            Get
                Return Me.numberOfCanceledBidsField
            End Get
            Set(ByVal value As String)
                Me.numberOfCanceledBidsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property NumberOfCanceledAuctions() As String
            Get
                Return Me.numberOfCanceledAuctionsField
            End Get
            Set(ByVal value As String)
                Me.numberOfCanceledAuctionsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property StoreId() As String
            Get
                Return Me.storeIdField
            End Get
            Set(ByVal value As String)
                Me.storeIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property StoreName() As String
            Get
                Return Me.storeNameField
            End Get
            Set(ByVal value As String)
                Me.storeNameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property SellerFeedback() As SellerFeedback
            Get
                Return Me.sellerFeedbackField
            End Get
            Set(ByVal value As SellerFeedback)
                Me.sellerFeedbackField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class SellerProfile

        Private sellerProfileDetailsField() As SellerProfileDetails

        '''<remarks/>
        Public Property SellerProfileDetails() As SellerProfileDetails()
            Get
                Return Me.sellerProfileDetailsField
            End Get
            Set(ByVal value As SellerProfileDetails())
                Me.sellerProfileDetailsField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class SellerProfileRequest

        Private seller_idField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private pageField As String

        Private descField As String

        Private localeField As String

        '''<remarks/>
        Public Property seller_id() As String
            Get
                Return Me.seller_idField
            End Get
            Set(ByVal value As String)
                Me.seller_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property desc() As String
            Get
                Return Me.descField
            End Get
            Set(ByVal value As String)
                Me.descField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class MarketplaceSearchDetails

        Private numberOfOpenListingsField As String

        Private listingProductInfoField As ListingProductInfo

        '''<remarks/>
        Public Property NumberOfOpenListings() As String
            Get
                Return Me.numberOfOpenListingsField
            End Get
            Set(ByVal value As String)
                Me.numberOfOpenListingsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ListingProductInfo() As ListingProductInfo
            Get
                Return Me.listingProductInfoField
            End Get
            Set(ByVal value As ListingProductInfo)
                Me.listingProductInfoField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class MarketplaceSearch

        Private marketplaceSearchDetailsField() As MarketplaceSearchDetails

        '''<remarks/>
        Public Property MarketplaceSearchDetails() As MarketplaceSearchDetails()
            Get
                Return Me.marketplaceSearchDetailsField
            End Get
            Set(ByVal value As MarketplaceSearchDetails())
                Me.marketplaceSearchDetailsField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class MarketplaceRequest

        Private marketplace_searchField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private pageField As String

        Private keywordField As String

        Private keyword_searchField As String

        Private browse_idField As String

        Private zipcodeField As String

        Private area_idField As String

        Private geoField As String

        Private sortField As String

        Private listing_idField As String

        Private descField As String

        Private localeField As String

        Private indexField As String

        '''<remarks/>
        Public Property marketplace_search() As String
            Get
                Return Me.marketplace_searchField
            End Get
            Set(ByVal value As String)
                Me.marketplace_searchField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property keyword() As String
            Get
                Return Me.keywordField
            End Get
            Set(ByVal value As String)
                Me.keywordField = value
            End Set
        End Property

        '''<remarks/>
        Public Property keyword_search() As String
            Get
                Return Me.keyword_searchField
            End Get
            Set(ByVal value As String)
                Me.keyword_searchField = value
            End Set
        End Property

        '''<remarks/>
        Public Property browse_id() As String
            Get
                Return Me.browse_idField
            End Get
            Set(ByVal value As String)
                Me.browse_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property zipcode() As String
            Get
                Return Me.zipcodeField
            End Get
            Set(ByVal value As String)
                Me.zipcodeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property area_id() As String
            Get
                Return Me.area_idField
            End Get
            Set(ByVal value As String)
                Me.area_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property geo() As String
            Get
                Return Me.geoField
            End Get
            Set(ByVal value As String)
                Me.geoField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sort() As String
            Get
                Return Me.sortField
            End Get
            Set(ByVal value As String)
                Me.sortField = value
            End Set
        End Property

        '''<remarks/>
        Public Property listing_id() As String
            Get
                Return Me.listing_idField
            End Get
            Set(ByVal value As String)
                Me.listing_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property desc() As String
            Get
                Return Me.descField
            End Get
            Set(ByVal value As String)
                Me.descField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property index() As String
            Get
                Return Me.indexField
            End Get
            Set(ByVal value As String)
                Me.indexField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ExchangeRequest

        Private exchange_idField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private localeField As String

        '''<remarks/>
        Public Property exchange_id() As String
            Get
                Return Me.exchange_idField
            End Get
            Set(ByVal value As String)
                Me.exchange_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class WishlistRequest

        Private wishlist_idField As String

        Private pageField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private localeField As String

        '''<remarks/>
        Public Property wishlist_id() As String
            Get
                Return Me.wishlist_idField
            End Get
            Set(ByVal value As String)
                Me.wishlist_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ListManiaRequest

        Private lm_idField As String

        Private pageField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private localeField As String

        '''<remarks/>
        Public Property lm_id() As String
            Get
                Return Me.lm_idField
            End Get
            Set(ByVal value As String)
                Me.lm_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class DirectorRequest

        Private directorField As String

        Private pageField As String

        Private modeField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private sortField As String

        Private localeField As String

        Private keywordsField As String

        Private priceField As String

        '''<remarks/>
        Public Property director() As String
            Get
                Return Me.directorField
            End Get
            Set(ByVal value As String)
                Me.directorField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sort() As String
            Get
                Return Me.sortField
            End Get
            Set(ByVal value As String)
                Me.sortField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property keywords() As String
            Get
                Return Me.keywordsField
            End Get
            Set(ByVal value As String)
                Me.keywordsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property price() As String
            Get
                Return Me.priceField
            End Get
            Set(ByVal value As String)
                Me.priceField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ManufacturerRequest

        Private manufacturerField As String

        Private pageField As String

        Private modeField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private sortField As String

        Private localeField As String

        Private keywordsField As String

        Private priceField As String

        '''<remarks/>
        Public Property manufacturer() As String
            Get
                Return Me.manufacturerField
            End Get
            Set(ByVal value As String)
                Me.manufacturerField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sort() As String
            Get
                Return Me.sortField
            End Get
            Set(ByVal value As String)
                Me.sortField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property keywords() As String
            Get
                Return Me.keywordsField
            End Get
            Set(ByVal value As String)
                Me.keywordsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property price() As String
            Get
                Return Me.priceField
            End Get
            Set(ByVal value As String)
                Me.priceField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ActorRequest

        Private actorField As String

        Private pageField As String

        Private modeField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private sortField As String

        Private localeField As String

        Private keywordsField As String

        Private priceField As String

        '''<remarks/>
        Public Property actor() As String
            Get
                Return Me.actorField
            End Get
            Set(ByVal value As String)
                Me.actorField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sort() As String
            Get
                Return Me.sortField
            End Get
            Set(ByVal value As String)
                Me.sortField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property keywords() As String
            Get
                Return Me.keywordsField
            End Get
            Set(ByVal value As String)
                Me.keywordsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property price() As String
            Get
                Return Me.priceField
            End Get
            Set(ByVal value As String)
                Me.priceField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ArtistRequest

        Private artistField As String

        Private pageField As String

        Private modeField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private sortField As String

        Private localeField As String

        Private keywordsField As String

        Private priceField As String

        '''<remarks/>
        Public Property artist() As String
            Get
                Return Me.artistField
            End Get
            Set(ByVal value As String)
                Me.artistField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sort() As String
            Get
                Return Me.sortField
            End Get
            Set(ByVal value As String)
                Me.sortField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property keywords() As String
            Get
                Return Me.keywordsField
            End Get
            Set(ByVal value As String)
                Me.keywordsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property price() As String
            Get
                Return Me.priceField
            End Get
            Set(ByVal value As String)
                Me.priceField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class AuthorRequest

        Private authorField As String

        Private pageField As String

        Private modeField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private sortField As String

        Private localeField As String

        Private keywordsField As String

        Private priceField As String

        '''<remarks/>
        Public Property author() As String
            Get
                Return Me.authorField
            End Get
            Set(ByVal value As String)
                Me.authorField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sort() As String
            Get
                Return Me.sortField
            End Get
            Set(ByVal value As String)
                Me.sortField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property keywords() As String
            Get
                Return Me.keywordsField
            End Get
            Set(ByVal value As String)
                Me.keywordsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property price() As String
            Get
                Return Me.priceField
            End Get
            Set(ByVal value As String)
                Me.priceField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class SkuRequest

        Private skuField As String

        Private modeField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private merchant_idField As String

        Private keywordsField As String

        Private sortField As String

        Private localeField As String

        '''<remarks/>
        Public Property sku() As String
            Get
                Return Me.skuField
            End Get
            Set(ByVal value As String)
                Me.skuField = value
            End Set
        End Property

        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property merchant_id() As String
            Get
                Return Me.merchant_idField
            End Get
            Set(ByVal value As String)
                Me.merchant_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property keywords() As String
            Get
                Return Me.keywordsField
            End Get
            Set(ByVal value As String)
                Me.keywordsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sort() As String
            Get
                Return Me.sortField
            End Get
            Set(ByVal value As String)
                Me.sortField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class UpcRequest

        Private upcField As String

        Private modeField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private sortField As String

        Private localeField As String

        '''<remarks/>
        Public Property upc() As String
            Get
                Return Me.upcField
            End Get
            Set(ByVal value As String)
                Me.upcField = value
            End Set
        End Property

        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sort() As String
            Get
                Return Me.sortField
            End Get
            Set(ByVal value As String)
                Me.sortField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ProductLine

        Private modeField As String

        Private relevanceRankField As String

        Private productInfoField As ProductInfo

        '''<remarks/>
        Public Property Mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property RelevanceRank() As String
            Get
                Return Me.relevanceRankField
            End Get
            Set(ByVal value As String)
                Me.relevanceRankField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ProductInfo() As ProductInfo
            Get
                Return Me.productInfoField
            End Get
            Set(ByVal value As ProductInfo)
                Me.productInfoField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ProductInfo

        Private totalResultsField As String

        Private totalPagesField As String

        Private listNameField As String

        Private detailsField() As Details

        '''<remarks/>
        Public Property TotalResults() As String
            Get
                Return Me.totalResultsField
            End Get
            Set(ByVal value As String)
                Me.totalResultsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property TotalPages() As String
            Get
                Return Me.totalPagesField
            End Get
            Set(ByVal value As String)
                Me.totalPagesField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ListName() As String
            Get
                Return Me.listNameField
            End Get
            Set(ByVal value As String)
                Me.listNameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Details() As Details()
            Get
                Return Me.detailsField
            End Get
            Set(ByVal value As Details())
                Me.detailsField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class Details

        Private urlField As String

        Private asinField As String

        Private productNameField As String

        Private catalogField As String

        Private keyPhrasesField() As KeyPhrase

        Private artistsField() As String

        Private authorsField() As String

        Private mpnField As String

        Private starringField() As String

        Private directorsField() As String

        Private theatricalReleaseDateField As String

        Private releaseDateField As String

        Private manufacturerField As String

        Private distributorField As String

        Private imageUrlSmallField As String

        Private imageUrlMediumField As String

        Private imageUrlLargeField As String

        Private merchantIdField As String

        Private minPriceField As String

        Private maxPriceField As String

        Private minSalePriceField As String

        Private maxSalePriceField As String

        Private multiMerchantField As String

        Private merchantSkuField As String

        Private listPriceField As String

        Private ourPriceField As String

        Private usedPriceField As String

        Private refurbishedPriceField As String

        Private collectiblePriceField As String

        Private thirdPartyNewPriceField As String

        Private numberOfOfferingsField As String

        Private thirdPartyNewCountField As String

        Private usedCountField As String

        Private collectibleCountField As String

        Private refurbishedCountField As String

        Private thirdPartyProductInfoField As ThirdPartyProductInfo

        Private salesRankField As String

        Private browseListField() As BrowseNode

        Private mediaField As String

        Private readingLevelField As String

        Private numberOfPagesField As String

        Private numberOfIssuesField As String

        Private issuesPerYearField As String

        Private subscriptionLengthField As String

        Private deweyNumberField As String

        Private runningTimeField As String

        Private publisherField As String

        Private numMediaField As String

        Private isbnField As String

        Private featuresField() As String

        Private mpaaRatingField As String

        Private esrbRatingField As String

        Private ageGroupField As String

        Private availabilityField As String

        Private upcField As String

        Private tracksField() As Track

        Private accessoriesField() As String

        Private platformsField() As String

        Private encodingField As String

        Private productDescriptionField As String

        Private reviewsField As Reviews

        Private similarProductsField() As String

        Private featuredProductsField() As FeaturedProduct

        Private listsField() As String

        Private statusField As String

        Private variationsField() As Variation

        '''<remarks/>
        Public Property Url() As String
            Get
                Return Me.urlField
            End Get
            Set(ByVal value As String)
                Me.urlField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Asin() As String
            Get
                Return Me.asinField
            End Get
            Set(ByVal value As String)
                Me.asinField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ProductName() As String
            Get
                Return Me.productNameField
            End Get
            Set(ByVal value As String)
                Me.productNameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Catalog() As String
            Get
                Return Me.catalogField
            End Get
            Set(ByVal value As String)
                Me.catalogField = value
            End Set
        End Property

        '''<remarks/>
        Public Property KeyPhrases() As KeyPhrase()
            Get
                Return Me.keyPhrasesField
            End Get
            Set(ByVal value As KeyPhrase())
                Me.keyPhrasesField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Artists() As String()
            Get
                Return Me.artistsField
            End Get
            Set(ByVal value As String())
                Me.artistsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Authors() As String()
            Get
                Return Me.authorsField
            End Get
            Set(ByVal value As String())
                Me.authorsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Mpn() As String
            Get
                Return Me.mpnField
            End Get
            Set(ByVal value As String)
                Me.mpnField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Starring() As String()
            Get
                Return Me.starringField
            End Get
            Set(ByVal value As String())
                Me.starringField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Directors() As String()
            Get
                Return Me.directorsField
            End Get
            Set(ByVal value As String())
                Me.directorsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property TheatricalReleaseDate() As String
            Get
                Return Me.theatricalReleaseDateField
            End Get
            Set(ByVal value As String)
                Me.theatricalReleaseDateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ReleaseDate() As String
            Get
                Return Me.releaseDateField
            End Get
            Set(ByVal value As String)
                Me.releaseDateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Manufacturer() As String
            Get
                Return Me.manufacturerField
            End Get
            Set(ByVal value As String)
                Me.manufacturerField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Distributor() As String
            Get
                Return Me.distributorField
            End Get
            Set(ByVal value As String)
                Me.distributorField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ImageUrlSmall() As String
            Get
                Return Me.imageUrlSmallField
            End Get
            Set(ByVal value As String)
                Me.imageUrlSmallField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ImageUrlMedium() As String
            Get
                Return Me.imageUrlMediumField
            End Get
            Set(ByVal value As String)
                Me.imageUrlMediumField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ImageUrlLarge() As String
            Get
                Return Me.imageUrlLargeField
            End Get
            Set(ByVal value As String)
                Me.imageUrlLargeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MerchantId() As String
            Get
                Return Me.merchantIdField
            End Get
            Set(ByVal value As String)
                Me.merchantIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MinPrice() As String
            Get
                Return Me.minPriceField
            End Get
            Set(ByVal value As String)
                Me.minPriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MaxPrice() As String
            Get
                Return Me.maxPriceField
            End Get
            Set(ByVal value As String)
                Me.maxPriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MinSalePrice() As String
            Get
                Return Me.minSalePriceField
            End Get
            Set(ByVal value As String)
                Me.minSalePriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MaxSalePrice() As String
            Get
                Return Me.maxSalePriceField
            End Get
            Set(ByVal value As String)
                Me.maxSalePriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MultiMerchant() As String
            Get
                Return Me.multiMerchantField
            End Get
            Set(ByVal value As String)
                Me.multiMerchantField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MerchantSku() As String
            Get
                Return Me.merchantSkuField
            End Get
            Set(ByVal value As String)
                Me.merchantSkuField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ListPrice() As String
            Get
                Return Me.listPriceField
            End Get
            Set(ByVal value As String)
                Me.listPriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property OurPrice() As String
            Get
                Return Me.ourPriceField
            End Get
            Set(ByVal value As String)
                Me.ourPriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property UsedPrice() As String
            Get
                Return Me.usedPriceField
            End Get
            Set(ByVal value As String)
                Me.usedPriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property RefurbishedPrice() As String
            Get
                Return Me.refurbishedPriceField
            End Get
            Set(ByVal value As String)
                Me.refurbishedPriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property CollectiblePrice() As String
            Get
                Return Me.collectiblePriceField
            End Get
            Set(ByVal value As String)
                Me.collectiblePriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ThirdPartyNewPrice() As String
            Get
                Return Me.thirdPartyNewPriceField
            End Get
            Set(ByVal value As String)
                Me.thirdPartyNewPriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property NumberOfOfferings() As String
            Get
                Return Me.numberOfOfferingsField
            End Get
            Set(ByVal value As String)
                Me.numberOfOfferingsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ThirdPartyNewCount() As String
            Get
                Return Me.thirdPartyNewCountField
            End Get
            Set(ByVal value As String)
                Me.thirdPartyNewCountField = value
            End Set
        End Property

        '''<remarks/>
        Public Property UsedCount() As String
            Get
                Return Me.usedCountField
            End Get
            Set(ByVal value As String)
                Me.usedCountField = value
            End Set
        End Property

        '''<remarks/>
        Public Property CollectibleCount() As String
            Get
                Return Me.collectibleCountField
            End Get
            Set(ByVal value As String)
                Me.collectibleCountField = value
            End Set
        End Property

        '''<remarks/>
        Public Property RefurbishedCount() As String
            Get
                Return Me.refurbishedCountField
            End Get
            Set(ByVal value As String)
                Me.refurbishedCountField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ThirdPartyProductInfo() As ThirdPartyProductInfo
            Get
                Return Me.thirdPartyProductInfoField
            End Get
            Set(ByVal value As ThirdPartyProductInfo)
                Me.thirdPartyProductInfoField = value
            End Set
        End Property

        '''<remarks/>
        Public Property SalesRank() As String
            Get
                Return Me.salesRankField
            End Get
            Set(ByVal value As String)
                Me.salesRankField = value
            End Set
        End Property

        '''<remarks/>
        Public Property BrowseList() As BrowseNode()
            Get
                Return Me.browseListField
            End Get
            Set(ByVal value As BrowseNode())
                Me.browseListField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Media() As String
            Get
                Return Me.mediaField
            End Get
            Set(ByVal value As String)
                Me.mediaField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ReadingLevel() As String
            Get
                Return Me.readingLevelField
            End Get
            Set(ByVal value As String)
                Me.readingLevelField = value
            End Set
        End Property

        '''<remarks/>
        Public Property NumberOfPages() As String
            Get
                Return Me.numberOfPagesField
            End Get
            Set(ByVal value As String)
                Me.numberOfPagesField = value
            End Set
        End Property

        '''<remarks/>
        Public Property NumberOfIssues() As String
            Get
                Return Me.numberOfIssuesField
            End Get
            Set(ByVal value As String)
                Me.numberOfIssuesField = value
            End Set
        End Property

        '''<remarks/>
        Public Property IssuesPerYear() As String
            Get
                Return Me.issuesPerYearField
            End Get
            Set(ByVal value As String)
                Me.issuesPerYearField = value
            End Set
        End Property

        '''<remarks/>
        Public Property SubscriptionLength() As String
            Get
                Return Me.subscriptionLengthField
            End Get
            Set(ByVal value As String)
                Me.subscriptionLengthField = value
            End Set
        End Property

        '''<remarks/>
        Public Property DeweyNumber() As String
            Get
                Return Me.deweyNumberField
            End Get
            Set(ByVal value As String)
                Me.deweyNumberField = value
            End Set
        End Property

        '''<remarks/>
        Public Property RunningTime() As String
            Get
                Return Me.runningTimeField
            End Get
            Set(ByVal value As String)
                Me.runningTimeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Publisher() As String
            Get
                Return Me.publisherField
            End Get
            Set(ByVal value As String)
                Me.publisherField = value
            End Set
        End Property

        '''<remarks/>
        Public Property NumMedia() As String
            Get
                Return Me.numMediaField
            End Get
            Set(ByVal value As String)
                Me.numMediaField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Isbn() As String
            Get
                Return Me.isbnField
            End Get
            Set(ByVal value As String)
                Me.isbnField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Features() As String()
            Get
                Return Me.featuresField
            End Get
            Set(ByVal value As String())
                Me.featuresField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MpaaRating() As String
            Get
                Return Me.mpaaRatingField
            End Get
            Set(ByVal value As String)
                Me.mpaaRatingField = value
            End Set
        End Property

        '''<remarks/>
        Public Property EsrbRating() As String
            Get
                Return Me.esrbRatingField
            End Get
            Set(ByVal value As String)
                Me.esrbRatingField = value
            End Set
        End Property

        '''<remarks/>
        Public Property AgeGroup() As String
            Get
                Return Me.ageGroupField
            End Get
            Set(ByVal value As String)
                Me.ageGroupField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Availability() As String
            Get
                Return Me.availabilityField
            End Get
            Set(ByVal value As String)
                Me.availabilityField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Upc() As String
            Get
                Return Me.upcField
            End Get
            Set(ByVal value As String)
                Me.upcField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Tracks() As Track()
            Get
                Return Me.tracksField
            End Get
            Set(ByVal value As Track())
                Me.tracksField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Accessories() As String()
            Get
                Return Me.accessoriesField
            End Get
            Set(ByVal value As String())
                Me.accessoriesField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Platforms() As String()
            Get
                Return Me.platformsField
            End Get
            Set(ByVal value As String())
                Me.platformsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Encoding() As String
            Get
                Return Me.encodingField
            End Get
            Set(ByVal value As String)
                Me.encodingField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ProductDescription() As String
            Get
                Return Me.productDescriptionField
            End Get
            Set(ByVal value As String)
                Me.productDescriptionField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Reviews() As Reviews
            Get
                Return Me.reviewsField
            End Get
            Set(ByVal value As Reviews)
                Me.reviewsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property SimilarProducts() As String()
            Get
                Return Me.similarProductsField
            End Get
            Set(ByVal value As String())
                Me.similarProductsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property FeaturedProducts() As FeaturedProduct()
            Get
                Return Me.featuredProductsField
            End Get
            Set(ByVal value As FeaturedProduct())
                Me.featuredProductsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Lists() As String()
            Get
                Return Me.listsField
            End Get
            Set(ByVal value As String())
                Me.listsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set(ByVal value As String)
                Me.statusField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Variations() As Variation()
            Get
                Return Me.variationsField
            End Get
            Set(ByVal value As Variation())
                Me.variationsField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class KeyPhrase

        Private keyPhrase1Field As String

        Private typeField As String

        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute("KeyPhrase")> _
        Public Property KeyPhrase1() As String
            Get
                Return Me.keyPhrase1Field
            End Get
            Set(ByVal value As String)
                Me.keyPhrase1Field = value
            End Set
        End Property

        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ThirdPartyProductInfo

        Private thirdPartyProductDetailsField() As ThirdPartyProductDetails

        '''<remarks/>
        Public Property ThirdPartyProductDetails() As ThirdPartyProductDetails()
            Get
                Return Me.thirdPartyProductDetailsField
            End Get
            Set(ByVal value As ThirdPartyProductDetails())
                Me.thirdPartyProductDetailsField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class ThirdPartyProductDetails

        Private offeringTypeField As String

        Private sellerIdField As String

        Private sellerNicknameField As String

        Private exchangeIdField As String

        Private offeringPriceField As String

        Private conditionField As String

        Private conditionTypeField As String

        Private exchangeAvailabilityField As String

        Private sellerCountryField As String

        Private sellerStateField As String

        Private shipCommentsField As String

        Private sellerRatingField As String

        '''<remarks/>
        Public Property OfferingType() As String
            Get
                Return Me.offeringTypeField
            End Get
            Set(ByVal value As String)
                Me.offeringTypeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property SellerId() As String
            Get
                Return Me.sellerIdField
            End Get
            Set(ByVal value As String)
                Me.sellerIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property SellerNickname() As String
            Get
                Return Me.sellerNicknameField
            End Get
            Set(ByVal value As String)
                Me.sellerNicknameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeId() As String
            Get
                Return Me.exchangeIdField
            End Get
            Set(ByVal value As String)
                Me.exchangeIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property OfferingPrice() As String
            Get
                Return Me.offeringPriceField
            End Get
            Set(ByVal value As String)
                Me.offeringPriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Condition() As String
            Get
                Return Me.conditionField
            End Get
            Set(ByVal value As String)
                Me.conditionField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ConditionType() As String
            Get
                Return Me.conditionTypeField
            End Get
            Set(ByVal value As String)
                Me.conditionTypeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ExchangeAvailability() As String
            Get
                Return Me.exchangeAvailabilityField
            End Get
            Set(ByVal value As String)
                Me.exchangeAvailabilityField = value
            End Set
        End Property

        '''<remarks/>
        Public Property SellerCountry() As String
            Get
                Return Me.sellerCountryField
            End Get
            Set(ByVal value As String)
                Me.sellerCountryField = value
            End Set
        End Property

        '''<remarks/>
        Public Property SellerState() As String
            Get
                Return Me.sellerStateField
            End Get
            Set(ByVal value As String)
                Me.sellerStateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ShipComments() As String
            Get
                Return Me.shipCommentsField
            End Get
            Set(ByVal value As String)
                Me.shipCommentsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property SellerRating() As String
            Get
                Return Me.sellerRatingField
            End Get
            Set(ByVal value As String)
                Me.sellerRatingField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class BrowseNode

        Private browseIdField As String

        Private browseNameField As String

        '''<remarks/>
        Public Property BrowseId() As String
            Get
                Return Me.browseIdField
            End Get
            Set(ByVal value As String)
                Me.browseIdField = value
            End Set
        End Property

        '''<remarks/>
        Public Property BrowseName() As String
            Get
                Return Me.browseNameField
            End Get
            Set(ByVal value As String)
                Me.browseNameField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class Track

        Private trackNameField As String

        Private byArtistField As String

        '''<remarks/>
        Public Property TrackName() As String
            Get
                Return Me.trackNameField
            End Get
            Set(ByVal value As String)
                Me.trackNameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ByArtist() As String
            Get
                Return Me.byArtistField
            End Get
            Set(ByVal value As String)
                Me.byArtistField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class Reviews

        Private avgCustomerRatingField As String

        Private totalCustomerReviewsField As String

        Private customerReviewsField() As CustomerReview

        '''<remarks/>
        Public Property AvgCustomerRating() As String
            Get
                Return Me.avgCustomerRatingField
            End Get
            Set(ByVal value As String)
                Me.avgCustomerRatingField = value
            End Set
        End Property

        '''<remarks/>
        Public Property TotalCustomerReviews() As String
            Get
                Return Me.totalCustomerReviewsField
            End Get
            Set(ByVal value As String)
                Me.totalCustomerReviewsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property CustomerReviews() As CustomerReview()
            Get
                Return Me.customerReviewsField
            End Get
            Set(ByVal value As CustomerReview())
                Me.customerReviewsField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class CustomerReview

        Private ratingField As String

        Private dateField As String

        Private summaryField As String

        Private commentField As String

        '''<remarks/>
        Public Property Rating() As String
            Get
                Return Me.ratingField
            End Get
            Set(ByVal value As String)
                Me.ratingField = value
            End Set
        End Property

        '''<remarks/>
        Public Property [Date]() As String
            Get
                Return Me.dateField
            End Get
            Set(ByVal value As String)
                Me.dateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Summary() As String
            Get
                Return Me.summaryField
            End Get
            Set(ByVal value As String)
                Me.summaryField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set(ByVal value As String)
                Me.commentField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class FeaturedProduct

        Private asinField As String

        Private commentField As String

        '''<remarks/>
        Public Property Asin() As String
            Get
                Return Me.asinField
            End Get
            Set(ByVal value As String)
                Me.asinField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set(ByVal value As String)
                Me.commentField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class Variation

        Private asinField As String

        Private clothingSizeField As String

        Private clothingColorField As String

        Private priceField As String

        Private salePriceField As String

        Private availabilityField As String

        Private multiMerchantField As String

        Private merchantSkuField As String

        '''<remarks/>
        Public Property Asin() As String
            Get
                Return Me.asinField
            End Get
            Set(ByVal value As String)
                Me.asinField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ClothingSize() As String
            Get
                Return Me.clothingSizeField
            End Get
            Set(ByVal value As String)
                Me.clothingSizeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ClothingColor() As String
            Get
                Return Me.clothingColorField
            End Get
            Set(ByVal value As String)
                Me.clothingColorField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Price() As String
            Get
                Return Me.priceField
            End Get
            Set(ByVal value As String)
                Me.priceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property SalePrice() As String
            Get
                Return Me.salePriceField
            End Get
            Set(ByVal value As String)
                Me.salePriceField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Availability() As String
            Get
                Return Me.availabilityField
            End Get
            Set(ByVal value As String)
                Me.availabilityField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MultiMerchant() As String
            Get
                Return Me.multiMerchantField
            End Get
            Set(ByVal value As String)
                Me.multiMerchantField = value
            End Set
        End Property

        '''<remarks/>
        Public Property MerchantSku() As String
            Get
                Return Me.merchantSkuField
            End Get
            Set(ByVal value As String)
                Me.merchantSkuField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class BlendedRequest

        Private blendedField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private localeField As String

        '''<remarks/>
        Public Property blended() As String
            Get
                Return Me.blendedField
            End Get
            Set(ByVal value As String)
                Me.blendedField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class AsinRequest

        Private asinField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private offerField As String

        Private offerpageField As String

        Private localeField As String

        Private modeField As String

        '''<remarks/>
        Public Property asin() As String
            Get
                Return Me.asinField
            End Get
            Set(ByVal value As String)
                Me.asinField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property offer() As String
            Get
                Return Me.offerField
            End Get
            Set(ByVal value As String)
                Me.offerField = value
            End Set
        End Property

        '''<remarks/>
        Public Property offerpage() As String
            Get
                Return Me.offerpageField
            End Get
            Set(ByVal value As String)
                Me.offerpageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class BrowseNodeRequest

        Private browse_nodeField As String

        Private pageField As String

        Private modeField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private sortField As String

        Private localeField As String

        Private keywordsField As String

        Private priceField As String

        '''<remarks/>
        Public Property browse_node() As String
            Get
                Return Me.browse_nodeField
            End Get
            Set(ByVal value As String)
                Me.browse_nodeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sort() As String
            Get
                Return Me.sortField
            End Get
            Set(ByVal value As String)
                Me.sortField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property keywords() As String
            Get
                Return Me.keywordsField
            End Get
            Set(ByVal value As String)
                Me.keywordsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property price() As String
            Get
                Return Me.priceField
            End Get
            Set(ByVal value As String)
                Me.priceField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class PowerRequest

        Private powerField As String

        Private pageField As String

        Private modeField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private sortField As String

        Private localeField As String

        '''<remarks/>
        Public Property power() As String
            Get
                Return Me.powerField
            End Get
            Set(ByVal value As String)
                Me.powerField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sort() As String
            Get
                Return Me.sortField
            End Get
            Set(ByVal value As String)
                Me.sortField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.SerializableAttribute(), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://soap.amazon.com")> _
    Public Class TextStreamRequest

        Private textStreamField As String

        Private pageField As String

        Private modeField As String

        Private tagField As String

        Private typeField As String

        Private devtagField As String

        Private sortField As String

        Private localeField As String

        Private priceField As String

        '''<remarks/>
        Public Property textStream() As String
            Get
                Return Me.textStreamField
            End Get
            Set(ByVal value As String)
                Me.textStreamField = value
            End Set
        End Property

        '''<remarks/>
        Public Property page() As String
            Get
                Return Me.pageField
            End Get
            Set(ByVal value As String)
                Me.pageField = value
            End Set
        End Property

        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set(ByVal value As String)
                Me.tagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set(ByVal value As String)
                Me.typeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property devtag() As String
            Get
                Return Me.devtagField
            End Get
            Set(ByVal value As String)
                Me.devtagField = value
            End Set
        End Property

        '''<remarks/>
        Public Property sort() As String
            Get
                Return Me.sortField
            End Get
            Set(ByVal value As String)
                Me.sortField = value
            End Set
        End Property

        '''<remarks/>
        Public Property locale() As String
            Get
                Return Me.localeField
            End Get
            Set(ByVal value As String)
                Me.localeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property price() As String
            Get
                Return Me.priceField
            End Get
            Set(ByVal value As String)
                Me.priceField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub KeywordSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As KeywordSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class KeywordSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub TextStreamSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As TextStreamSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class TextStreamSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub PowerSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As PowerSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class PowerSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub BrowseNodeSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As BrowseNodeSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class BrowseNodeSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub AsinSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As AsinSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class AsinSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub BlendedSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As BlendedSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class BlendedSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductLine()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductLine())
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub UpcSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As UpcSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class UpcSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub SkuSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As SkuSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class SkuSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub AuthorSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As AuthorSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class AuthorSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub ArtistSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As ArtistSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class ArtistSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub ActorSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As ActorSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class ActorSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub ManufacturerSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As ManufacturerSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class ManufacturerSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub DirectorSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As DirectorSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class DirectorSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub ListManiaSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As ListManiaSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class ListManiaSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub WishlistSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As WishlistSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class WishlistSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub ExchangeSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As ExchangeSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class ExchangeSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ListingProductDetails
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ListingProductDetails)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub MarketplaceSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As MarketplaceSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class MarketplaceSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As MarketplaceSearch
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), MarketplaceSearch)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub SellerProfileSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As SellerProfileSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class SellerProfileSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As SellerProfile
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), SellerProfile)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub SellerSearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As SellerSearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class SellerSearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As SellerSearch
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), SellerSearch)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub SimilaritySearchRequestCompletedEventHandler(ByVal sender As Object, ByVal args As SimilaritySearchRequestCompletedEventArgs)

    '''<remarks/>
    Public Class SimilaritySearchRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ProductInfo
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ProductInfo)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub GetShoppingCartRequestCompletedEventHandler(ByVal sender As Object, ByVal args As GetShoppingCartRequestCompletedEventArgs)

    '''<remarks/>
    Public Class GetShoppingCartRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ShoppingCart
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ShoppingCart)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub ClearShoppingCartRequestCompletedEventHandler(ByVal sender As Object, ByVal args As ClearShoppingCartRequestCompletedEventArgs)

    '''<remarks/>
    Public Class ClearShoppingCartRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ShoppingCart
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ShoppingCart)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub AddShoppingCartItemsRequestCompletedEventHandler(ByVal sender As Object, ByVal args As AddShoppingCartItemsRequestCompletedEventArgs)

    '''<remarks/>
    Public Class AddShoppingCartItemsRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ShoppingCart
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ShoppingCart)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub RemoveShoppingCartItemsRequestCompletedEventHandler(ByVal sender As Object, ByVal args As RemoveShoppingCartItemsRequestCompletedEventArgs)

    '''<remarks/>
    Public Class RemoveShoppingCartItemsRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ShoppingCart
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ShoppingCart)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub ModifyShoppingCartItemsRequestCompletedEventHandler(ByVal sender As Object, ByVal args As ModifyShoppingCartItemsRequestCompletedEventArgs)

    '''<remarks/>
    Public Class ModifyShoppingCartItemsRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As ShoppingCart
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), ShoppingCart)
            End Get
        End Property
    End Class

    '''<remarks/>
    Public Delegate Sub GetTransactionDetailsRequestCompletedEventHandler(ByVal sender As Object, ByVal args As GetTransactionDetailsRequestCompletedEventArgs)

    '''<remarks/>
    Public Class GetTransactionDetailsRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As GetTransactionDetailsResponse
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), GetTransactionDetailsResponse)
            End Get
        End Property
    End Class
End Namespace
