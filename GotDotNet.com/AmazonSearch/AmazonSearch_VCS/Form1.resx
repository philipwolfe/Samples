<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Af//gAP//4AD///AB///+Af///4P/w==
</value>
  </data>
</root>