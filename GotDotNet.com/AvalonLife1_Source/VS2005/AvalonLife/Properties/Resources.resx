<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Sys_DefConfigFileName" xml:space="preserve">
    <value>alconfig.xml</value>
  </data>
  <data name="UI_CellBirthCount_ToolTip" xml:space="preserve">
    <value>Total number of cells born</value>
  </data>
  <data name="UI_CellDeathCount_ToolTip" xml:space="preserve">
    <value>Total number of cells died</value>
  </data>
  <data name="UI_GridSize_ToolTip" xml:space="preserve">
    <value>Current number of rows and columns in grid</value>
  </data>
  <data name="UI_LifeGrid_ToolTip" xml:space="preserve">
    <value>Click or click-n-drag to edit the life grid</value>
  </data>
  <data name="UI_MB_CaptionText" xml:space="preserve">
    <value>New Game</value>
  </data>
  <data name="UI_MB_CaptionText2" xml:space="preserve">
    <value>Reset Simulation</value>
  </data>
  <data name="UI_MB_CaptionText3" xml:space="preserve">
    <value>Save Current Model?</value>
  </data>
  <data name="UI_MB_LargeModelCaption" xml:space="preserve">
    <value>System Resources Impact</value>
  </data>
  <data name="UI_MB_LargeModelMsg" xml:space="preserve">
    <value>Note that large models with a high number of rows or columns (greater than 100 x 100) may consume large amounts of system memory and dramatically impact AvalonLife's performance. Click OK to proceed, or Cancel to abort. If you decide to create a model of this size and change your mind you can safely use Task Manager to kill AvalonLife's process. </value>
  </data>
  <data name="UI_MB_LoadFailedCaption" xml:space="preserve">
    <value>Error Loading Model</value>
  </data>
  <data name="UI_MB_LoadFailedMsg" xml:space="preserve">
    <value>The application was not able to load the selected model. Reason:</value>
  </data>
  <data name="UI_MB_PromptText" xml:space="preserve">
    <value>Do you want to clear the grid for a new model?</value>
  </data>
  <data name="UI_MB_PromptText2" xml:space="preserve">
    <value>Do you want to reset the simulation to its starting condition?</value>
  </data>
  <data name="UI_MB_PromptText3" xml:space="preserve">
    <value>Would you like to save the current model first?</value>
  </data>
  <data name="UI_MB_ResizeFailedCaption" xml:space="preserve">
    <value>Cannot Resize Model</value>
  </data>
  <data name="UI_MB_ResizeFailedMsg" xml:space="preserve">
    <value>Unable to resize the model: live cells would be clipped.</value>
  </data>
  <data name="UI_MB_SaveFailedCaption" xml:space="preserve">
    <value>Error Saving Game</value>
  </data>
  <data name="UI_MB_SaveFailedMsg" xml:space="preserve">
    <value>The application was not able to save the model. Reason:</value>
  </data>
  <data name="UI_MB_SettingsFailedCaption" xml:space="preserve">
    <value>Error Saving Configuration</value>
  </data>
  <data name="UI_MB_SettingsFailedMsg" xml:space="preserve">
    <value>The application was unable to save its settings. Reason: </value>
  </data>
  <data name="UI_MB_SettingsLoadFailedCaption" xml:space="preserve">
    <value>Error Loading Configuration</value>
  </data>
  <data name="UI_MB_SettingsLoadFailedMsg" xml:space="preserve">
    <value>The application was unable to load its configuration. Setting program defaults. Reason: </value>
  </data>
  <data name="UI_PeakPopulationCount_ToolTip" xml:space="preserve">
    <value>Maximum number of live cells</value>
  </data>
  <data name="UI_PopulationCount_ToolTip" xml:space="preserve">
    <value>Current number of live cells</value>
  </data>
  <data name="UI_RunButton_Content1" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="UI_RunButton_Content2" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="UI_RunButton_ToolTip1" xml:space="preserve">
    <value>Click to start the simulation</value>
  </data>
  <data name="UI_RunButton_ToolTip2" xml:space="preserve">
    <value>Click to pause the simulation</value>
  </data>
  <data name="UI_RunSpeedSlider_ToolTip" xml:space="preserve">
    <value>Adjust the simulation running speed</value>
  </data>
  <data name="UI_SimStatus_HaltMsg" xml:space="preserve">
    <value>Model evolution has ceased at generation:</value>
  </data>
  <data name="UI_StatusGenCount_ToolTip" xml:space="preserve">
    <value>Number of generations</value>
  </data>
</root>