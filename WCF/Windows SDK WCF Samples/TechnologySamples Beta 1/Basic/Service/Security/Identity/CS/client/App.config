<?xml version="1.0" encoding="utf-8"?>
<configuration>
<system.serviceModel>
  <behaviors>
    <endpointBehaviors>
      <behavior name="ClientCredentialsBehavior">
        <clientCredentials>
          <serviceCertificate>
            <!-- 
          Setting the certificateValidationMode to PeerOrChainTrust means that if the certificate 
          is in the user's Trusted People store, then it will be trusted without performing a
          validation of the certificate's issuer chain. This setting is used here for convenience so that the 
          sample can be run without having to have certificates issued by a certificate authority (CA).
          This setting is less secure than the default, ChainTrust. The security implications of this 
          setting should be carefully considered before using PeerOrChainTrust in production code. 
          -->
            <authentication certificateValidationMode="PeerOrChainTrust" />
          </serviceCertificate>
        </clientCredentials>
      </behavior>
    </endpointBehaviors>
  </behaviors>
  <bindings>
    <wsHttpBinding>
      <binding name="WSHttpBinding_ICalculator_Anonymous">
        <security>
          <message clientCredentialType="None"
                   negotiateServiceCredential="true"
                   establishSecurityContext="false" />
        </security>
      </binding>
      <binding name="WSHttpBinding_ICalculator_Windows">
        <security>
          <message clientCredentialType="Windows" 
                   negotiateServiceCredential="true"
                   establishSecurityContext="false" />
        </security>
      </binding>
    </wsHttpBinding>
  </bindings>
  <client>
    <endpoint address="http://localhost:8003/servicemodelsamples/service/dnsidentity"
      behaviorConfiguration="ClientCredentialsBehavior"
      binding="wsHttpBinding"
      bindingConfiguration="WSHttpBinding_ICalculator_Anonymous"
      contract="ICalculator"
      name="WSHttpBinding_ICalculator">
      <identity>
        <dns value="identity.com" />
      </identity>
    </endpoint>
    <endpoint address="http://localhost:8003/servicemodelsamples/service/certificateidentity"
        behaviorConfiguration="ClientCredentialsBehavior"
        binding="wsHttpBinding"
        bindingConfiguration="WSHttpBinding_ICalculator_Anonymous"
        contract="ICalculator"
        name="WSHttpBinding_ICalculator1">
      <identity>
        <certificate encodedValue="AwAAAAEAAAAUAAAARwEDOI5fk5i0+TbylJ9k8Kljle8gAAAAAQAAAMoBAAAwggHGMIIBdKADAgECAhCZcmDK722ujUz3waJ+O26gMAkGBSsOAwIdBQAwFjEUMBIGA1UEAxMLUm9vdCBBZ2VuY3kwHhcNMDYwNTE3MjE0NDI1WhcNMzkxMjMxMjM1OTU5WjApMRAwDgYDVQQKEwdDb250b3NvMRUwEwYDVQQDEwxpZGVudGl0eS5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMGaK9xvyFhuHXWGpWgO4HvOYnbLbfR/9vh77g/rJe0oq6FR1hwipzyYB+isgzhZYkRUZ4lWr2wUTCqsvlHKJ3yMxNHA8u8D/H/C+PWC0PUZYn5pSHamqJ6IYvsxZN6kcBAEiJtTGA6sA7PSP1eGDSIMVhJx1hSN6ojfJkgMLtZvAgMBAAGjSzBJMEcGA1UdAQRAMD6AEBLkCS0GHR1PAI1hIdwWZGOhGDAWMRQwEgYDVQQDEwtSb290IEFnZW5jeYIQBjdsAKoAZIoRz7jUqlw19DAJBgUrDgMCHQUAA0EAMH8nZCN1I8vwOiPekC94Jd3/l9jTd6j2RTKb9OZvi5t2qw5uuLSqdhH+fxbGxrXIngOSzpw0FM9LiXkHvNR42g==" />
      </identity>
    </endpoint>
    <endpoint address="http://localhost:8003/servicemodelsamples/service/rsaidentity"
        behaviorConfiguration="ClientCredentialsBehavior"
        binding="wsHttpBinding"
        bindingConfiguration="WSHttpBinding_ICalculator_Anonymous"
        contract="ICalculator" 
        name="WSHttpBinding_ICalculator2">
      <identity>
        <rsa value="&lt;RSAKeyValue&gt;&lt;Modulus&gt;wZor3G/IWG4ddYalaA7ge85idstt9H/2+HvuD+sl7SiroVHWHCKnPJgH6KyDOFliRFRniVavbBRMKqy+UconfIzE0cDy7wP8f8L49YLQ9RlifmlIdqaonohi+zFk3qRwEASIm1MYDqwDs9I/V4YNIgxWEnHWFI3qiN8mSAwu1m8=&lt;/Modulus&gt;&lt;Exponent&gt;AQAB&lt;/Exponent&gt;&lt;/RSAKeyValue&gt;" />
      </identity>
    </endpoint>
    <endpoint address="http://localhost:8003/servicemodelsamples/service/upnidentity"
        behaviorConfiguration="ClientCredentialsBehavior"
        binding="wsHttpBinding"
        bindingConfiguration="WSHttpBinding_ICalculator_Windows"
        contract="ICalculator"
        name="WSHttpBinding_ICalculator3">
      <identity>
        <!-- The identity created here will depend on the UPN the service is running under. -->
        <!-- The identity does not get checked when NTLM authentication is used which occurs -->
        <!-- when the client and service are running on the same machine. -->
        <!-- Setting negotiateServiceCredential="false" on the binding name="WSHttpBinding_ICalculator_Windows" -->
        <!-- forces Kerberos authentication and this client call will then fail unless the value -->
        <!-- for the UPN is changed below. e.g. value="host\myrealservice.com" -->
          <userPrincipalName value="host\myservice.com" />
      </identity>
    </endpoint>
  </client>
</system.serviceModel>
</configuration>