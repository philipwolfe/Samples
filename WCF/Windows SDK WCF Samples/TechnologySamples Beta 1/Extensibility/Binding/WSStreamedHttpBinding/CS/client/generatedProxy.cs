//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Microsoft.ServiceModel.Samples
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute()]
    public interface IStreamedEchoService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IStreamedEchoService/Echo", ReplyAction = "http://tempuri.org/IStreamedEchoService/EchoResponse")]
        System.IO.Stream Echo(System.IO.Stream data);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IStreamedEchoServiceChannel : IStreamedEchoService, System.ServiceModel.IClientChannel
    {
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class StreamedEchoServiceProxy : System.ServiceModel.ClientBase<IStreamedEchoService>, IStreamedEchoService
    {

        public StreamedEchoServiceProxy()
        {
        }

        public StreamedEchoServiceProxy(string endpointConfigurationName)
            :
                base(endpointConfigurationName)
        {
        }

        public StreamedEchoServiceProxy(string endpointConfigurationName, string remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public StreamedEchoServiceProxy(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public StreamedEchoServiceProxy(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress)
            :
                base(binding, remoteAddress)
        {
        }

        public System.IO.Stream Echo(System.IO.Stream data)
        {
            return base.Channel.Echo(data);
        }
    }
}
