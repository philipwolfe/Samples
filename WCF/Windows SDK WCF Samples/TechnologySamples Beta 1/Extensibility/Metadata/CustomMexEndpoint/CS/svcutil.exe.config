<configuration>
  <system.serviceModel>
    <client>
      <!-- the name should match the required scheme of the Metadata Exchange endpoint 
      and the contract should be "IMetadataExchange" -->
      <endpoint name="http"
                binding="wsHttpBinding"
                bindingConfiguration="Binding1"
                behaviorConfiguration="ClientCertificateBehavior"
                contract="IMetadataExchange" />
    </client>
    <bindings>
      <wsHttpBinding>
        <!-- 
          This configuration defines the security mode as Message and 
          the clientCredentialType as Certificate.
        -->
        <binding name="Binding1">
          <security mode="Message">
            <message clientCredentialType="Certificate"/>
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>

    <behaviors>
      <endpointBehaviors>
        <behavior name="ClientCertificateBehavior">
          <!-- 
            The clientCredentials behavior allows one to define a certificate to present to a service.
            A certificate is used by a client to authenticate itself to the service and provide message integrity.
            This configuration references the "client.com" certificate installed during the setup instructions.
          -->
          <clientCredentials>
            <clientCertificate findValue="client.com" storeLocation="CurrentUser" storeName="My" x509FindType="FindBySubjectName" />
            <serviceCertificate>
              <!-- 
                Setting the certificateValidationMode to PeerOrChainTrust means that if the certificate 
                is in the user's Trusted People store, then it will be trusted without performing a
                validation of the certificate's issuer chain. This setting is used here for convenience so that the 
                sample can be run without having to have certificates issued by a certificate authority (CA).
                This setting is less secure than the default, ChainTrust. The security implications of this 
                setting should be carefully considered before using PeerOrChainTrust in production code. 
              -->
              <authentication certificateValidationMode="PeerOrChainTrust" />
            </serviceCertificate>
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
    </behaviors>
    
    </system.serviceModel>

</configuration>