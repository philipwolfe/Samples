<StateMachineWorkflowActivity x:Class="Microsoft.WorkflowServices.Samples.StateMachineCalculatorService" InitialStateName="InitialState" x:Name="StateMachineCalculatorService" DynamicUpdateCondition="{x:Null}" CompletedStateName="FinalState" xmlns:ns0="clr-namespace:System.Workflow.Activities;Assembly=System.WorkflowServices, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow">
	<ns0:ReceiveActivity.WorkflowServiceAttributes>
		<ns0:WorkflowServiceAttributes ConfigurationName="StateMachineCalculatorService" />
	</ns0:ReceiveActivity.WorkflowServiceAttributes>
	<StateActivity x:Name="InitialState">
		<EventDrivenActivity x:Name="WaitForPowerOn">
			<ns0:ReceiveActivity x:Name="ReceivePowerOn" CanCreateInstance="True">
				<ns0:ReceiveActivity.ServiceOperationInfo>
					<ns0:TypedOperationInfo Name="PowerOn" ContractType="{x:Type Microsoft.WorkflowServices.Samples.ICalculator}" />
				</ns0:ReceiveActivity.ServiceOperationInfo>
				<ns0:ReceiveActivity.ParameterBindings>
					<WorkflowParameterBinding ParameterName="(ReturnValue)">
						<WorkflowParameterBinding.Value>
							<ActivityBind Name="StateMachineCalculatorService" Path="currentValue" />
						</WorkflowParameterBinding.Value>
					</WorkflowParameterBinding>
				</ns0:ReceiveActivity.ParameterBindings>
			</ns0:ReceiveActivity>
			<SetStateActivity x:Name="Transition1" TargetStateName="CalculatingState" />
		</EventDrivenActivity>
	</StateActivity>
	<StateActivity x:Name="FinalState" />
	<StateActivity x:Name="CalculatingState">
		<EventDrivenActivity x:Name="WaitForAdd">
			<ns0:ReceiveActivity x:Name="ReceiveAdd">
				<ns0:ReceiveActivity.ServiceOperationInfo>
					<ns0:TypedOperationInfo Name="Add" ContractType="{x:Type Microsoft.WorkflowServices.Samples.ICalculator}" />
				</ns0:ReceiveActivity.ServiceOperationInfo>
				<ns0:ReceiveActivity.ParameterBindings>
					<WorkflowParameterBinding ParameterName="value">
						<WorkflowParameterBinding.Value>
							<ActivityBind Name="StateMachineCalculatorService" Path="inputValue" />
						</WorkflowParameterBinding.Value>
					</WorkflowParameterBinding>
					<WorkflowParameterBinding ParameterName="(ReturnValue)">
						<WorkflowParameterBinding.Value>
							<ActivityBind Name="StateMachineCalculatorService" Path="currentValue" />
						</WorkflowParameterBinding.Value>
					</WorkflowParameterBinding>
				</ns0:ReceiveActivity.ParameterBindings>
				<CodeActivity x:Name="DoAdd" ExecuteCode="Add" />
			</ns0:ReceiveActivity>
		</EventDrivenActivity>
		<EventDrivenActivity x:Name="WaitForSubtract">
			<ns0:ReceiveActivity x:Name="ReceiveSubtract">
				<ns0:ReceiveActivity.ServiceOperationInfo>
					<ns0:TypedOperationInfo Name="Subtract" ContractType="{x:Type Microsoft.WorkflowServices.Samples.ICalculator}" />
				</ns0:ReceiveActivity.ServiceOperationInfo>
				<ns0:ReceiveActivity.ParameterBindings>
					<WorkflowParameterBinding ParameterName="(ReturnValue)">
						<WorkflowParameterBinding.Value>
							<ActivityBind Name="StateMachineCalculatorService" Path="currentValue" />
						</WorkflowParameterBinding.Value>
					</WorkflowParameterBinding>
					<WorkflowParameterBinding ParameterName="value">
						<WorkflowParameterBinding.Value>
							<ActivityBind Name="StateMachineCalculatorService" Path="inputValue" />
						</WorkflowParameterBinding.Value>
					</WorkflowParameterBinding>
				</ns0:ReceiveActivity.ParameterBindings>
				<CodeActivity x:Name="DoSubtract" ExecuteCode="Subtract" />
			</ns0:ReceiveActivity>
		</EventDrivenActivity>
		<EventDrivenActivity x:Name="WaitForMultiply">
			<ns0:ReceiveActivity x:Name="ReceiveMultiply">
				<ns0:ReceiveActivity.ServiceOperationInfo>
					<ns0:TypedOperationInfo Name="Multiply" ContractType="{x:Type Microsoft.WorkflowServices.Samples.ICalculator}" />
				</ns0:ReceiveActivity.ServiceOperationInfo>
				<ns0:ReceiveActivity.ParameterBindings>
					<WorkflowParameterBinding ParameterName="value">
						<WorkflowParameterBinding.Value>
							<ActivityBind Name="StateMachineCalculatorService" Path="inputValue" />
						</WorkflowParameterBinding.Value>
					</WorkflowParameterBinding>
					<WorkflowParameterBinding ParameterName="(ReturnValue)">
						<WorkflowParameterBinding.Value>
							<ActivityBind Name="StateMachineCalculatorService" Path="currentValue" />
						</WorkflowParameterBinding.Value>
					</WorkflowParameterBinding>
				</ns0:ReceiveActivity.ParameterBindings>
				<CodeActivity x:Name="DoMultiply" ExecuteCode="Multiply" />
			</ns0:ReceiveActivity>
		</EventDrivenActivity>
		<EventDrivenActivity x:Name="WaitForDivide">
			<ns0:ReceiveActivity x:Name="ReceiveDivide">
				<ns0:ReceiveActivity.ServiceOperationInfo>
					<ns0:TypedOperationInfo Name="Divide" ContractType="{x:Type Microsoft.WorkflowServices.Samples.ICalculator}" />
				</ns0:ReceiveActivity.ServiceOperationInfo>
				<ns0:ReceiveActivity.ParameterBindings>
					<WorkflowParameterBinding ParameterName="(ReturnValue)">
						<WorkflowParameterBinding.Value>
							<ActivityBind Name="StateMachineCalculatorService" Path="currentValue" />
						</WorkflowParameterBinding.Value>
					</WorkflowParameterBinding>
					<WorkflowParameterBinding ParameterName="value">
						<WorkflowParameterBinding.Value>
							<ActivityBind Name="StateMachineCalculatorService" Path="inputValue" />
						</WorkflowParameterBinding.Value>
					</WorkflowParameterBinding>
				</ns0:ReceiveActivity.ParameterBindings>
				<CodeActivity x:Name="DoDivide" ExecuteCode="Divide" />
			</ns0:ReceiveActivity>
		</EventDrivenActivity>
		<EventDrivenActivity x:Name="WaitForPowerOff">
			<ns0:ReceiveActivity x:Name="ReceivePowerOff">
				<ns0:ReceiveActivity.ServiceOperationInfo>
					<ns0:TypedOperationInfo Name="PowerOff" ContractType="{x:Type Microsoft.WorkflowServices.Samples.ICalculator}" />
				</ns0:ReceiveActivity.ServiceOperationInfo>
			</ns0:ReceiveActivity>
			<SetStateActivity x:Name="Transition2" TargetStateName="FinalState" />
		</EventDrivenActivity>
	</StateActivity>
</StateMachineWorkflowActivity>