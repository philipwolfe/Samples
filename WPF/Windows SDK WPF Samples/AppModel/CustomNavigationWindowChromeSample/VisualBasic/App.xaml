<Application
    x:Class="App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    StartupUri="Page1.xaml"
    xmlns:presentationFramework="clr-namespace:System.Windows.Navigation;assembly=presentationframework"
    xmlns:CustomNavigationWindowChromeSample="clr-namespace:CustomNavigationWindowChromeSampleVisualBasic">
  <Application.Resources>

    <!--Converters-->
    <presentationFramework:JournalEntryUnifiedViewConverter x:Key="JournalEntryUnifiedViewConverter" />

    <DataTemplate x:Key="NavigationHistoryItemTemplate">
      <!--
            Unified Navigation List Item - Uses custom StackPanel to support command that 
            allows a mouse click of this item to navigate to the URI stored in the item. We could
            use Button or MenuItem, which support commanding already, but they would have to be styled
            to prevent displaying of their core chrome, which doesn't look good in a drop-down list.
            -->
      <CustomNavigationWindowChromeSample:CommandableStackPanel Command="NavigationCommands.NavigateJournal" CommandTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type NavigationWindow}}}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
        <!--Make entire item clickable, using TextBlock container-->
        <TextBlock>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <Viewbox Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" Width="70" Height="70" Stretch="Fill" Margin="3,3,3,3">
              <Image Source="{Binding Path=CustomContentState.ContentImage}" HorizontalAlignment="Right" />
            </Viewbox>
            <TextBlock Grid.Column="1" Grid.Row="0" FontWeight="Bold" Text="{Binding Path=Name}"/>
            <TextBlock Grid.Column="1" Grid.Row="1" FontStyle="Italic" VerticalAlignment="Top"  Text="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}" />
          </Grid>
        </TextBlock>
      </CustomNavigationWindowChromeSample:CommandableStackPanel>
    </DataTemplate>

    <!--Customize NavigationWindow "chrome"-->
    <Style x:Key="{x:Type NavigationWindow}" TargetType="{x:Type NavigationWindow}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate>
            <DockPanel Background="{TemplateBinding Window.Background}">

              <!--Toolbar - leveraging NavigationCommands-->
              <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Background="Green">
                <Button Margin="5,5,5,5" Width="80" Height="25" Command="NavigationCommands.BrowseBack">Back</Button>
                <Button Margin="5,5,5,5" Width="80" Height="25" Command="NavigationCommands.BrowseForward">Forward</Button>
                <ComboBox Width="22" Height="25" ItemTemplate="{DynamicResource NavigationHistoryItemTemplate}" >
                  <ComboBox.ItemsSource>
                    <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}" >
                      <MultiBinding.Bindings>
                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type NavigationWindow}}" Path="BackStack"/>
                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type NavigationWindow}}" Path="ForwardStack"/>
                      </MultiBinding.Bindings>
                    </MultiBinding>
                  </ComboBox.ItemsSource>
                </ComboBox>
                <Button Margin="5,5,5,5" Width="80" Height="25" Command="NavigationCommands.Refresh">Refresh</Button>
                <Button Margin="5,5,5,5" Width="80" Height="25" Command="NavigationCommands.BrowseStop">Stop</Button>
              </StackPanel>

              <!--Content area eg where Pages go-->
              <ContentPresenter ClipToBounds="True" Content="{TemplateBinding Window.Content}"/>

            </DockPanel>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Width" Value="400" />
      <Setter Property="Height" Value="300" />
    </Style>

  </Application.Resources>
</Application>
