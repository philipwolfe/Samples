<html DIR="LTR"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" /><META NAME="save" CONTENT="history" /><title>Remember A Single Item of State Across Page Instances</title><META NAME="Description" CONTENT="This sample illustrates how to remember a single item of page state across page instances by using a dependency property."></META><META NAME="MS.LOCALE" CONTENT="en-us" /><style>
body
{font-family:Verdana;font-size:medium;}
div#mainSection, div#header
{font-size:70%;width: 100%;}
div#mainBody
{font-size:90%;}
div#mainSection div table
{font-size: 100%;text-align: left;}
span#nsrTitle
{color:#003399;font-size:90%;font-weight:600;}
div#header
{background-color:#D4DFFF;}
.heading
{font-size:120%;color:#003399;}
.subHeading
{font-size:100%;margin-bottom:4;}
li
{margin-top:-2;margin-bottom:3;}
p
{margin-top:10;margin-bottom:5;}
div.tableSection p
{margin-top:1;margin-bottom:4;}	
div#mainSection table th
{background-color:#EFEFF7;color:#000066;text-align:left;}
div#mainSection table td
{background-color:#F7F7FF;}
div#mainSection table
{margin-top:5px;margin-bottom: px;}
			</style></head><body><div id="header"><table width="100%" id="topTable"><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Remember A Single Item of State Across Page Instances</span></td></tr></table></div><div id="mainSection"><div id="mainBody"><br /><font color="DarkGray">[This readme is a partial copy of the sample's topic in the SDK documentation.]</font><br /><p>This sample illustrates how to remember a single item of page state across page instances by using a dependency property.</p><p>This sample demonstrates a specific feature of the Windows Presentation Foundation (WPF) and, consequently, does not follow application development best practices. For comprehensive coverage of WPF and Microsoft .NET Framework application development best practices, refer to the following as appropriate:</p><p>Accessibility - Accessibility Best Practices</p><p>Security - WPF Security</p><p>Localization - WPF Globalization and Localization Overview</p><a name="sample_build_instructions"></a><h1 class="heading">Building the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><ul><li><p>
            Install the Windows Software Development Kit (SDK) and open its build environment command window. On the Start menu, point to All Programs, Microsoft Windows SDK, and then click CMD Shell.
          </p></li><li><p>
            Download the sample, usually from the software development kit (SDK) documentation, to your hard disk drive.
          </p></li><li><p>
            To build the sample from the build environment command window, go to the source directory of the sample. At the command prompt, type MSBUILD.
          </p></li><li><p>
            To build the sample in Microsoft Visual Studio 2005, load the sample solution or project file and then press CTRL+SHIFT+B.
          </p></li></ul></div><a name="sample_run_instructions"></a><h1 class="heading">Running the Sample</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><ul><li><p>
            To run the compiled sample from the build environment command window, execute the .exe file in the Bin\Debug or Bin\Release folder contained under the sample source code folder.
          </p></li><li><p>
            To run the compiled sample with debugging in Visual Studio 2005, press F5.
          </p></li></ul></div><h1 class="heading">Remarks</h1><div id="sectionSection2" class="seeAlsoNoToggleSection"><p>By default, Windows Presentation Foundation (WPF) does not store page instances in navigation history. Instead, a new instance of a page is created each time it is navigated to. It is possible for WPF to retain page instances in navigation history, although this can be costly from a memory consumption perspective.</p><p>However, WPF provides an infrastructure that allows you to store state information with a page entry in navigation history. In this case, you can use the stored state to reconstitute the state of the page after it is instantiated.</p><p>This sample shows how to use a journaled dependency property to store and retrieve page state using navigation history. A <i>journaled dependency property</i> is a dependency property that has the following metadata:</p><p>Journal</p><p>This technique is most useful when you need to store a single item of page state across page instances. To remember a single set of state across page instances, you should consider using IProvideCustomContentState (see <a href="d8aa811c-0a5a-47d7-ae2e-145fea18d42b.htm">Remember A Single Set of State Across Page Instances</a>). To remember multiple sets of state for a single page instance, see <a href="36acb52b-f432-468f-9d4e-6a25d90b4de3.htm">Remember Multiple Sets of State Per Page Instance</a>.</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Important: </th></tr><tr><td><p> When you store information in custom content state, you cannot store any references to the instance of the page for which you are remembering state. This prevents WPF from releasing the page instance, and defeats the purpose of the default navigation history behavior. If you must do this, you might consider using KeepAlive instead.</p></td></tr></table></div></div><h1 class="heading">See Also</h1><div id="seeAlsoSection" class="seeAlsoNoToggleSection"><h4 class="subHeading">Tasks</h4><a href="d8aa811c-0a5a-47d7-ae2e-145fea18d42b.htm">Remember A Single Set of State Across Page Instances</a><br /><a href="36acb52b-f432-468f-9d4e-6a25d90b4de3.htm">Remember Multiple Sets of State Per Page Instance</a><br /><br /></div><UscDataIsland></UscDataIsland></div></div></body></html>