<html DIR="LTR"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" /><META NAME="save" CONTENT="history" /><title>Disable Command Source Via Dispatcher Timer Sample</title><META NAME="Description" CONTENT="This sample shows how to enable and disable a command source via a DispatcherTimer."></META><META NAME="MS.LOCALE" CONTENT="en-us" /><style>
body
{font-family:Verdana;font-size:medium;}
div#mainSection, div#header
{font-size:70%;width: 100%;}
div#mainBody
{font-size:90%;}
div#mainSection div table
{font-size: 100%;text-align: left;}
span#nsrTitle
{color:#003399;font-size:90%;font-weight:600;}
div#header
{background-color:#D4DFFF;}
.heading
{font-size:120%;color:#003399;}
.subHeading
{font-size:100%;margin-bottom:4;}
li
{margin-top:-2;margin-bottom:3;}
p
{margin-top:10;margin-bottom:5;}
div.tableSection p
{margin-top:1;margin-bottom:4;}	
div#mainSection table th
{background-color:#EFEFF7;color:#000066;text-align:left;}
div#mainSection table td
{background-color:#F7F7FF;}
div#mainSection table
{margin-top:5px;margin-bottom: px;}
			</style></head><body><div id="header"><table width="100%" id="topTable"><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Disable Command Source Via Dispatcher Timer Sample</span></td></tr></table></div><div id="mainSection"><div id="mainBody"><br /><font color="DarkGray">[This readme is a partial copy of the sample's topic in the SDK documentation.]</font><br /><p>This sample shows how to enable and disable a command source via a DispatcherTimer. </p><p>Command sources, such as the MenuItem class and the Button class, listen to the CanExecuteChanged event on the RoutedCommand they are attached to in order to determine when they need to query the command to see if the command can execute on the current command target.  Command sources will typically disable themselves if the command cannot execute and enable themselves if the command can execute, such as when a <b>MenuItem</b> gray's itself out when the command cannot execute.</p><p>The CommandManager notifies the <b>RoutedCommand</b> via the RequerySuggested event that conditions have changed with the command target.  The <b>RoutedCommand</b> raises the <b>CanExecuteChanged</b> event which the command source listens to.  Normally, this notification mechanism is adequate, but there are some situations where the <b>CommandManager</b> is unaware that the conditions have changed on the command target and thus the <b>RequerySuggested</b> event is never raised and the command source never queries the <b>RoutedCommand</b>.  In these situations, the <b>CommandManager</b> can be forced to raise the <b>RequerySuggested</b> event by calling InvalidateRequerySuggested.</p><p>This sample creates a <b>RoutedCommand</b> that can be executed only when the seconds in the current time are greater than a target value.  A <b>DispatcherTimer</b> is created that calls <b>InvalidateRequerySuggested</b> every second.  This insures that the command source will receive the <b>CanExecuteChanged</b> event so that it can call the CanExecute method on the command.</p><p>For another variation of this sample see the <a href="c29ad57a-d6f6-45b8-814c-37b3086fafc1.htm">Disable Command Source Via System Timer Sample</a> sample.  And for more information on commanding see the Commanding Overview.</p><p>This sample demonstrates a specific feature of the Windows Presentation Foundation and, consequently, does not follow application development best practices. For comprehensive coverage of Windows Presentation Foundation (WPF) and Microsoft .NET Framework application development best practices, refer to the following as appropriate:</p><p>Accessibility - Accessibility Best Practices</p><p>Security - WPF Security</p><p>Localization - WPF Globalization and Localization Overview</p><h1 class="heading">Building the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><ul><li><p>
            Install the Windows Software Development Kit (SDK) and open its build environment command window. On the Start menu, point to All Programs, Microsoft Windows SDK, and then click CMD Shell.
          </p></li><li><p>
            Download the sample, usually from the software development kit (SDK) documentation, to your hard disk drive.
          </p></li><li><p>
            To build the sample from the build environment command window, go to the source directory of the sample. At the command prompt, type MSBUILD.
          </p></li><li><p>
            To build the sample in Microsoft Visual Studio 2005, load the sample solution or project file and then press CTRL+SHIFT+B.
          </p></li></ul></div><h1 class="heading">Running the Sample</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><ul><li><p>
            To run the compiled sample from the build environment command window, execute the .exe file in the Bin\Debug or Bin\Release folder contained under the sample source code folder.
          </p></li><li><p>
            To run the compiled sample with debugging in Visual Studio 2005, press F5.
          </p></li></ul></div><h1 class="heading">See Also</h1><div id="seeAlsoSection" class="seeAlsoNoToggleSection"><h4 class="subHeading">Tasks</h4><a href="c29ad57a-d6f6-45b8-814c-37b3086fafc1.htm">Disable Command Source Via System Timer Sample</a><br /><h4 class="subHeading">Other Resources</h4>Commanding Overview<br /><br /></div><UscDataIsland></UscDataIsland></div></div></body></html>