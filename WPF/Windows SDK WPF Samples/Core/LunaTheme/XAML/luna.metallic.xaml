<!--=================================================================
Copyright (C) Microsoft Corporation.  All rights reserved.

Theme Styles For Windows Presentation Foundation Version 3.0.6817.0 
==================================================================-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes"
                    xmlns:ui="clr-namespace:System.Windows.Documents;assembly=PresentationUI">

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <LinearGradientBrush x:Key="ButtonNormalBackgroundFill"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#FFE3E5F0"
                          Offset="0.5"/>
            <GradientStop Color="#FFC6C5D7"
                          Offset="1.0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonBorder"
                     Color="#FF003C74"/>
    <Style x:Key="BaseButtonStyle"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background"
                Value="{StaticResource ButtonNormalBackgroundFill}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorder}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <theme:ButtonChrome x:Name="Chrome"
                                        ThemeColor="Metallic"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Fill="{TemplateBinding Background}"
                                        RenderDefaulted="{TemplateBinding Button.IsDefaulted}"
                                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                                        RenderPressed="{TemplateBinding IsPressed}"
                                        SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </theme:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="RenderDefaulted"
                                    Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="RenderPressed"
                                    Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type ToggleButton}"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type ToggleButton}"/>

    <Style x:Key="{x:Type RepeatButton}"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
    </Style>

    <Style x:Key="{x:Type Button}"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type Button}"/>




    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <LinearGradientBrush x:Key="CheckRadioFillNormal">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFD2D4D2"
                          Offset="0"/>
            <GradientStop Color="#FFFFFFFF"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckRadioStrokeNormal">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF004C94"
                          Offset="0"/>
            <GradientStop Color="#FF003C74"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="{x:Type CheckBox}"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{StaticResource CheckRadioFillNormal}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource CheckRadioStrokeNormal}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent"
                                     SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <theme:BulletChrome Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                IsChecked="{TemplateBinding IsChecked}"
                                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                RenderPressed="{TemplateBinding IsPressed}"/>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding"
                                    Value="2,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate DataType="{x:Type CollectionViewGroup}">
        <TextBlock Text="{Binding Path=Name}"/>
    </DataTemplate>

    
    <Style x:Key="{x:Type ComboBoxItem}"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
                Value="3,0,3,0"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

 
    <Style x:Key="{x:Type ContentControl}"
           TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    

    <Style x:Key="{x:Type ContextMenu}"
           TargetType="{x:Type ContextMenu}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true"/>
        <Setter Property="HasDropShadow"
                Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <theme:SystemDropShadowChrome Name="Shdw"
                                                  Color="Transparent"
                                                  SnapsToDevicePixels="true">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer CanContentScroll="true"
                                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                <ItemsPresenter Margin="{TemplateBinding Padding}"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    


 
    <Style x:Key="{x:Type FlowDocument}"
           TargetType="{x:Type FlowDocument}">
        <Setter Property="TextAlignment"
                Value="Justify"/>
        <Setter Property="FontFamily"
                Value="Georgia"/>
        <Setter Property="FontSize"
                Value="16.0"/>
    </Style>
    <Style x:Key="{x:Type TextBlock}"
           TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping"
                Value="NoWrap"/>
        <Setter Property="TextTrimming"
                Value="None"/>
    </Style>
    <Style x:Key="{x:Type Bold}"
           TargetType="{x:Type Bold}">
        <Setter Property="FontWeight"
                Value="Bold"/>
    </Style>
    <Style x:Key="{x:Type Italic}"
           TargetType="{x:Type Italic}">
        <Setter Property="FontStyle"
                Value="Italic"/>
    </Style>
    <Style x:Key="{x:Type Underline}"
           TargetType="{x:Type Underline}">
        <Setter Property="TextDecorations"
                Value="Underline"/>
    </Style>
    <Style x:Key="{x:Type Paragraph}"
           TargetType="{x:Type Paragraph}">
        <Setter Property="Margin"
                Value="Auto"/>
    </Style>
    <Style x:Key="{x:Type List}"
           TargetType="{x:Type List}">
        <Setter Property="Margin"
                Value="Auto"/>
        <Setter Property="Padding"
                Value="Auto"/>
    </Style>
    <Style x:Key="{x:Type Floater}"
           TargetType="{x:Type Floater}">
        <Setter Property="HorizontalAlignment"
                Value="Right"/>
    </Style> 

    <DataTemplate DataType="{x:Type FlowDocument}">
        <FlowDocumentReader Document="{Binding}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type FixedDocument}">
        <DocumentViewer Document="{Binding}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type FixedDocumentSequence}">
        <DocumentViewer Document="{Binding}"/>
    </DataTemplate>
    <LinearGradientBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=DocumentViewerToolBarGradient}"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="{x:Static SystemColors.InactiveCaptionTextColor}"
                          Offset="0"/>
            <GradientStop Color="{x:Static SystemColors.InactiveCaptionColor}"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DocumentViewerToolBarDividerGradient"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="{x:Static SystemColors.InactiveCaptionTextColor}"
                          Offset="1"/>
            <GradientStop Color="{x:Static SystemColors.InactiveCaptionColor}"
                          Offset="0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="{x:Type DocumentViewer}"
           BasedOn="{x:Null}"
           TargetType="{x:Type DocumentViewer}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="ContextMenu"
                Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ui:PresentationUIStyleResources}, ResourceId=PUIDocumentViewerContextMenu}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DocumentViewer}">
                  <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Focusable="False">
                    <Grid Background="{TemplateBinding Background}"
                          KeyboardNavigation.TabNavigation="Local">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                      </Grid.RowDefinitions>
                      <ContentControl Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ui:PresentationUIStyleResources},                                 ResourceId=PUIDocumentViewerToolBarStyleKey}}"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Focusable="{TemplateBinding Focusable}"
                                      TabIndex="0"/>
                      <ScrollViewer Grid.Row="1"
                                    Grid.Column="0"
                                    CanContentScroll="true"
                                    HorizontalScrollBarVisibility="Auto"
                                    x:Name="PART_ContentHost"
                                    Focusable="{TemplateBinding Focusable}"
                                    IsTabStop="true"
                                    TabIndex="1"/>
                      <DockPanel Grid.Row="1">
                        <FrameworkElement DockPanel.Dock="Right"
                                          Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                        <Rectangle
                                   Visibility="Visible"
                                   VerticalAlignment="top"
                                   Height="10">
                          <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0"
                                                 EndPoint="0,1">
                              <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                  <GradientStop Color="#66000000"
                                                Offset="0"/>
                                  <GradientStop Color="Transparent"
                                                Offset="1"/>
                                </GradientStopCollection>
                              </GradientBrush.GradientStops>
                            </LinearGradientBrush>
                          </Rectangle.Fill>
                        </Rectangle>
                      </DockPanel>
                      <ContentControl Grid.Row="2"
                                      Grid.Column="0"
                                      TabIndex="2"
                                      Focusable="{TemplateBinding Focusable}"
                                      x:Name="PART_FindToolBarHost"/>
                    </Grid>
                  </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


 
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0"
                                   StrokeThickness="1"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   SnapsToDevicePixels="true"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ExpanderShadowFill"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="Transparent"
                          Offset="0.5"/>
            <GradientStop Color="#30111111"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="ExpanderDownHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle"
                                     Width="19"
                                     Height="19"
                                     Stroke="DarkGray"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{DynamicResource ButtonNormalBackgroundFill}"/>
                            <Ellipse x:Name="shadow"
                                     Width="17"
                                     Height="17"
                                     Visibility="Hidden"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{DynamicResource ExpanderShadowFill}"/>
                            <Path x:Name="arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Stroke="#666"
                                  StrokeThickness="2"
                                  SnapsToDevicePixels="false"
                                  Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#666"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="arrow"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="shadow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         Stroke="DarkGray"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{DynamicResource ButtonNormalBackgroundFill}"/>
                                <Ellipse x:Name="shadow"
                                         Width="17"
                                         Height="17"
                                         Visibility="Hidden"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{DynamicResource ExpanderShadowFill}"/>
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="#666"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 1,1.5  L 4.5,5  L 8,1.5"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#666"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="arrow"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="shadow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         Stroke="DarkGray"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{DynamicResource ButtonNormalBackgroundFill}"/>
                                <Ellipse x:Name="shadow"
                                         Width="17"
                                         Height="17"
                                         Visibility="Hidden"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{DynamicResource ExpanderShadowFill}"/>
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="#666"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#666"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="arrow"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="shadow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         Stroke="DarkGray"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{DynamicResource ButtonNormalBackgroundFill}"/>
                                <Ellipse x:Name="shadow"
                                         Width="17"
                                         Height="17"
                                         Visibility="Hidden"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{DynamicResource ExpanderShadowFill}"/>
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="#666"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 1,1.5  L 4.5,5  L 8,1.5"/>
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#666"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="arrow"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="shadow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type Expander}"
           TargetType="{x:Type Expander}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                                          DockPanel.Dock="Top"
                                          Margin="1"
                                          MinWidth="0"
                                          MinHeight="0"
                                          Style="{StaticResource ExpanderDownHeaderStyle}"
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                          IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Padding="{TemplateBinding Padding}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite"
                                              DockPanel.Dock="Bottom"
                                              Visibility="Collapsed"
                                              Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="true">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="ExpandSite"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection"
                                 Value="Right">
                            <Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="ExpandSite"/>
                            <Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="HeaderSite"/>
                            <Setter Property="Style"
                                    Value="{StaticResource ExpanderRightHeaderStyle}"
                                    TargetName="HeaderSite"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection"
                                 Value="Up">
                            <Setter Property="DockPanel.Dock"
                                    Value="Top"
                                    TargetName="ExpandSite"/>
                            <Setter Property="DockPanel.Dock"
                                    Value="Bottom"
                                    TargetName="HeaderSite"/>
                            <Setter Property="Style"
                                    Value="{StaticResource ExpanderUpHeaderStyle}"
                                    TargetName="HeaderSite"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection"
                                 Value="Left">
                            <Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="ExpandSite"/>
                            <Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="HeaderSite"/>
                            <Setter Property="Style"
                                    Value="{StaticResource ExpanderLeftHeaderStyle}"
                                    TargetName="HeaderSite"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

 
    <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type GridSplitter}"
           TargetType="{x:Type GridSplitter}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="PreviewStyle"
                Value="{StaticResource GridSplitterPreviewStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="GroupBoxBorderBrush" 
                     Color="#BFB8BF"/>

    <SolidColorBrush x:Key="GroupBoxHeaderBrush" 
                     Color="#0046D5"/>

 
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="{x:Type GroupBox}"
           TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush"
                Value="{StaticResource GroupBoxBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="Transparent"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="Header"
                                Padding="3,0,3,0"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1">
                            <ContentPresenter ContentSource="Header" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              TextElement.Foreground="{StaticResource GroupBoxHeaderBrush}"/>
                        </Border>
                        <ContentPresenter Grid.Row="2"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="2"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}"
                                              ConverterParameter="7">
                                    <Binding ElementName="Header"
                                             Path="ActualWidth"/>
                                    <Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualWidth"/>
                                    <Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualHeight"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type GroupItem}"
           TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <StackPanel>
                        <ContentPresenter/>
                        <ItemsPresenter Margin="5,0,0,0"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type HeaderedContentControl}"
           TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <StackPanel>
                        <ContentPresenter ContentSource="Header"/>
                        <ContentPresenter/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 
    <Style x:Key="{x:Type Hyperlink}"
           TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground"
                Value="Blue"/>
        <Setter Property="TextDecorations"
                Value="Underline"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Foreground"
                        Value="Red"/>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="true">
                <Setter Property="Cursor"
                        Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style> 
    <Style x:Key="{x:Type ItemsControl}"
           TargetType="{x:Type ItemsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type Label}"
           TargetType="{x:Type Label}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Padding"
                Value="5"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalContentAlignment"
                Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    <SolidColorBrush x:Key="ListBorder"
                     Color="#FFA5ACB2"/>



    <Style x:Key="{x:Type ListBox}"
           TargetType="{x:Type ListBox}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Padding="1">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


       

    <Style x:Key="{x:Type ListBoxItem}"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
                Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

     
    <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Menu}"
           TargetType="{x:Type Menu}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Geometry x:Key="DownArrow"> M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">   M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>


   <PathGeometry x:Key="Checkmark">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure StartPoint="0 2"
                            IsClosed="True"
                            IsFilled="True">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 4.8"/>
                            <LineSegment Point="2.5 7.4"/>
                            <LineSegment Point="7.1 2.8"/>
                            <LineSegment Point="7.1 0"/>
                            <LineSegment Point="2.5 4.6"/>
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>


 
    <Style x:Key="MenuScrollButton"
           TargetType="{x:Type RepeatButton}"
           BasedOn="{x:Null}">
        <Setter Property="ClickMode"
                Value="Hover"/>
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="Transparent"
                               SnapsToDevicePixels="true">
                        <Rectangle DockPanel.Dock="Right"
                                   x:Name="R1"
                                   Width="1"
                                   Fill="Transparent"/>
                        <Rectangle DockPanel.Dock="Bottom"
                                   x:Name="B1"
                                   Height="1"
                                   Fill="Transparent"/>
                        <Rectangle DockPanel.Dock="Left"
                                   x:Name="L1"
                                   Width="1"
                                   Fill="Transparent"/>
                        <Rectangle DockPanel.Dock="Top"
                                   x:Name="T1"
                                   Height="1"
                                   Fill="Transparent"/>
                        <ContentPresenter x:Name="ContentContainer"
                                          Margin="2,2,2,2"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="R1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            <Setter TargetName="B1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            <Setter TargetName="L1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter TargetName="T1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter TargetName="ContentContainer"
                                    Property="Margin"
                                    Value="3,3,1,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}"
           TargetType="{x:Type ScrollViewer}"
           BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility"
                Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true"> 
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                                Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton Style="{StaticResource MenuScrollButton}"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                  Data="{StaticResource UpArrow}"/>
                        </RepeatButton>
                        <RepeatButton Style="{StaticResource MenuScrollButton}"
                                      Grid.Row="2"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                  Data="{StaticResource DownArrow}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
        <Setter Property="MinHeight"
                Value="1"/>
        <Setter Property="SnapsToDevicePixels"
                Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}"
                     TargetType="{x:Type ContentControl}">
        <Border Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                BorderThickness="1"
                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
            <ContentPresenter/>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                SnapsToDevicePixels="true">
            <DockPanel>
                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Path x:Name="GlyphPanel"
                      Margin="4,0,6,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                SnapsToDevicePixels="true">
            <DockPanel>
                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Path x:Name="GlyphPanel"
                      Margin="4,0,6,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="true"
                       Placement="Bottom"
                       IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                       Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome Name="Shdw"
                                                  Color="Transparent">
                        <Border Name="SubMenuBorder"
                                Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
                            <ScrollViewer CanContentScroll="true"
                                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                <ItemsPresenter Margin="2"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                Grid.IsSharedSizeScope="true"/>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                SnapsToDevicePixels="true">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="17"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="14"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Path x:Name="GlyphPanel"
                      Margin="4,0,6,0"
                      Visibility="Hidden"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,0,2"
                           DockPanel.Dock="Right"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                SnapsToDevicePixels="true">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="17"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="14"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Path x:Name="GlyphPanel"
                      Margin="4,0,6,0"
                      Visibility="Hidden"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Path Grid.Column="3"
                      DockPanel.Dock="Right"
                      VerticalAlignment="Center"
                      Margin="4,0,6,0"
                      Fill="{TemplateBinding Foreground}"
                      Data="{StaticResource RightArrow}"/>
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="true"
                       Placement="Right"
                       VerticalOffset="-3"
                       IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                       Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome Name="Shdw"
                                                  Color="Transparent" >
                        <Border Name="SubMenuBorder"
                                Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
                            <ScrollViewer CanContentScroll="true"
                                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                <ItemsPresenter Margin="2"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                Grid.IsSharedSizeScope="true"/>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type MenuItem}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="Template"
                Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}"/>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Margin"
                        Value="0,1,0,1"/>
                <Setter Property="Padding"
                        Value="6,3,6,3"/>
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Margin"
                        Value="0,1,0,1"/>
                <Setter Property="Padding"
                        Value="6,3,6,3"/>
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="DockPanel.Dock"
                        Value="Top"/>
                <Setter Property="Padding"
                        Value="0,2,0,2"/>
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="DockPanel.Dock"
                        Value="Top"/>
                <Setter Property="Padding"
                        Value="0,2,0,2"/>
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>





    <JournalEntryUnifiedViewConverter x:Key="JournalEntryUnifiedViewConverter"/>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillEnabled"
                         StartPoint="0.5,0.0"
                         EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0.0"/>
                <GradientStop Color="#CCD4E9" Offset="0.1"/>
                <GradientStop Color="#4881D2" Offset="0.47"/>
                <GradientStop Color="#001A5A" Offset="0.47"/>
                <GradientStop Color="#007BD6" Offset="0.70"/>
                <GradientStop Color="#54DAFF" Offset="0.85"/>
                <GradientStop Color="#86FFFF" Offset="0.95"/>
                <GradientStop Color="#FFFFFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillHover"
                         StartPoint="0.5,0.0"
                         EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0.0"/>
                <GradientStop Color="#DFEDF9" Offset="0.1"/>
                <GradientStop Color="#3086E1" Offset="0.47"/>
                <GradientStop Color="#003B91" Offset="0.47"/>
                <GradientStop Color="#1793EF" Offset="0.70"/>
                <GradientStop Color="#5AD4FF" Offset="0.85"/>
                <GradientStop Color="#BDFFFF" Offset="0.95"/>
                <GradientStop Color="#FFFFFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillPressed"
                         StartPoint="0.5,0.0"
                         EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#C0D2F5" Offset="0.0"/>
                <GradientStop Color="#5E7A9C" Offset="0.47"/>
                <GradientStop Color="#00062D" Offset="0.47"/>
                <GradientStop Color="#005F9F" Offset="0.70"/>
                <GradientStop Color="#1FA4E2" Offset="0.85"/>
                <GradientStop Color="#61DAFF" Offset="0.95"/>
                <GradientStop Color="#48CFFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillDisabled"
                         StartPoint="0.5,0.0"
                         EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0"/>
                <GradientStop Color="#EBEEF5" Offset="0.5"/>
                <GradientStop Color="#D8DDEB" Offset="0.5"/>
                <GradientStop Color="#DFE2F0" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonStrokeEnabled"
                         StartPoint="0,0" 
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#6C90C4" Offset="0"/>
                <GradientStop Color="#315BB4" Offset="0.5"/>
                <GradientStop Color="#002091" Offset="0.5"/>
                <GradientStop Color="#08377C" Offset="1"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationArrowStrokeEnabled"
                         StartPoint="0,0" 
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#8AB1FB" Offset="0"/>
            <GradientStop Color="#002874" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationArrowFill"
                         StartPoint="0,0" 
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0.5"/>
                <GradientStop Color="#EEEEEE" Offset="0.5"/>
                <GradientStop Color="#B0B0B0" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowDownArrowFill"
                         StartPoint="0,0" 
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#33B5DA" Offset="0"/>
                <GradientStop Color="#335799" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationChromeBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStop Color="#FFFFFF" Offset="0"/>
            <GradientStop Color="#E3E8F4" Offset="0.5"/>
            <GradientStop Color="#CFD7EB" Offset="0.5"/>
            <GradientStop Color="#E9ECFA" Offset="1.0"/>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="CurrentEntryBackground" 
                     Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}"
                     Opacity="0.25"/>

    <Style x:Key="NavigationWindowNavigationButtonJournalEntryStyle"
           TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" 
                Value="true"/>
        <Setter Property="Header"
                Value="{Binding Path=(JournalEntry.Name)}"/>
        <Setter Property="Command"
                Value="NavigationCommands.NavigateJournal"/>
        <Setter Property="CommandTarget"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu}}, Path=TemplatedParent}"/>
        <Setter Property="CommandParameter"
                Value="{Binding RelativeSource={RelativeSource Self}}"/>
        <Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
                Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Name="Panel"
                          Background="Transparent"
                          SnapsToDevicePixels="true">
                        <Path Name="Glyph"
                              SnapsToDevicePixels="false"
                              Margin="7,5"
                              Width="10"
                              Height="10"
                              HorizontalAlignment="Left"
                              StrokeStartLineCap="Triangle"
                              StrokeEndLineCap="Triangle"
                              StrokeThickness="2"
                              Stroke="{TemplateBinding Foreground}"/>
                        <ContentPresenter ContentSource="Header"
                                          Margin="24,5,21,5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
                                 Value="Current">
                            <Setter TargetName="Panel"
                                    Property="Background"
                                    Value="{StaticResource CurrentEntryBackground}"/>
                            <Setter TargetName="Glyph"
                                    Property="Data"
                                    Value="M 0,5 L 2.5,8 L 7,3 "/>
                            <Setter TargetName="Glyph"
                                    Property="FlowDirection"
                                    Value="LeftToRight"/>
                            <Setter TargetName="Glyph"
                                    Property="StrokeLineJoin"
                                    Value="Miter"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                                 Value="true">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            <Setter TargetName="Panel"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="MenuItem.IsHighlighted"
                                           Value="true"/>
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
                                           Value="Forward"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Glyph"
                                    Property="Stroke"
                                    Value="White"/>
                            <Setter TargetName="Glyph"
                                    Property="Data"
                                    Value="M 1,5 L 7,5 M 5,1 L 9,5 L 5,9"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="MenuItem.IsHighlighted"
                                           Value="true"/>
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
                                           Value="Back"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Glyph"
                                    Property="Stroke"
                                    Value="White"/>
                            <Setter TargetName="Glyph"
                                    Property="Data"
                                    Value="M 9,5 L 3,5 M 5,1 L 1,5 L 5,9"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationWindowMenuItem" 
           TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" 
                Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid>
                        <Popup x:Name="PART_Popup"
                                   AllowsTransparency="true"
                                   Placement="Bottom"
                                   VerticalOffset="2"
                                   IsOpen="{Binding Path=(MenuItem.IsSubmenuOpen),RelativeSource={RelativeSource TemplatedParent}}"
                                   Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome Name="Shdw"
                                                          Color="Transparent">
                                <Border Name="SubMenuBorder"
                                        Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">

                                    <ScrollViewer CanContentScroll="true"
                                                  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                        <ItemsPresenter Margin="2"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                        
                        <Grid x:Name="Panel" 
                              Width="26" 
                              Background="Transparent"
                              HorizontalAlignment="Right" >
   
                            <Border SnapsToDevicePixels="True" 
                                    Visibility="Hidden" 
                                    Name="HighlightBorder" 
                                    BorderThickness="1,1,1,1" 
                                    BorderBrush="#B0B5BACE" 
                                    CornerRadius="2" >
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="0,1" >
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="#20DDDDDD" Offset="0" />
                                            <GradientStop Color="#80FFFFFF" Offset="1" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="#A0FFFFFF" CornerRadius="1.5" BorderThickness="1" />
                            </Border>

                            <Path x:Name="Arrow"
                                  SnapsToDevicePixels="false"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Margin="{TemplateBinding Padding}"
                                  Fill="{StaticResource NavigationWindowDownArrowFill}"
                                  Stroke="White"
                                  StrokeThickness="1"
                                  StrokeLineJoin="Round"
                                  Data="M 0 0 L 4.5 5 L 9 0 Z"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="HighlightBorder" 
                                    Property="Visibility" 
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Arrow" 
                                    Property="Fill" 
                                    Value="#A5AABE"/>
                        </Trigger>
                        <Trigger SourceName="PART_Popup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationWindowMenu"
           TargetType="{x:Type Menu}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" 
                Value="true"/>
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None"/>
        <Setter Property="IsMainMenu" 
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <ItemsPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationWindowBackButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" 
                Value="true"/>
        <Setter Property="Command" 
                Value="NavigationCommands.BrowseBack"/>
        <Setter Property="Focusable" 
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="24" 
                          Height="24"
                          Background="Transparent">
                        <Ellipse Name="Circle"
                                 StrokeThickness="1"
                                 Fill="{StaticResource NavigationWindowNavigationButtonFillEnabled}"
                                 Stroke="{StaticResource NavigationWindowNavigationButtonStrokeEnabled}" />

                        <Path Name="Arrow" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center" 
                              StrokeThickness="0.75"
                              Data="M0.37,7.69 L5.74,14.20 A1.5,1.5,0,1,0,10.26,12.27 L8.42,10.42 14.90,10.39 A1.5,1.5,0,1,0,14.92,5.87 L8.44,5.90 10.31,4.03 A1.5,1.5,0,1,0,5.79,1.77 z"
                              Stroke="{StaticResource NavigationWindowNavigationArrowStrokeEnabled}"
                              Fill="{StaticResource NavigationWindowNavigationArrowFill}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Fill"
                                    Value="{StaticResource NavigationWindowNavigationButtonFillDisabled}"
                                    TargetName="Circle"/>
                            <Setter Property="Stroke"
                                    Value="#B5BACE"
                                    TargetName="Circle"/>
                            <Setter Property="Stroke"
                                    Value="#B0B5BACE"
                                    TargetName="Arrow"/>
                            <Setter Property="Fill"
                                    Value="#D0FFFFFF"
                                    TargetName="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" 
                                 Value="true">
                            <Setter Property="Fill" 
                                    Value="{StaticResource NavigationWindowNavigationButtonFillHover}"
                                    TargetName="Circle"/>
                        </Trigger>
                        <Trigger Property="IsPressed" 
                                 Value="true">
                            <Setter Property="Fill"
                                    Value="{StaticResource NavigationWindowNavigationButtonFillPressed}"
                                    TargetName="Circle"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="NavigationWindowForwardButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" 
                Value="true"/>
        <Setter Property="Command" 
                Value="NavigationCommands.BrowseForward"/>
        <Setter Property="Focusable" 
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="24" 
                          Height="24"
                          Background="Transparent">
                        <Ellipse Name="Circle"
                                 Grid.Column="0"      
                                 StrokeThickness="1"
                                 Fill="{StaticResource NavigationWindowNavigationButtonFillEnabled}"
                                 Stroke="{StaticResource NavigationWindowNavigationButtonStrokeEnabled}" />

                        <Path Name="Arrow" 
                              Grid.Column="0"      
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center" 
                              StrokeThickness="0.75"
                              Data="M0.37,7.69 L5.74,14.20 A1.5,1.5,0,1,0,10.26,12.27 L8.42,10.42 14.90,10.39 A1.5,1.5,0,1,0,14.92,5.87 L8.44,5.90 10.31,4.03 A1.5,1.5,0,1,0,5.79,1.77 z"
                              Stroke="{StaticResource NavigationWindowNavigationArrowStrokeEnabled}"
                              Fill="{StaticResource NavigationWindowNavigationArrowFill}"
                              RenderTransformOrigin="0.5,0">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="-1" />
                            </Path.RenderTransform>
                        </Path>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" 
                                 Value="false">
                            <Setter Property="Fill"
                                    Value="{StaticResource NavigationWindowNavigationButtonFillDisabled}"
                                    TargetName="Circle"/>
                            <Setter Property="Stroke"
                                    Value="#B5BACE"
                                    TargetName="Circle"/>
                            <Setter Property="Stroke"
                                    Value="#B0B5BACE"
                                    TargetName="Arrow"/>
                            <Setter Property="Fill"
                                    Value="#D0FFFFFF"
                                    TargetName="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" 
                                 Value="true">
                            <Setter Property="Fill" 
                                    Value="{StaticResource NavigationWindowNavigationButtonFillHover}"
                                    TargetName="Circle"/>
                        </Trigger>
                        <Trigger Property="IsPressed" 
                                 Value="true">
                            <Setter Property="Fill"
                                    Value="{StaticResource NavigationWindowNavigationButtonFillPressed}"
                                    TargetName="Circle"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="NavigationWindowTemplateKey"
                     TargetType="{x:Type NavigationWindow}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <DockPanel>
                <Grid Name="NavChrome"
                      Background="{StaticResource NavigationWindowNavigationChromeBackground}"
                      DockPanel.Dock="Top"
                      Height="30">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="29"/>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="17"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Menu Name="NavMenu"
                          Grid.ColumnSpan="3"
                          Height="23"
                          Margin="1,0,0,1"
                          VerticalAlignment="Center" 
                          Style="{StaticResource NavigationWindowMenu}">

                        <MenuItem Padding="0,2,5,0"
                                  Style="{StaticResource NavigationWindowMenuItem}"
                                  ItemContainerStyle="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle}"
                                  IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                            <MenuItem.ItemsSource>
                                <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" 
                                                 Path="(NavigationWindow.BackStack)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" 
                                                 Path="(NavigationWindow.ForwardStack)" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </MenuItem.ItemsSource>
                        </MenuItem>
                    </Menu>

                    <Path Grid.Column="0" 
                          SnapsToDevicePixels="false"
                          IsHitTestVisible="false"
                          Margin="2,0,0,0"
                          Grid.ColumnSpan="3"
                          StrokeThickness="1" 
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Center" 
                          Data="M22.5767,21.035 Q27,19.37 31.424,21.035 A12.5,12.5,0,0,0,53.5,13 A12.5,12.5,0,0,0,37.765,0.926 Q27,4.93 16.235,0.926 A12.5,12.5,0,0,0,0.5,13 A12.5,12.5,0,0,0,22.5767,21.035 z">
                        <Path.Fill>
                            <LinearGradientBrush StartPoint="0,0"
                                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#A0C2CCE7" Offset="0"/>
                                        <GradientStop Color="#60FFFFFF" Offset="1"/>
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Path.Fill>

                        <Path.Stroke>
                            <LinearGradientBrush StartPoint="0,0"
                                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFB7C2E3" Offset="0.2"/>
                                        <GradientStop Color="#A0FFFFFF" Offset="0.9"/>
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Path.Stroke>
                    </Path>

                    <Button Style="{StaticResource NavigationWindowBackButtonStyle}"
                            Margin="3,0,2,0" 
                            Grid.Column="0"/>
                    

                    <Button Style="{StaticResource NavigationWindowForwardButtonStyle}"
                            Margin="2,0,0,0" 
                            Grid.Column="1"/>
                </Grid>
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter Name="PART_NavWinCP" 
                                          ClipToBounds="true"/>
                    </AdornerDecorator>


                    <ResizeGrip x:Name="WindowResizeGrip"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Visibility="Collapsed"
                                IsTabStop="false"/>
                </Grid>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowsNavigationUI" Value="False">
                <Setter TargetName="NavChrome" Property="Visibility" Value="Collapsed"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Window.ResizeMode"
                               Value="CanResizeWithGrip"/>
                    <Condition Property="Window.WindowState"
                               Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip"
                        Property="Visibility"
                        Value="Visible"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="NavigationWindow.CanGoForward"
                               Value="false"/>
                    <Condition Property="NavigationWindow.CanGoBack"
                               Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="NavMenu"
                        Property="IsEnabled"
                        Value="false"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type NavigationWindow}"
           TargetType="{x:Type NavigationWindow}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Template"
                Value="{StaticResource NavigationWindowTemplateKey}"/>
    </Style>




 
   
    <Style x:Key="{x:Type Page}"
           TargetType="{x:Type Page}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Page}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Page.Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

 
    
    <LinearGradientBrush x:Key="ProgressBarFill"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#95B38E"
                          Offset="0"/>
            <GradientStop Color="#A4D498"
                          Offset="0.14"/>
            <GradientStop Color="#A4D498"
                          Offset="0.43"/>
            <GradientStop Color="#76A66A"
                          Offset="0.43"/>
            <GradientStop Color="#98C88C"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    

    <Style x:Key="{x:Type ProgressBar}"
           TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground"
                Value="{StaticResource ProgressBarFill}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                        <Border BorderThickness="1,1,1,0"
                                BorderBrush="#BEBEBE"
                                CornerRadius="2">
                            <Border BorderThickness="1"
                                    BorderBrush="#EFEFEF"
                                    CornerRadius="1">
                                <DockPanel x:Name="PART_Track"
                                           Margin="1,0,0,1"
                                           LastChildFill="false">
                                    <Rectangle x:Name="PART_Indicator">
                                        <Rectangle.Fill>
                                            <MultiBinding>
                                                <MultiBinding.Converter>
                                                    <theme:ProgressBarBrushConverter/>
                                                </MultiBinding.Converter>
                                                <Binding Path="Foreground"
                                                         RelativeSource="{RelativeSource TemplatedParent}"/>
                                                <Binding Path="IsIndeterminate"
                                                         RelativeSource="{RelativeSource TemplatedParent}"/>
                                                <Binding Path="ActualWidth"
                                                         ElementName="PART_Indicator"/>
                                                <Binding Path="ActualHeight"
                                                         ElementName="PART_Indicator"/>
                                                <Binding Path="ActualWidth"
                                                         ElementName="PART_Track"/>
                                            </MultiBinding>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </DockPanel>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="3"
                                    SnapsToDevicePixels="true">
                                <Border BorderThickness="1,1,1,0"
                                        BorderBrush="#BEBEBE"
                                        CornerRadius="2">
                                    <Border BorderThickness="1"
                                            BorderBrush="#EFEFEF"
                                            CornerRadius="1">
                                        <DockPanel x:Name="PART_Track"
                                                   Margin="0,0,0,1"
                                                   LastChildFill="false">
                                            <Decorator x:Name="PART_Indicator"
                                                       DockPanel.Dock="Bottom">
                                                <Rectangle>
                                                    <Rectangle.LayoutTransform>
                                                        <RotateTransform Angle="-90"/>
                                                    </Rectangle.LayoutTransform>
                                                    <Rectangle.Fill>
                                                        <MultiBinding>
                                                            <MultiBinding.Converter>
                                                                <theme:ProgressBarBrushConverter/>
                                                            </MultiBinding.Converter>
                                                            <Binding Path="Foreground"
                                                                     RelativeSource="{RelativeSource TemplatedParent}"/>
                                                            <Binding Path="IsIndeterminate"
                                                                     RelativeSource="{RelativeSource TemplatedParent}"/>
                                                            <Binding Path="ActualHeight"
                                                                     ElementName="PART_Indicator"/>
                                                            <Binding Path="ActualWidth"
                                                                     ElementName="PART_Indicator"/>
                                                            <Binding Path="ActualHeight"
                                                                     ElementName="PART_Track"/>
                                                        </MultiBinding>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Decorator>
                                        </DockPanel>
                                    </Border>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="{x:Type RadioButton}"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{StaticResource CheckRadioFillNormal}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource CheckRadioStrokeNormal}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <theme:BulletChrome IsRound="true"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                IsChecked="{TemplateBinding IsChecked}"
                                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                RenderPressed="{TemplateBinding IsPressed}"/>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding"
                                    Value="2,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ResizeGripperForeground" Color="#B8B4A2"/>


    <Style x:Key="{x:Type ResizeGrip}"
           TargetType="{x:Type ResizeGrip}">
        <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinHeight"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Grid SnapsToDevicePixels="True" 
                          Background="{TemplateBinding Background}">
                        <Path HorizontalAlignment="Right" 
                              VerticalAlignment="Bottom" 
                              Fill="White"
                              Margin="0,0,2,2"
                              Data="M 8,0 L 10,0 L 10,2 L 8,2 Z M 4,4 L 6,4 L 6,6 L 4,6 Z M 8,4 L 10,4 L 10,6 L 8,6 Z M 0,8 L 2,8 L 2,10 L 0,10 Z M 4,8 L 6,8 L 6,10 L 4,10 Z M 8,8 L 10,8 L 10,10 L 8,10 Z" />

                        <Path HorizontalAlignment="Right" 
                              VerticalAlignment="Bottom" 
                              Fill="{StaticResource ResizeGripperForeground}"
                              Margin="0,0,3,3"
                              Data="M 8,0 L 10,0 L 10,2 L 8,2 Z M 4,4 L 6,4 L 6,6 L 4,6 Z M 8,4 L 10,4 L 10,6 L 8,6 Z M 0,8 L 2,8 L 2,10 L 0,10 Z M 4,8 L 6,8 L 6,10 L 4,10 Z M 8,8 L 10,8 L 10,10 L 8,10 Z" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 
   
    <SolidColorBrush x:Key="ScrollBarBackground"
                     Color="#EEEDE5"/>
    <LinearGradientBrush x:Key="HorizontalScrollBarPageButtonNormal"
                         StartPoint="0, 0"
                         EndPoint="0, 1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#EEEDE5"
                          Offset="0"/>
            <GradientStop Color="#EEEDE5"
                          Offset="0.05"/>
            <GradientStop Color="#F3F1EC"
                          Offset="0.06"/>
            <GradientStop Color="#FEFEFE"
                          Offset="0.94"/>
            <GradientStop Color="#EEEDE5"
                          Offset="0.95"/>
            <GradientStop Color="#EEEDE5"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalScrollBarPageButtonPressed"
                         StartPoint="0, 0"
                         EndPoint="0, 1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#D7D5C2"
                          Offset="0"/>
            <GradientStop Color="#D7D5C2"
                          Offset="0.05"/>
            <GradientStop Color="#E3DED3"
                          Offset="0.06"/>
            <GradientStop Color="#FDFDF6"
                          Offset="0.94"/>
            <GradientStop Color="#D7D5C2"
                          Offset="0.95"/>
            <GradientStop Color="#D7D5C2"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalScrollBarPageButtonDisabled"
                         StartPoint="0, 0"
                         EndPoint="0, 1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#EEEDE5"
                          Offset="0"/>
            <GradientStop Color="#EEEDE5"
                          Offset="0.05"/>
            <GradientStop Color="#F3F1EC"
                          Offset="0.06"/>
            <GradientStop Color="#FEFEFE"
                          Offset="0.94"/>
            <GradientStop Color="#EEEDE5"
                          Offset="0.95"/>
            <GradientStop Color="#EEEDE5"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalScrollBarPageButtonNormal"
                         StartPoint="0, 0"
                         EndPoint="1, 0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#EEEDE5"
                          Offset="0"/>
            <GradientStop Color="#EEEDE5"
                          Offset="0.05"/>
            <GradientStop Color="#F3F1EC"
                          Offset="0.06"/>
            <GradientStop Color="#FEFEFE"
                          Offset="0.94"/>
            <GradientStop Color="#EEEDE5"
                          Offset="0.95"/>
            <GradientStop Color="#EEEDE5"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalScrollBarPageButtonPressed"
                         StartPoint="0, 0"
                         EndPoint="1, 0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#D7D5C2"
                          Offset="0"/>
            <GradientStop Color="#D7D5C2"
                          Offset="0.05"/>
            <GradientStop Color="#E3DED3"
                          Offset="0.06"/>
            <GradientStop Color="#FDFDF6"
                          Offset="0.94"/>
            <GradientStop Color="#D7D5C2"
                          Offset="0.95"/>
            <GradientStop Color="#D7D5C2"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalScrollBarPageButtonDisabled"
                         StartPoint="0, 0"
                         EndPoint="1, 0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#EEEDE5"
                          Offset="0"/>
            <GradientStop Color="#EEEDE5"
                          Offset="0.05"/>
            <GradientStop Color="#F3F1EC"
                          Offset="0.06"/>
            <GradientStop Color="#FEFEFE"
                          Offset="0.94"/>
            <GradientStop Color="#EEEDE5"
                          Offset="0.95"/>
            <GradientStop Color="#EEEDE5"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="ScrollBarButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <theme:ScrollChrome x:Name="Chrome"
                                        ThemeColor="Metallic" 
                                        RenderMouseOver="{TemplateBinding IsMouseOver}" 
                                        RenderPressed="{TemplateBinding IsPressed}" 
                                        ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}"
                                        SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <theme:ScrollChrome x:Name="Chrome"
                                        ThemeColor="Metallic" 
                                        RenderMouseOver="{TemplateBinding IsMouseOver}" 
                                        RenderPressed="{TemplateBinding IsDragging}" 
                                        ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}"
                                        SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Name="Bg"
                               Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Bg"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalScrollBarPageButtonPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bg"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalScrollBarPageButtonDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Name="Bg"
                               Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Bg"
                                    Property="Fill"
                                    Value="{StaticResource VerticalScrollBarPageButtonPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bg"
                                    Property="Fill"
                                    Value="{StaticResource VerticalScrollBarPageButtonDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type ScrollBar}"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="false"/>
        <Setter Property="Background"
                Value="{StaticResource VerticalScrollBarPageButtonNormal}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <RepeatButton Style="{StaticResource ScrollBarButton}"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      theme:ScrollChrome.ScrollGlyph="UpArrow"/>
                        <Track Grid.Row="1"
                               Name="PART_Track"
                               IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                              Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                              Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"
                                       theme:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Style="{StaticResource ScrollBarButton}"
                                      Grid.Row="2"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      theme:ScrollChrome.ScrollGlyph="DownArrow"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto"/>
                <Setter Property="MinWidth"
                        Value="0"/>
                <Setter Property="Background"
                        Value="{StaticResource HorizontalScrollBarPageButtonNormal}"/>
                <Setter Property="Height"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton Style="{StaticResource ScrollBarButton}"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              theme:ScrollChrome.ScrollGlyph="LeftArrow"/>

                                <Track Grid.Column="1"
                                       Name="PART_Track">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"
                                               theme:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                    </Track.Thumb>
                                </Track>

                                <RepeatButton Style="{StaticResource ScrollBarButton}"
                                              Grid.Column="2"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              theme:ScrollChrome.ScrollGlyph="RightArrow"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

 
    <Style x:Key="{x:Type ScrollViewer}" 
           TargetType="{x:Type ScrollViewer}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" 
                     Value="false">
                <Setter Property="Foreground" 
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
 
    <Style x:Key="{x:Type Separator}"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
        <Setter Property="Margin"
                Value="0,2,0,2"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Height="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <LinearGradientBrush x:Key="SliderThumbBackground" 
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#D4D3E1"
                          Offset="0.1"/>
            <GradientStop Color="#FFFFFF"
                          Offset=".15"/>
            <GradientStop Color="#FFFFFF"
                          Offset=".2"/>
            <GradientStop Color="#D4D3E1"
                          Offset=".3"/>
            <GradientStop Color="#C6C6D2"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SliderThumbBackgroundInverted" 
                         StartPoint="1,0"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#D4D3E1"
                          Offset="0.1"/>
            <GradientStop Color="#FFFFFF"
                          Offset=".15"/>
            <GradientStop Color="#FFFFFF"
                          Offset=".2"/>
            <GradientStop Color="#D4D3E1"
                          Offset=".3"/>
            <GradientStop Color="#C6C6D2"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


     <LinearGradientBrush x:Key="HorizontalSliderThumbShadeGradient"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#40FFFFFF"
                          Offset="0"/>
            <GradientStop Color="#00FFFFFF"
                          Offset=".3"/>
            <GradientStop Color="#00000000"
                          Offset=".7"/>
            <GradientStop Color="#40000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VerticalSliderThumbShadeGradient"
                         StartPoint="1,0"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#40FFFFFF"
                          Offset="0"/>
            <GradientStop Color="#00FFFFFF"
                          Offset=".3"/>
            <GradientStop Color="#00000000"
                          Offset=".7"/>
            <GradientStop Color="#40000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFAEB1AF"
                          Offset="0.1"/>
            <GradientStop Color="White"
                          Offset=".9"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>



    <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 5,-8 A 1.5 1.5 0 0 0 3.5,-9.5 L -3.5,-9.5 A 1.5 1.5 0 0 0 -5,-8 L -5,5.5 L 0,10.5 L 5,5.5 Z
    
    </Geometry>
    <Geometry x:Key="SliderPointedThumbTopAccentGeometry">M 4.5,-6 L 4.5,-9 L -4.5,-9 L -4.5,-6 Z
    
    </Geometry>
    <Geometry x:Key="SliderPointedThumbBottomAccentGeometry">M 4.5,4 L 0,8.5 L -4.5,4 L -4.5,5 L 0,10 L 4.5,5 Z
    
    </Geometry>
    <Geometry x:Key="SliderThumbOuterBorderGeometry">M 5,-9 A 1.5 1.5 0 0 0 3.5,-10.5 L -3.5,-10.5 A 1.5 1.5 0 0 0 -5,-9 L -5,9 A 1.5 1.5 0 0 0 -3.5,10.5 L 3.5,10.5 A 1.5 1.5 0 0 0 5,9 Z
    
    </Geometry>
    <Geometry x:Key="SliderThumbTopAccentGeometry">M 4.5,-8 L 4.5,-10 L -4.5,-10 L -4.5,-8 Z
    
    </Geometry>
    <Geometry x:Key="SliderThumbBottomAccentGeometry">M 4.5,8 L 4.5,10 L -4.5,10 L -4.5,8 Z
    
    </Geometry>
    <LinearGradientBrush x:Key="HorizontalSliderThumbBorder"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFBECBD3"
                          Offset="0"/>
            <GradientStop Color="#FF72838D"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbTopAccent"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#70D66F"
                          Offset="0"/>
            <GradientStop Color="#46CA44"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbBottomAccent"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#46CA44"
                          Offset="0"/>
            <GradientStop Color="#1B9B1A"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbShadeGradientInverted"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#40FFFFFF"
                          Offset="1"/>
            <GradientStop Color="#00FFFFFF"
                          Offset=".7"/>
            <GradientStop Color="#00000000"
                          Offset=".3"/>
            <GradientStop Color="#40000000"
                          Offset="0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbBorderInverted"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFBECBD3"
                          Offset="1"/>
            <GradientStop Color="#FF72838D"
                          Offset="0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbTopAccentInverted"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#46CA44"
                          Offset="1"/>
            <GradientStop Color="#1B9B1A"
                          Offset="0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbBottomAccentInverted"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#70D66F"
                          Offset="1"/>
            <GradientStop Color="#46CA44"
                          Offset=".2"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbTopAccentHover"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FBCE7C"
                          Offset="0"/>
            <GradientStop Color="#F7B335"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbBottomAccentHover"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FAC055"
                          Offset="0"/>
            <GradientStop Color="#C7902A"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbTopAccentHoverInverted"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FAC055"
                          Offset="1"/>
            <GradientStop Color="#C7902A"
                          Offset="0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbBottomAccentHoverInverted"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FBCE7C"
                          Offset="1"/>
            <GradientStop Color="#F7B335"
                          Offset=".2"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbTopAccentPressed"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#70BA66"
                          Offset="0"/>
            <GradientStop Color="#229412"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbBottomAccentPressed"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#46A638"
                          Offset="0"/>
            <GradientStop Color="#1B770E"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbTopAccentPressedInverted"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#46A638"
                          Offset="1"/>
            <GradientStop Color="#1B770E"
                          Offset="0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground"
                     Color="#FFF0EDE0"/>
    <Style x:Key="SliderRepeatButtonStyle"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="22"/>
        <Setter Property="Width"
                Value="11"/>
        <Setter Property="Foreground"
                Value="Green"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="5.5"
                                                Y="11"/>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource SliderThumbBackground}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                        <Path x:Name="TopAccent"
                              Fill="{StaticResource HorizontalSliderThumbTopAccent}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbTopAccentGeometry}"/>
                        <Path x:Name="BottomAccent"
                              Fill="{StaticResource HorizontalSliderThumbBottomAccent}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbBottomAccentGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Fill="{StaticResource HorizontalSliderThumbShadeGradient}"
                              Stroke="{StaticResource HorizontalSliderThumbBorder}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbTopAccentHover}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbBottomAccentHover}"/>
                        </Trigger>
                        <Trigger Property="Foreground"
                                 Value="Orange">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbTopAccentHover}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbBottomAccentHover}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbTopAccentPressed}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbBottomAccentPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="#FFF5F4EA"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="#FFD6D4C6"/>
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="#FFD2D0C6"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="#FFBCBAAE"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderUpThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="22"/>
        <Setter Property="Width"
                Value="11"/>
        <Setter Property="Foreground"
                Value="Green"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="5.5"
                                                            Y="11"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource SliderThumbBackgroundInverted}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="TopAccent"
                              Fill="{StaticResource HorizontalSliderThumbTopAccentInverted}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbTopAccentGeometry}"/>
                        <Path x:Name="BottomAccent"
                              Fill="{StaticResource HorizontalSliderThumbBottomAccentInverted}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbBottomAccentGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Fill="{StaticResource HorizontalSliderThumbShadeGradientInverted}"
                              Stroke="{StaticResource HorizontalSliderThumbBorderInverted}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbTopAccentHoverInverted}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbBottomAccentHoverInverted}"/>
                        </Trigger>
                        <Trigger Property="Foreground"
                                Value="Orange">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbTopAccentHoverInverted}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbBottomAccentHoverInverted}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbTopAccentPressedInverted}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbTopAccentPressedInverted}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="#FFF5F4EA"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="#FFD6D4C6"/>
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="#BBB9AD"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderDownThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="22"/>
        <Setter Property="Width"
                Value="11"/>
        <Setter Property="Foreground"
                Value="Green"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="5.5"
                                                Y="11"/>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource SliderThumbBackground}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="TopAccent"
                              Fill="{StaticResource HorizontalSliderThumbTopAccent}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbTopAccentGeometry}"/>
                        <Path x:Name="BottomAccent"
                              Fill="{StaticResource HorizontalSliderThumbBottomAccent}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbBottomAccentGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Fill="{StaticResource HorizontalSliderThumbShadeGradient}"
                              Stroke="{StaticResource HorizontalSliderThumbBorder}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbTopAccentHover}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbBottomAccentHover}"/>
                        </Trigger>
                        <Trigger Property="Foreground"
                                 Value="Orange">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbTopAccentHover}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbBottomAccentHover}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbTopAccentPressed}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbBottomAccentPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="#FFF5F4EA"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="#FFD6D4C6"/>
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="#FFD2D0C6"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="VerticalSliderThumbBorder"
                         StartPoint="1,0"
                         EndPoint="0,.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFBECBD3"
                          Offset="0"/>
            <GradientStop Color="#FF72838D"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbTopAccent"
                         StartPoint="1,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#70D66F"
                          Offset="0"/>
            <GradientStop Color="#46CA44"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbBottomAccent"
                         StartPoint="1,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#46CA44"
                          Offset="0"/>
            <GradientStop Color="#1B9B1A"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbShadeGradientInverted"
                         StartPoint="1,0"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#40FFFFFF"
                          Offset="1"/>
            <GradientStop Color="#00FFFFFF"
                          Offset=".7"/>
            <GradientStop Color="#00000000"
                          Offset=".3"/>
            <GradientStop Color="#40000000"
                          Offset="0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbBorderInverted"
                         StartPoint="1,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFBECBD3"
                          Offset="1"/>
            <GradientStop Color="#FF72838D"
                          Offset="0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbTopAccentInverted"
                         StartPoint="1,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#46CA44"
                          Offset="1"/>
            <GradientStop Color="#1B9B1A"
                          Offset="0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbBottomAccentInverted"
                         StartPoint="1,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#70D66F"
                          Offset="1"/>
            <GradientStop Color="#46CA44"
                          Offset=".2"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbTopAccentHover"
                         StartPoint="1,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FBCE7C"
                          Offset="0"/>
            <GradientStop Color="#F7B335"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbBottomAccentHover"
                         StartPoint="1,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FAC055"
                          Offset="0"/>
            <GradientStop Color="#C7902A"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbTopAccentHoverInverted"
                         StartPoint="1,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FAC055"
                          Offset="1"/>
            <GradientStop Color="#C7902A"
                          Offset="0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbBottomAccentHoverInverted"
                         StartPoint="1,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FBCE7C"
                          Offset="1"/>
            <GradientStop Color="#F7B335"
                          Offset=".2"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbTopAccentPressed"
                         StartPoint="1,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#70BA66"
                          Offset="0"/>
            <GradientStop Color="#229412"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbBottomAccentPressed"
                         StartPoint="1,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#46A638"
                          Offset="0"/>
            <GradientStop Color="#1B770E"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbTopAccentPressedInverted"
                         StartPoint="1,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#46A638"
                          Offset="1"/>
            <GradientStop Color="#1B770E"
                          Offset="0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="VerticalSliderTrackNormalBackground"
                     Color="#FFF0EDE0"/>
    <LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFAEB1AF"
                          Offset="0.1"/>
            <GradientStop Color="White"
                          Offset=".9"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="VerticalSliderThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Width"
                Value="22"/>
        <Setter Property="Height"
                Value="11"/>
        <Setter Property="Foreground"
                Value="Green"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform X="11"
                                                            Y="5.5"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource SliderThumbBackgroundInverted}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                        <Path x:Name="TopAccent"
                              Fill="{StaticResource VerticalSliderThumbTopAccent}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbTopAccentGeometry}"/>
                        <Path x:Name="BottomAccent"
                              Fill="{StaticResource VerticalSliderThumbBottomAccent}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbBottomAccentGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Fill="{StaticResource VerticalSliderThumbShadeGradient}"
                              Stroke="{StaticResource VerticalSliderThumbBorder}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbTopAccentHover}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbBottomAccentHover}"/>
                        </Trigger>
                        <Trigger Property="Foreground"
                                 Value="Orange">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbTopAccentHover}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbBottomAccentHover}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbTopAccentPressed}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbBottomAccentPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="#FFF5F4EA"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="#FFD6D4C6"/>
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="#FFD2D0C6"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="#FFD8D5CB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalSliderLeftThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Width"
                Value="22"/>
        <Setter Property="Height"
                Value="11"/>
        <Setter Property="Foreground"
                Value="Green"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="11"
                                                            Y="5.5"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource SliderThumbBackground}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="TopAccent"
                              Fill="{StaticResource VerticalSliderThumbTopAccentInverted}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbTopAccentGeometry}"/>
                        <Path x:Name="BottomAccent"
                              Fill="{StaticResource VerticalSliderThumbBottomAccentInverted}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbBottomAccentGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Fill="{StaticResource VerticalSliderThumbShadeGradientInverted}"
                              Stroke="{StaticResource VerticalSliderThumbBorderInverted}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbTopAccentHoverInverted}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbBottomAccentHoverInverted}"/>
                        </Trigger>
                        <Trigger Property="Foreground"
                                 Value="Orange">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbTopAccentHoverInverted}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbBottomAccentHoverInverted}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbTopAccentPressedInverted}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbTopAccentPressedInverted}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="#FFF5F4EA"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="#FFD6D4C6"/>
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="#BBB9AD"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalSliderRightThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Width"
                Value="22"/>
        <Setter Property="Height"
                Value="11"/>
        <Setter Property="Foreground"
                Value="Green"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform X="11"
                                                            Y="5.5"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource SliderThumbBackgroundInverted}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="TopAccent"
                              Fill="{StaticResource VerticalSliderThumbTopAccent}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbTopAccentGeometry}"/>
                        <Path x:Name="BottomAccent"
                              Fill="{StaticResource VerticalSliderThumbBottomAccent}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbBottomAccentGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Fill="{StaticResource VerticalSliderThumbShadeGradient}"
                              Stroke="{StaticResource VerticalSliderThumbBorder}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbTopAccentHover}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbBottomAccentHover}"/>
                        </Trigger>
                        <Trigger Property="Foreground"
                                 Value="Orange">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbTopAccentHover}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbBottomAccentHover}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                Value="true">
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbTopAccentPressed}"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbBottomAccentPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="#FFF5F4EA"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="#FFD6D4C6"/>
                            <Setter TargetName="TopAccent"
                                    Property="Fill"
                                    Value="#FFD2D0C6"/>
                            <Setter TargetName="BottomAccent"
                                    Property="Fill"
                                    Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type Slider}"
           TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Foreground"
                Value="#FFA1A192"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"
                                               MinHeight="{TemplateBinding Slider.MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick"
                                     Grid.Row="0"
                                     Visibility="Collapsed"
                                     Placement="Top"
                                     Fill="{TemplateBinding Foreground}"
                                     Height="4"/>
                            <TickBar x:Name="BottomTick"
                                     Grid.Row="2"
                                     Visibility="Collapsed"
                                     Placement="Bottom"
                                     Fill="{TemplateBinding Foreground}"
                                     Height="4"/>
                            <Border Grid.Row="1"
                                    Margin="5,0"
                                    VerticalAlignment="center"
                                    BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    Background="{StaticResource HorizontalSliderTrackNormalBackground}"
                                    Height="4.0">

                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange"
                                               Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                               Height="4.0"
                                               Visibility="Hidden"
                                               StrokeThickness="1.0"
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                </Canvas>
                            </Border>
                                
                            <Track Grid.Row="1"
                                   Name="PART_Track">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                  Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                  Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                           Style="{StaticResource HorizontalSliderThumbStyle}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement"
                                 Value="TopLeft">
                            <Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource HorizontalSliderUpThumbStyle}"/>
                        </Trigger>
                        <Trigger Property="TickPlacement"
                                 Value="BottomRight">
                            <Setter TargetName="BottomTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource HorizontalSliderDownThumbStyle}"/>
                        </Trigger>
                        <Trigger Property="TickPlacement"
                                 Value="Both">
                            <Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="BottomTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled"
                                 Value="true">
                            <Setter TargetName="PART_SelectionRange"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Thumb"
                                    Property="Foreground"
                                    Value="Orange"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"
                                                          MinWidth="{TemplateBinding Slider.MinWidth}"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="LeftTick"
                                             Grid.Column="0"
                                             Visibility="Collapsed"
                                             Placement="Left"
                                             Fill="{TemplateBinding Foreground}"
                                             Width="4"/>
                                    <TickBar x:Name="RightTick"
                                             Grid.Column="2"
                                             Visibility="Collapsed"
                                             Placement="Right"
                                             Fill="{TemplateBinding Foreground}"
                                             Width="4"/>
                                    <Border Grid.Column="1"
                                            Margin="0,5"
                                            HorizontalAlignment="center"
                                            BorderBrush="{StaticResource VerticalSliderTrackNormalBorder}"
                                            BorderThickness="1"
                                            CornerRadius="1"
                                            Background="{StaticResource VerticalSliderTrackNormalBackground}"
                                            Width="4.0">
                                        <Canvas Margin="-1,-6">
                                            <Rectangle x:Name="PART_SelectionRange"
                                                       Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                                       Width="4.0"
                                                       Visibility="Hidden"
                                                       StrokeThickness="1.0"
                                                       Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                    </Canvas>

                                    </Border>
                                    <Track Grid.Column="1"
                                           Name="PART_Track">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                          Command="{x:Static Slider.DecreaseLarge}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                          Command="{x:Static Slider.IncreaseLarge}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb"
                                                   Style="{StaticResource VerticalSliderThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>

                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement"
                                         Value="TopLeft">
                                    <Setter TargetName="LeftTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="Thumb"
                                            Property="Style"
                                            Value="{StaticResource VerticalSliderLeftThumbStyle}"/>
                                </Trigger>
                                <Trigger Property="TickPlacement"
                                         Value="BottomRight">
                                    <Setter TargetName="RightTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="Thumb"
                                            Property="Style"
                                            Value="{StaticResource VerticalSliderRightThumbStyle}"/>
                                </Trigger>
                                <Trigger Property="TickPlacement"
                                         Value="Both">
                                    <Setter TargetName="LeftTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="RightTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled"
                                         Value="true">
                                    <Setter TargetName="PART_SelectionRange"
                                            Property="Visibility"
                                            Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                         Value="true">
                                    <Setter TargetName="Thumb"
                                            Property="Foreground"
                                            Value="Orange"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type StatusBar}"
           TargetType="{x:Type StatusBar}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
        <Setter Property="MinWidth"
                Value="1"/>
        <Setter Property="MinHeight"
                Value="1"/>
        <Setter Property="Margin"
                Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type StatusBarItem}"
           TargetType="{x:Type StatusBarItem}">
        <Setter Property="Padding"
                Value="3"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



 
    
    <LinearGradientBrush x:Key="TabControlPaneTopNormalBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFCFCFE"
                          Offset="0"/>
            <GradientStop Color="#FFF4F3EE"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabControlPaneBottomNormalBackground"
                         StartPoint="0,1"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFCFCFE"
                          Offset="0"/>
            <GradientStop Color="#FFF4F3EE"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabControlPaneLeftNormalBackground"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFCFCFE"
                          Offset="0"/>
            <GradientStop Color="#FFF4F3EE"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabControlPaneRightNormalBackground"
                         StartPoint="1,0"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFCFCFE"
                          Offset="0"/>
            <GradientStop Color="#FFF4F3EE"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabControlNormalBorderBrush"
                     Color="#919B9C"/>
    <Style x:Key="{x:Type TabControl}"
           TargetType="{x:Type TabControl}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding"
                Value="4,4,4,4"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background"
                Value="{StaticResource TabControlPaneTopNormalBackground}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true"
                          ClipToBounds="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1"
                                           Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Panel.ZIndex ="1" 
                                  KeyboardNavigation.TabIndex="1"
                                  Grid.Column="0"
                                  Grid.Row="0"
                                  Margin="2,2,2,0"
                                  IsItemsHost="true"/>
                        <Border x:Name="ContentPanel"
                                BorderThickness="0,0,1,1"
                                BorderBrush="#D0CEBF"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                Grid.Column="0"
                                Grid.Row="1">
                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      Margin="{TemplateBinding Padding}"
                                                      ContentSource="SelectedContent"/>
                                </Border>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                            <Setter Property="Grid.Row"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                            <Setter Property="Height"
                                    Value="Auto"
                                    TargetName="RowDefinition1"/>
                            <Setter Property="Margin"
                                    Value="2,0,2,2"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Background"
                                    Value="{StaticResource TabControlPaneBottomNormalBackground}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Left">
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition0"/>
                            <Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition1"/>
                            <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                            <Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
                            <Setter Property="Margin"
                                    Value="2,2,-1,2"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Background"
                                    Value="{StaticResource TabControlPaneLeftNormalBackground}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Right">
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition0"/>
                            <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition1"/>
                            <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                            <Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
                            <Setter Property="Margin"
                                    Value="-1,2,2,2"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Background"
                                    Value="{StaticResource TabControlPaneRightNormalBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" 
                                 Value="false">
                            <Setter Property="Foreground" 
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


 


    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <LinearGradientBrush x:Key="TabItemNormalBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFFFF"
                          Offset="0"/>
            <GradientStop Color="#FFBDBEDE"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItemHotBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFFFF"
                          Offset="0"/>
            <GradientStop Color="#FFBDBEDE"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemSelectedBackground"
                     Color="#FFFCFCFE"/>
    <SolidColorBrush x:Key="TabItemDisabledBackground"
                     Color="#FFF5F4EA"/>
    <SolidColorBrush x:Key="TabItemSelectedBorderBackround"
                     Color="#FFFFC73C"/>
    <SolidColorBrush x:Key="TabItemSelectedBorderBrush"
                     Color="#FFE68B2C"/>
    <SolidColorBrush x:Key="TabItemHotBorderBackround"
                     Color="#FFFFC73C"/>
    <SolidColorBrush x:Key="TabItemHotBorderBrush"
                     Color="#FFE68B2C"/>
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush"
                     Color="#FFC9C7BA"/>
    <Style x:Key="{x:Type TabItem}"
           TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Padding"
                Value="12,2,12,2"/>
        <Setter Property="BorderThickness"
                Value="1,1,1,0"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{StaticResource TabItemNormalBackground}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border SnapsToDevicePixels="true">
                        <Grid Margin="0,0,1,0">
                            <Grid x:Name="Transform">
                                <Border CornerRadius="3,3,0,0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"/>
                                <Border x:Name="HighlightBorder"
                                        Height="3"
                                        BorderThickness="1,1,1,0"
                                        CornerRadius="3,3,0,0"
                                        VerticalAlignment="Top"/>
                            </Grid>
                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter ContentSource="Header"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                  VerticalAlignment="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="HighlightBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource TabItemHotBorderBrush}"/>
                            <Setter TargetName="HighlightBorder"
                                    Property="Background"
                                    Value="{StaticResource TabItemHotBorderBackround}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource TabItemHotBackground}"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Panel.ZIndex"
                                    Value="1"/>
                            <Setter TargetName="HighlightBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource TabItemSelectedBorderBrush}"/>
                            <Setter TargetName="HighlightBorder"
                                    Property="Background"
                                    Value="{StaticResource TabItemSelectedBorderBackround}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource TabItemSelectedBackground}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                            <Setter Property="LayoutTransform"
                                    TargetName="Transform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1"
                                                    ScaleY="-1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Left">
                            <Setter Property="LayoutTransform"
                                    TargetName="Transform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Right">
                            <Setter Property="LayoutTransform"
                                    TargetName="Transform">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource TabItemDisabledBackground}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource TabItemDisabledBorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-2,-2,-2,-1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-2,-2,-1,-2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-1,-2,-2,-2"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type TextBoxBase}"
           TargetType="{x:Type TextBoxBase}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBorder}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="AllowDrop"
                Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TextBox}"
           BasedOn="{StaticResource {x:Type TextBoxBase}}"
           TargetType="{x:Type TextBox}">
    </Style>
    <Style x:Key="{x:Type RichTextBox}"
           BasedOn="{StaticResource {x:Type TextBoxBase}}"
           TargetType="{x:Type RichTextBox}">
        <Style.Resources>
            <Style x:Key="{x:Type FlowDocument}"
                   TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle"
                        Value="true"/>
            </Style>
        </Style.Resources>
        <Setter Property="MinWidth"
                Value="10"/>
    </Style>
    <Style x:Key="{x:Type PasswordBox}"
           TargetType="{x:Type PasswordBox}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBorder}"/>
        <Setter Property="FontFamily"
                Value="Times New Roman"/>
        <Setter Property="PasswordChar"
                Value="●"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="AllowDrop"
                Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type Thumb}"
           TargetType="{x:Type Thumb}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Border BorderThickness="0,0,1,1"
                                    Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Border BorderThickness="0,0,1,1"
                                    Margin="1"
                                    Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            <Border Margin="2"
                                    Background="{TemplateBinding Background}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToolTip}"
           TargetType="{x:Type ToolTip}">
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
        <Setter Property="Padding"
                Value="1,1,3,1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="HasDropShadow"
                Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <theme:SystemDropShadowChrome Name="Shdw"
                                                  Color="Transparent"
                                                  SnapsToDevicePixels="True">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </theme:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TreeView}"
           TargetType="{x:Type TreeView}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Background="{TemplateBinding Background}"
                                      Focusable="false"
                                      CanContentScroll="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

 
    <Style x:Key="ExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
                Value="False"/>
        <Setter Property="Width"
                Value="19"/>
        <Setter Property="Height"
                Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="19"
                            Height="13"
                            Background="Transparent">
                        <Border Width="9"
                                Height="9"
                                BorderThickness="1"
                                BorderBrush="#FF9495A2"
                                CornerRadius="1"
                                SnapsToDevicePixels="true">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0"
                                                     EndPoint="1,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="White"
                                                      Offset=".4"/>
                                        <GradientStop Color="#FFC6CEDA"
                                                      Offset="1"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path x:Name="ExpandPath"
                                  Margin="1,1,1,1"
                                  Fill="Black"
                                  Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Data"
                                    TargetName="ExpandPath"
                                    Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



 
   
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TreeViewItem}"
           TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
                Value="1,0,0,0"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19"
                                              Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"
                                      IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
                        <Border Name="Bd"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 
    <Style x:Key="{x:Type UserControl}"
           TargetType="{x:Type UserControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


   
    <ControlTemplate x:Key="WindowTemplateKey"
                     TargetType="{x:Type Window}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>

                <ResizeGrip x:Name="WindowResizeGrip"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Visibility="Collapsed"
                            IsTabStop="false"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Window.ResizeMode"
                               Value="CanResizeWithGrip"/>
                    <Condition Property="Window.WindowState"
                               Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip"
                        Property="Visibility"
                        Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="{x:Type Window}"
           TargetType="{x:Type Window}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Window.ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <JournalEntryListConverter x:Key="NavigationWindowDropDownLimiter"/>

    <Style x:Key="BrowserWindowNavigationButtonJournalEntryStyle"
           TargetType="{x:Type MenuItem}">
        <Setter Property="Header"
                Value="{Binding Path=Name}"/>
        <Setter Property="Command"
                Value="NavigationCommands.NavigateJournal"/>
        <Setter Property="CommandTarget"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}"/>
        <Setter Property="CommandParameter"
                Value="{Binding RelativeSource={RelativeSource Self}}"/>
    </Style>




    <Style x:Key="BrowserWindowMenuItem"
           TargetType="{x:Type MenuItem}">
        <Setter Property="Margin"
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <DockPanel x:Name="Panel"
                               Background="Transparent">
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               Placement="Bottom"
                               IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                               Focusable="false"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome Name="Shdw"
                                                          Color="Transparent">
                                <Border Name="SubMenuBorder"
                                        Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                                    <ScrollViewer CanContentScroll="true"
                                                  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                        <ItemsPresenter Margin="2"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                        <Path x:Name="Arrow"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Margin="0 2 0 0"
                              Fill="white"
                              Stroke="#AAAAAA"
                              StrokeThickness="1"
                              Data="{StaticResource DownArrow}"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation"
                                 Value="true">
                            <Setter TargetName="PART_Popup"
                                    Property="PopupAnimation"
                                    Value="None"/>
                        </Trigger>
                       
                        <Trigger Property="IsHighlighted"
                                 Value="true">
                            <Setter TargetName="Arrow"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            <Setter TargetName="Panel"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Arrow"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger SourceName="PART_Popup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BrowserWindowMenu"
           TargetType="{x:Type Menu}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding"
                Value="0,0,0,0"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="IsMainMenu" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <ItemsPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

  

  
    <Style x:Key="NavigationChromeDownLevelBackButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Margin"
                Value="0,0,0,0"/>
        <Setter Property="IsEnabled"
                Value="false"/>
        <Setter Property="Command"
                Value="NavigationCommands.BrowseBack"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel>
                        <Rectangle DockPanel.Dock="Right"
                                   x:Name="R1"
                                   Width="1"
                                   Visibility="Hidden"
                                   Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                        <Rectangle DockPanel.Dock="Bottom"
                                   x:Name="B1"
                                   Height="1"
                                   Visibility="Hidden"
                                   Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                        <Rectangle DockPanel.Dock="Left"
                                   x:Name="L1"
                                   Width="1"
                                   Visibility="Hidden"
                                   Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        <Rectangle DockPanel.Dock="Top"
                                   x:Name="T1"
                                   Height="1"
                                   Visibility="Hidden"
                                   Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Viewbox Grid.Column="0"
                                     Grid.Row="0">
                                <Grid Width="50"
                                      Height="50"
                                      Margin="15,0,0,0">
                                    <Ellipse x:Name="EllipseBackground"
                                             Opacity="1"
                                             StrokeThickness="2">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <GradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="#B3E2A2"
                                                                      Offset="0"/>
                                                        <GradientStop Color="#25B40E"
                                                                      Offset="1"/>
                                                    </GradientStopCollection>
                                                </GradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <GradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="black"
                                                                      Offset="0"/>
                                                        <GradientStop Color="#ccffffff"
                                                                      Offset="1"/>
                                                    </GradientStopCollection>
                                                </GradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                    </Ellipse>
                                    <Ellipse x:Name="EllipseShine"
                                             Stroke="transparent"
                                             Margin="5,5,5,15">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <GradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="#aaffffff"
                                                                      Offset="0"/>
                                                        <GradientStop Color="transparent"
                                                                      Offset="1"/>
                                                    </GradientStopCollection>
                                                </GradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Path x:Name="Arrow"
                                          Fill="white"
                                          Stroke="#086403"
                                          Data="M0.5,20.468c0.002,0.34,0.036,0.679,0.102,1.013c0.032,0.162,0.092,0.312,0.139,0.468    c0.052,0.176,0.092,0.355,0.163,0.527c0.076,0.183,0.18,0.349,0.274,0.521c0.073,0.132,0.131,0.27,0.216,0.397    c0.196,0.294,0.418,0.568,0.667,0.817l14.611,14.611c2.083,2.083,5.459,2.083,7.542,0c2.083-2.083,2.083-5.459,0-7.542    l-5.509-5.509h23.791c2.945,0,5.333-2.388,5.333-5.333c0-2.946-2.388-5.333-5.333-5.333H18.732l5.509-5.509    c2.083-2.083,2.083-5.459,0-7.542c-2.083-2.083-5.459-2.083-7.542,0L2.203,16.549c-0.043,0.04-0.095,0.07-0.136,0.111    c-0.002,0.002-0.005,0.003-0.007,0.006c-0.002,0.002-0.003,0.004-0.005,0.006c-0.246,0.247-0.465,0.517-0.659,0.807    c-0.088,0.132-0.149,0.275-0.224,0.413c-0.092,0.167-0.192,0.328-0.266,0.505c-0.072,0.175-0.114,0.357-0.167,0.538    c-0.045,0.153-0.104,0.299-0.135,0.458C0.536,19.732,0.5,20.075,0.5,20.419c0,0.006-0.002,0.012-0.002,0.019    C0.498,20.448,0.5,20.458,0.5,20.468z">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <ScaleTransform ScaleX="0.65"
                                                                        ScaleY="0.65"/>
                                                        <TranslateTransform X="11.5"
                                                                            Y="10"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Viewbox>
                            <DockPanel Grid.Column="1"
                                       Grid.Row="0">
                                <Rectangle DockPanel.Dock="Right"
                                           x:Name="R2"
                                           Width="1"
                                           Visibility="Hidden"
                                           Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                <Rectangle DockPanel.Dock="Bottom"
                                           x:Name="B2"
                                           Height="1"
                                           Visibility="Hidden"
                                           Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                <Rectangle DockPanel.Dock="Left"
                                           x:Name="L2"
                                           Width="1"
                                           Visibility="Hidden"
                                           Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                <Rectangle DockPanel.Dock="Top"
                                           x:Name="T2"
                                           Height="1"
                                           Visibility="Hidden"
                                           Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                <Grid Width="10">
                                    <Menu Style="{StaticResource BrowserWindowMenu}">
                                        <MenuItem x:Name="NavWinMenu"
                                                  Style="{StaticResource BrowserWindowMenuItem}"
                                                  ItemContainerStyle="{StaticResource BrowserWindowNavigationButtonJournalEntryStyle}"
                                                  ItemsSource="{Binding Path=BackStack,Converter={StaticResource NavigationWindowDropDownLimiter},Mode=OneTime,RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}"
                                                  IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Menu>
                                </Grid>
                            </DockPanel>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Path.Fill"
                                    TargetName="EllipseBackground">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="white"
                                                              Offset="0"/>
                                                <GradientStop Color="gray"
                                                              Offset="1"/>
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="EllipseBackground"
                                    Property="Path.Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#25B40E"
                                                              Offset="0"/>
                                                <GradientStop Color="#086403"
                                                              Offset="1"/>
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="NavWinMenu"
                                    Property="Background"
                                    Value="Transparent">
                            </Setter>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="L1"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="R1"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="T1"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="B1"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="EllipseBackground"
                                    Property="Path.Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#25B40E"
                                                              Offset="0"/>
                                                <GradientStop Color="#086403"
                                                              Offset="1"/>
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Arrow"
                                    Property="Path.RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <ScaleTransform ScaleX="0.65"
                                                                ScaleY="0.65"/>
                                                <TranslateTransform X="10"
                                                                    Y="12"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="EllipseShine"
                                    Property="Path.RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="0"
                                                        Y="2"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="MenuItem.IsSubmenuOpen"
                                 Value="true">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="L2"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="R2"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="T2"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="B2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationChromeDownLevelForwardButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Margin"
                Value="0,0,0,0"/>
        <Setter Property="IsEnabled"
                Value="false"/>
        <Setter Property="Command"
                Value="NavigationCommands.BrowseForward"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel>
                        <Rectangle DockPanel.Dock="Right"
                                   x:Name="R1"
                                   Width="1"
                                   Visibility="Hidden"
                                   Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                        <Rectangle DockPanel.Dock="Bottom"
                                   x:Name="B1"
                                   Height="1"
                                   Visibility="Hidden"
                                   Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                        <Rectangle DockPanel.Dock="Left"
                                   x:Name="L1"
                                   Width="1"
                                   Visibility="Hidden"
                                   Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        <Rectangle DockPanel.Dock="Top"
                                   x:Name="T1"
                                   Height="1"
                                   Visibility="Hidden"
                                   Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Viewbox Grid.Column="0"
                                     Grid.Row="0">
                                <Grid Width="50"
                                      Height="50"
                                      Margin="15,0,0,0">
                                    <Ellipse x:Name="EllipseBackground"
                                             Opacity="1"
                                             StrokeThickness="2">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <GradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="#B3E2A2"
                                                                      Offset="0"/>
                                                        <GradientStop Color="#25B40E"
                                                                      Offset="1"/>
                                                    </GradientStopCollection>
                                                </GradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <GradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="black"
                                                                      Offset="0"/>
                                                        <GradientStop Color="#ccffffff"
                                                                      Offset="1"/>
                                                    </GradientStopCollection>
                                                </GradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                    </Ellipse>
                                    <Ellipse x:Name="EllipseShine"
                                             Stroke="transparent"
                                             Margin="5,3,5,15">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <GradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="#aaffffff"
                                                                      Offset="0"/>
                                                        <GradientStop Color="transparent"
                                                                      Offset="1"/>
                                                    </GradientStopCollection>
                                                </GradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Path x:Name="Arrow"
                                          Fill="white"
                                          Stroke="#086403"
                                          Data="M47.82,20.407c-0.002-0.34-0.036-0.679-0.102-1.013c-0.032-0.162-0.092-0.312-0.139-0.468    c-0.052-0.176-0.092-0.355-0.163-0.527c-0.076-0.183-0.18-0.349-0.274-0.521c-0.073-0.132-0.131-0.27-0.216-0.397    c-0.196-0.294-0.418-0.568-0.667-0.817L31.647,2.053c-2.083-2.083-5.459-2.083-7.542,0c-2.083,2.083-2.083,5.459,0,7.542    l5.509,5.509H5.823c-2.945,0-5.333,2.388-5.333,5.333c0,2.946,2.388,5.333,5.333,5.333h23.765l-5.509,5.509    c-2.083,2.083-2.083,5.459,0,7.542c2.083,2.083,5.459,2.083,7.542,0l14.497-14.497c0.043-0.04,0.095-0.07,0.136-0.111    c0.002-0.002,0.005-0.003,0.007-0.006c0.002-0.002,0.003-0.004,0.005-0.006c0.246-0.247,0.465-0.517,0.659-0.807    c0.088-0.132,0.149-0.275,0.224-0.413c0.092-0.167,0.192-0.328,0.266-0.505c0.072-0.175,0.114-0.357,0.167-0.538    c0.045-0.153,0.104-0.299,0.135-0.458c0.067-0.339,0.103-0.682,0.104-1.026c0-0.006,0.002-0.012,0.002-0.019    C47.823,20.427,47.82,20.417,47.82,20.407z">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <ScaleTransform ScaleX="0.65"
                                                                        ScaleY="0.65"/>
                                                        <TranslateTransform X="8.5"
                                                                            Y="10"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Viewbox>
                            <DockPanel Grid.Column="1"
                                       Grid.Row="0">
                                <Rectangle DockPanel.Dock="Right"
                                           x:Name="R2"
                                           Width="1"
                                           Visibility="Hidden"
                                           Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                <Rectangle DockPanel.Dock="Bottom"
                                           x:Name="B2"
                                           Height="1"
                                           Visibility="Hidden"
                                           Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                <Rectangle DockPanel.Dock="Left"
                                           x:Name="L2"
                                           Width="1"
                                           Visibility="Hidden"
                                           Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                <Rectangle DockPanel.Dock="Top"
                                           x:Name="T2"
                                           Height="1"
                                           Visibility="Hidden"
                                           Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                <Grid Width="10">
                                    <Menu Style="{StaticResource BrowserWindowMenu}">
                                        <MenuItem x:Name="NavWinMenu"
                                                  Style="{StaticResource BrowserWindowMenuItem}"
                                                  ItemContainerStyle="{StaticResource BrowserWindowNavigationButtonJournalEntryStyle}"
                                                  ItemsSource="{Binding Path=ForwardStack,Converter={StaticResource NavigationWindowDropDownLimiter},Mode=OneTime,RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}"
                                                  IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Menu>
                                </Grid>
                            </DockPanel>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Path.Fill"
                                    TargetName="EllipseBackground">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="white"
                                                              Offset="0"/>
                                                <GradientStop Color="gray"
                                                              Offset="1"/>
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="EllipseBackground"
                                    Property="Path.Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#25B40E"
                                                              Offset="0"/>
                                                <GradientStop Color="#086403"
                                                              Offset="1"/>
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="NavWinMenu"
                                    Property="Background"
                                    Value="Transparent">
                            </Setter>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="L1"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="R1"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="T1"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="B1"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="EllipseBackground"
                                    Property="Path.Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#25B40E"
                                                              Offset="0"/>
                                                <GradientStop Color="#086403"
                                                              Offset="1"/>
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Arrow"
                                    Property="Path.RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <ScaleTransform ScaleX="0.65"
                                                                ScaleY="0.65"/>
                                                <TranslateTransform X="10"
                                                                    Y="12"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="EllipseShine"
                                    Property="Path.RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="0"
                                                        Y="2"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="MenuItem.IsSubmenuOpen"
                                 Value="true">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="L2"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="R2"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="T2"/>
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="B2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="BrowserHostWindowTemplateKey"
                     TargetType="{x:Type NavigationWindow}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <AdornerDecorator>
                <ContentPresenter Name="PART_NavWinCP" ClipToBounds="true"/>
            </AdornerDecorator>
        </Border>
    </ControlTemplate>
    <Style x:Key="{x:Static SystemParameters.NavigationChromeStyleKey}"
           TargetType="{x:Type NavigationWindow}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Template"
                Value="{StaticResource BrowserHostWindowTemplateKey}"/>
    </Style>
    <ControlTemplate x:Key="BrowserHostDownLevelWindowTemplateKey"
                     TargetType="{x:Type NavigationWindow}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <DockPanel>
                <Grid
                      FlowDirection="{x:Static theme:PlatformCulture.FlowDirection}"
                      DockPanel.Dock="Top"
                      Height="30">
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="1,0">
                            <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="silver"
                                                  Offset="0"/>
                                    <GradientStop Color="white"
                                                  Offset="1"/>
                                </GradientStopCollection>
                            </GradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <DockPanel LastChildFill="false">
                        <Button Style="{StaticResource NavigationChromeDownLevelBackButtonStyle}"
                                DockPanel.Dock="left"
                                Width="40"
                                Button.IsEnabled="{TemplateBinding NavigationWindow.CanGoBack}"/>
                        <Button Style="{StaticResource NavigationChromeDownLevelForwardButtonStyle}"
                                DockPanel.Dock="left"
                                Width="40"
                                Button.IsEnabled="{TemplateBinding NavigationWindow.CanGoForward}"/>
                    </DockPanel>
                </Grid>
                <Border>
                    <AdornerDecorator>
                        <ContentPresenter Name="PART_NavWinCP" ClipToBounds="true"/>
                    </AdornerDecorator>
                </Border>
            </DockPanel>
        </Border>
    </ControlTemplate>
    <Style x:Key="{x:Static SystemParameters.NavigationChromeDownLevelStyleKey}"
           TargetType="{x:Type NavigationWindow}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Template"
                Value="{StaticResource BrowserHostDownLevelWindowTemplateKey}"/>
        <Style.Triggers>
            <Trigger Property="NavigationWindow.ShowsNavigationUI"
                     Value="false">
                <Setter Property="Template"
                        Value="{StaticResource BrowserHostWindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxEditableTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="AllowDrop"
                Value="true"/>
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"
                                  Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    
    <Style x:Key="ComboBoxTransparentButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="Width"
                Value="Auto"/>
        <Setter Property="Height"
                Value="Auto"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="ClickMode"
                Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="ComboBoxButton"/>
                        </Grid.ColumnDefinitions>
                        <theme:ScrollChrome x:Name="Chrome"
                                            ThemeColor="Metallic" 
                                            HasOuterBorder="false"
                                            RenderMouseOver="{TemplateBinding IsMouseOver}"
                                            RenderPressed="{TemplateBinding IsChecked}" 
                                            Grid.Column="1"
                                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                            ScrollGlyph="DownArrow"
                                            Padding="1,0,0,0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    
    <ControlTemplate x:Key="ComboBoxEditableTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid SnapsToDevicePixels="true">
            <Border Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Padding="1">
                <Grid Grid.IsSharedSizeScope="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="ComboBoxButton"/>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="PART_EditableTextBox"
                             Grid.Column="1"
                             Style="{StaticResource ComboBoxEditableTextBox}"
                             IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}"
                             Margin="{TemplateBinding Padding}"
                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <ToggleButton Background="{x:Null}"
                                  Grid.ColumnSpan="3"
                                  Style="{StaticResource ComboBoxTransparentButtonStyle}"
                                  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                </Grid>
            </Border>
            <Popup Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent" 
                                              MinWidth="{TemplateBinding ActualWidth}"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="DropDownBorder"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                        <ScrollViewer>
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems"
                     Value="false">
                <Setter TargetName="DropDownBorder"
                        Property="MinHeight"
                        Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsGrouping"
                     Value="true">
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false"/>
            </Trigger>
            <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}"
           TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Border Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="1">
                            <Grid Grid.IsSharedSizeScope="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"
                                                      SharedSizeGroup="ComboBoxButton"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="SelectedItemBorder"
                                        Grid.ColumnSpan="2"
                                        Margin="{TemplateBinding Padding}"/>
                                <ContentPresenter Grid.Column="1"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <ToggleButton Grid.ColumnSpan="3"
                                              Style="{StaticResource ComboBoxTransparentButtonStyle}"
                                              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>
                        </Border>
                        <Popup Name="PART_Popup"
                               AllowsTransparency="true"
                               Placement="Bottom"
                               IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                               Focusable="false"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome Name="Shdw"
                                                          Color="Transparent" 
                                                          MinWidth="{TemplateBinding ActualWidth}"
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                    <ScrollViewer>
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelectionBoxHighlighted"
                                           Value="true"/>
                                <Condition Property="IsDropDownOpen"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelectionBoxHighlighted"
                                 Value="true">
                            <Setter TargetName="SelectedItemBorder"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger SourceName="PART_Popup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable"
                     Value="true">
                <Setter Property="IsTabStop"
                        Value="false"/>
                <Setter Property="Padding"
                        Value="0,1"/>
                <Setter Property="Template"
                        Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <ControlTemplate x:Key="FrameNavChromeTemplateKey"
                     TargetType="{x:Type Frame}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
            <DockPanel>
                <Grid Background="{StaticResource NavigationWindowNavigationChromeBackground}"
                      DockPanel.Dock="Top"
                      Height="22">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="16"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Menu Name="NavMenu"
                          Grid.ColumnSpan="3"
                          Height="16"
                          Margin="1,0,0,0"
                          VerticalAlignment="Center" 
                          Style="{StaticResource NavigationWindowMenu}">

                        <MenuItem Padding="0,2,4,0"
                                  Style="{StaticResource NavigationWindowMenuItem}"
                                  ItemContainerStyle="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle}"
                                  IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                            <MenuItem.ItemsSource>
                                <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" 
                                                 Path="BackStack" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" 
                                                 Path="ForwardStack" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </MenuItem.ItemsSource>
                        </MenuItem>
                    </Menu>

                    <Path Grid.Column="0" 
                          SnapsToDevicePixels="false"
                          IsHitTestVisible="false"
                          Margin="2,0,0,0"
                          Grid.ColumnSpan="3"
                          StrokeThickness="1" 
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Center" 
                          Data="M22.5767,21.035 Q27,19.37 31.424,21.035 A12.5,12.5,0,0,0,53.5,13 A12.5,12.5,0,0,0,37.765,0.926 Q27,4.93 16.235,0.926 A12.5,12.5,0,0,0,0.5,13 A12.5,12.5,0,0,0,22.5767,21.035 z">
                        <Path.Fill>
                            <LinearGradientBrush StartPoint="0,0"
                                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#A0C2CCE7" Offset="0"/>
                                        <GradientStop Color="#60FFFFFF" Offset="1"/>
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Path.Fill>

                        <Path.Stroke>
                            <LinearGradientBrush StartPoint="0,0"
                                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFB7C2E3" Offset="0.2"/>
                                        <GradientStop Color="#A0FFFFFF" Offset="0.9"/>
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Path.Stroke>
                        <Path.LayoutTransform>
                            <ScaleTransform ScaleX="0.667" ScaleY="0.667"/>
                        </Path.LayoutTransform>
                    </Path>

                    <Button Style="{StaticResource NavigationWindowBackButtonStyle}"
                            Margin="3,0,1,0" 
                            Grid.Column="0">
                        <Button.LayoutTransform>
                            <ScaleTransform ScaleX="0.667" ScaleY="0.667"/>
                        </Button.LayoutTransform>
                    </Button>
                    

                    <Button Style="{StaticResource NavigationWindowForwardButtonStyle}"
                            Margin="1,0,0,0" 
                            Grid.Column="1">
                        <Button.LayoutTransform>
                            <ScaleTransform ScaleX="0.667" ScaleY="0.667"/>
                        </Button.LayoutTransform>
                    </Button>
                </Grid>
                <ContentPresenter x:Name="PART_FrameCP"/>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CanGoForward"
                               Value="false"/>
                    <Condition Property="CanGoBack"
                               Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="NavMenu"
                        Property="IsEnabled"
                        Value="false"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type Frame}"
           TargetType="{x:Type Frame}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Frame}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="PART_FrameCP"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="NavigationUIVisibility"
                     Value="Visible">
                <Setter Property="Template"
                        Value="{StaticResource FrameNavChromeTemplateKey}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="JournalOwnership"
                               Value="OwnsJournal"/>
                    <Condition Property="NavigationUIVisibility"
                               Value="Automatic"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template"
                        Value="{StaticResource FrameNavChromeTemplateKey}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Focusable="false">
                                <GridViewHeaderRowPresenter Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Cursor="Arrow"/>
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Orientation="Vertical"
                                   Grid.Column="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Cursor="Arrow"/>
                        <DockPanel Grid.Column="1"
                                   Grid.Row="1"
                                   Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}"
                                   LastChildFill="false">
                            <Rectangle DockPanel.Dock="Left"
                                       Width="1"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <Rectangle DockPanel.Dock="Top"
                                       Height="1"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <LinearGradientBrush x:Key="GridViewColumnHeaderHighlightBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF9FAFD"
                          Offset="0"/>
            <GradientStop Color="#FFBDBECE"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GridViewColumnHeaderBackground"
                     Color="#FFF9FAFD"/>
    <SolidColorBrush x:Key="GridViewColumnHeaderDarkBackground"
                     Color="#FFBDBECE"/>
    <SolidColorBrush x:Key="GridViewColumnHeaderHoverBackground"
                     Color="#FFF9FAFD"/>
    <SolidColorBrush x:Key="GridViewColumnHeaderPressBorder"
                     Color="#FF808099"/>
    <SolidColorBrush x:Key="GridViewColumnHeaderPressBackground"
                     Color="#FFECECF3"/>
    <SolidColorBrush x:Key="GridViewFloatingHeaderBackground"
                     Color="#FFF9FAFD"/>
    <SolidColorBrush x:Key="GridViewColumnHeaderGripperBackground"
                     Color="#FFB5B6C8"/>


    <Style x:Key="GridViewColumnHeaderGripper"
           TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right"
                Value="-9"/>
        <Setter Property="Width"
                Value="18"/>
        <Setter Property="Height"
                Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Padding"
                Value="0,3,0,4"/>
        <Setter Property="Background"
                Value="{StaticResource GridViewColumnHeaderGripperBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent">
                        <DockPanel HorizontalAlignment="Center">
                            <Rectangle Width="1"
                                       Fill="{TemplateBinding Background}"/>
                            <Rectangle Width="1"
                                       Fill="White"/>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type GridViewColumnHeader}"
           TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Background"
                Value="{StaticResource GridViewColumnHeaderBackground}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Padding"
                Value="2,0,2,0"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true"
                          Background="{TemplateBinding Background}">
                        <Border x:Name="HighlightBorder"
                                VerticalAlignment="Bottom"
                                Background="{StaticResource GridViewColumnHeaderHighlightBackground}"
                                BorderBrush="{StaticResource GridViewColumnHeaderDarkBackground}"
                                Height="3"
                                BorderThickness="0,0,0,1"/>
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}"
                                Margin="1,0,1,0">
                            <ContentPresenter x:Name="HeaderContent"
                                              Margin="0,0,0,1"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper"
                                   Style="{StaticResource GridViewColumnHeaderGripper}"/>
                        </Canvas>
                        <Border x:Name="HeaderPressBorder"
                                BorderThickness="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="HighlightBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource TabItemHotBorderBrush}"/>
                            <Setter TargetName="HighlightBorder"
                                    Property="Background"
                                    Value="{StaticResource TabItemHotBorderBackround}"/>
                            <Setter TargetName="HighlightBorder"
                                    Property="CornerRadius"
                                    Value="0,0,3,3"/>
                            <Setter TargetName="HighlightBorder"
                                    Property="BorderThickness"
                                    Value="1,0,1,1"/>
                            <Setter TargetName="PART_HeaderGripper"
                                    Property="Background"
                                    Value="Transparent"/>
                            <Setter Property="Background"
                                    Value="{StaticResource GridViewColumnHeaderHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="HighlightBorder"
                                    Property="Visibility"
                                    Value="Hidden"/>
                            <Setter TargetName="PART_HeaderGripper"
                                    Property="Visibility"
                                    Value="Hidden"/>
                            <Setter TargetName="HeaderPressBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource GridViewColumnHeaderPressBorder}"/>
                            <Setter TargetName="HeaderPressBorder"
                                    Property="Margin"
                                    Value="1,0,0,0"/>
                            <Setter TargetName="HeaderContent"
                                    Property="Margin"
                                    Value="1,1,0,0"/>
                            <Setter Property="Background"
                                    Value="{StaticResource GridViewColumnHeaderPressBackground}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource GridViewColumnHeaderPressBackground}"/>
                        </Trigger>
                        <Trigger Property="Height"
                                 Value="Auto">
                            <Setter Property="MinHeight"
                                    Value="20"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="Floating">
                <Setter Property="Opacity"
                        Value="0.7"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas Name="PART_FloatingHeaderCanvas" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true">
                                <Border VerticalAlignment="Bottom"
                                        Background="{StaticResource GridViewColumnHeaderHighlightBackground}"
                                        BorderBrush="{StaticResource GridViewColumnHeaderDarkBackground}"
                                        Height="3"
                                        BorderThickness="0,0,0,1"/>
                                <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Padding="{TemplateBinding Padding}" 
                                        Margin="1,0,1,0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height"
                                         Value="Auto">
                                    <Setter Property="MinHeight"
                                            Value="20"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static GridView.GridViewStyleKey}"
           TargetType="{x:Type ListView}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                                      Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

  
    
    <SolidColorBrush x:Key="ToolBarLightFill"
                     Color="#FFEEC2"/>
    <SolidColorBrush x:Key="ToolBarMediumFill"
                     Color="#FFC06F"/>
    <SolidColorBrush x:Key="ToolBarDarkFill"
                     Color="#FE803E"/>
    <SolidColorBrush x:Key="ToolBarDisabledFill"
                     Color="#E0DFE3"/>
    <SolidColorBrush x:Key="ToolBarDisabledBorder"
                     Color="#8D8D8D"/>
    <SolidColorBrush x:Key="ToolBarSeparatorFill"
                     Color="#6E6D8F"/>
    <LinearGradientBrush x:Key="ToolBarButtonHover"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFEEC2"
                          Offset="0"/>
            <GradientStop Color="#FE803E"
                          Offset="3"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToolBarButtonHoverBorder"
                     Color="#4B4B6F"/>
    <LinearGradientBrush x:Key="ToolBarButtonChecked"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFC06F"
                          Offset="0.2"/>
            <GradientStop Color="#FE803E"
                          Offset="2"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarButtonPressed"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FE803E"
                          Offset="-0.4"/>
            <GradientStop Color="#FFC06F"
                          Offset="0.5"/>
            <GradientStop Color="#FFEEC2"
                          Offset="1.5"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToolBarButtonPressedBorder"
                     Color="#4B4B6F"/>
    <SolidColorBrush x:Key="ToolBarMenuBorder"
                     Color="#7C7C94"/>
    <SolidColorBrush x:Key="ToolBarSubMenuBackground"
                     Color="#FDFAFF"/>
    <SolidColorBrush x:Key="ToolBarMenuCheckFill"
                     Color="#FFC06F"/>
    <LinearGradientBrush x:Key="ToolBarOpenHeaderBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#E8E9F1"
                          Offset="0"/>
            <GradientStop Color="#BAB9CD"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarTrayBackground"
                         StartPoint="0,0"
                         EndPoint="688,0"
                         MappingMode="Absolute">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#D7D7E5"
                          Offset="0"/>
            <GradientStop Color="#F3F3F7"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarHorizontalBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#F3F4FA"
                          Offset="0"/>
            <GradientStop Color="#E1E2EC"
                          Offset="0.5"/>
            <GradientStop Color="#9997B5"
                          Offset="0.9"/>
            <GradientStop Color="#7C7C94"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarVerticalBackground"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#F3F4FA"
                          Offset="0"/>
            <GradientStop Color="#E1E2EC"
                          Offset="0.5"/>
            <GradientStop Color="#9997B5"
                          Offset="0.9"/>
            <GradientStop Color="#7C7C94"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToolBarGripper"
                     Color="#545475"/>
    <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B3B2C8"
                          Offset="0"/>
            <GradientStop Color="#9897B1"
                          Offset="0.5"/>
            <GradientStop Color="#767492"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B3B2C8"
                          Offset="0"/>
            <GradientStop Color="#9897B1"
                          Offset="0.5"/>
            <GradientStop Color="#767492"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>



    <Geometry x:Key="ToolBarCheckmark"> M 0,2.5 L 2.5,5 L 7,0.5</Geometry>

    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{StaticResource ToolBarSeparatorFill}"/>
        <Setter Property="MinWidth"
                Value="1"/>
        <Setter Property="MinHeight"
                Value="1"/>
        <Setter Property="Margin"
                Value="2,2,2,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonChecked}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
           TargetType="{x:Type CheckBox}"/>
    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
           TargetType="{x:Type RadioButton}"/>


    <Style x:Key="ToolBarComboBoxTransparentButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="Width"
                Value="Auto"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="ClickMode"
                Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="ComboBoxButton"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Chrome"
                                Grid.Column="1"
                                Width="13"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <Path x:Name="ArrowDownPath"
                                  Data="M 2.5 0 L 8.5 0 L 5.5 3 Z"
                                  Fill="black"
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{x:Null}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="ArrowDownPath"
                                    Property="Fill"
                                    Value="{StaticResource ToolBarDisabledBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}"
           TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="1,0"/>
        <Setter Property="Padding"
                Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="MinHeight"
                Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid Grid.IsSharedSizeScope="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="ComboBoxButton"/>
                            </Grid.ColumnDefinitions>
                            <Border Name="Background"
                                    Background="{TemplateBinding Background}"/>
                            <Border Name="SelectedContentBorder"
                                    Margin="2,2,1,2">
                                <ContentPresenter x:Name="ContentSite"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="Center"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Border Name="Border"
                                    Grid.ColumnSpan="2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"/>
                            <ToggleButton BorderBrush="white"
                                          BorderThickness="1"
                                          x:Name="DropDownButton"
                                          Grid.ColumnSpan="2"
                                          Style="{StaticResource ToolBarComboBoxTransparentButtonStyle}"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <TextBox Padding="{TemplateBinding Padding}"
                                     Margin="1,1,0,1"
                                     MinHeight="18"
                                     x:Name="PART_EditableTextBox"
                                     Style="{StaticResource ComboBoxEditableTextBox}"
                                     Visibility="Collapsed"
                                     IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}"
                                     VerticalAlignment="Center"/>
                        </Grid>
                        <Popup Name="PART_Popup"
                               AllowsTransparency="true"
                               Placement="Bottom"
                               IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                               Focusable="false"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome Name="Shdw"
                                                          Color="Transparent" 
                                                          MinWidth="{TemplateBinding ActualWidth}"
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource ToolBarMenuBorder}">
                                    <ScrollViewer>
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{StaticResource ToolBarDisabledFill}"/>
                            <Setter TargetName="Background"
                                    Property="Grid.ColumnSpan"
                                    Value="2"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarDisabledBorder}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin"
                                           Value="true"/>
                                <Condition Property="IsDropDownOpen"
                                           Value="false"/>
                                <Condition Property="IsEditable"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SelectedContentBorder"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{x:Null}"/>
                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="DropDownButton"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                            <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin"
                                 Value="true">
                            <Setter TargetName="DropDownButton"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                            <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                        </Trigger>
                        <Trigger SourceName="PART_Popup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin"
                                           Value="true"/>
                                <Condition Property="IsDropDownOpen"
                                           Value="false"/>
                                <Condition Property="IsEditable"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter Property="Padding"
                                    Value="2"/>
                            <Setter Property="IsTabStop"
                                    Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}"
           TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="1,0"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="MinHeight"
                Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalAlignment="Center"
                                      MinHeight="18"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource ToolBarDisabledFill}"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarDisabledBorder}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Static ToolBar.MenuStyleKey}"
           TargetType="{x:Type Menu}">
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Continue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="OverridesDefaultStyle" 
                        Value="true" />
                <Setter Property="Background" 
                        Value="{StaticResource ToolBarSeparatorFill}" />
                <Setter Property="Height" Value="1" />
                <Setter Property="Margin" Value="0,1,0,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="1" Margin="8,0,0,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type MenuItem}"
                   TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" 
                        Value="true" />
                <Setter Property="HorizontalContentAlignment"
                        Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment"
                        Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                <Setter Property="BorderThickness"
                        Value="1"/>
                <Setter Property="Margin"
                        Value="0,1,0,0"/>
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
                <Setter Property="DockPanel.Dock"
                        Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid Background="Transparent"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="24"
                                                      Width="Auto"
                                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"
                                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition Width="14"/>
                                </Grid.ColumnDefinitions>
                                <Border Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Grid.ColumnSpan="4"
                                        Margin="1,0"/>
                                <ContentPresenter x:Name="Icon"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Icon"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border Name="GlyphPanel"
                                        Margin="0,1"
                                        Width="20"
                                        Height="20"
                                        Visibility="Hidden"
                                        BorderBrush="{StaticResource ToolBarButtonHoverBorder}"
                                        Background="{StaticResource ToolBarMenuCheckFill}"
                                        BorderThickness="1">
                                    <Path VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          FlowDirection="LeftToRight"
                                          Stroke="{TemplateBinding Foreground}"
                                          StrokeThickness="1.2"
                                          Data="{StaticResource ToolBarCheckmark}"/>
                                </Border>

                                <ContentPresenter Grid.Column="1"
                                                  ContentSource="Header"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <TextBlock Grid.Column="2"
                                           Text="{TemplateBinding InputGestureText}"
                                           Margin="4,3,2,3"
                                           HorizontalAlignment="Right"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon"
                                         Value="{x:Null}">
                                    <Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="true">
                                    <Setter TargetName="GlyphPanel"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                                         Value="true">
                                    <Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource ToolBarButtonHover}"/>
                                    <Setter TargetName="GlyphPanel"
                                            Property="BorderBrush"
                                            Value="{StaticResource ToolBarButtonPressedBorder}"/>
                                    <Setter TargetName="GlyphPanel"
                                            Property="Background"
                                            Value="{StaticResource ToolBarDarkFill}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Role"
                             Value="TopLevelHeader">
                        <Setter Property="Padding"
                                Value="6,2,7,2"/>
                        <Setter Property="Grid.IsSharedSizeScope"
                                Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
                                        <DockPanel Name="Header">
                                            <ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
                                            <ContentPresenter ContentSource="Header"
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Popup x:Name="PART_Popup"
                                                   Placement="Bottom"
                                                   HorizontalOffset="-1"
                                                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Focusable="false"
                                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                                   AllowsTransparency="true">
                                                <theme:SystemDropShadowChrome Name="Shdw"
                                                                              Color="Transparent">
                                                    <Border Background="{StaticResource ToolBarSubMenuBackground}"
                                                            BorderBrush="{StaticResource ToolBarMenuBorder}"
                                                            BorderThickness="1">
                                                        <Grid Grid.IsSharedSizeScope="true">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition MinWidth="24"
                                                                                  Width="Auto"
                                                                                  SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Rectangle Fill="{StaticResource ToolBarVerticalBackground}"
                                                                       Margin="0,1"/>
                                                            <Rectangle Fill="{StaticResource ToolBarSubMenuBackground}"
                                                                       Grid.ColumnSpan="2"
                                                                       Margin="0,-1,0,0"
                                                                       VerticalAlignment="Top"
                                                                       HorizontalAlignment="Left"
                                                                       Height="1"
                                                                       Width="{Binding ElementName=Header, Path=ActualWidth}" />
                                                            <ScrollViewer CanContentScroll="true"
                                                                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}"
                                                                          Grid.ColumnSpan="2">
                                                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                                KeyboardNavigation.TabNavigation="Cycle"
                                                                                Margin="0,0,0,1"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </ScrollViewer>
                                                        </Grid>
                                                    </Border>
                                                </theme:SystemDropShadowChrome>
                                            </Popup>
                                        </DockPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
                                            <Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
                                        </Trigger>
                                        <Trigger Property="Icon"
                                                 Value="{x:Null}">
                                            <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked"
                                                 Value="true">
                                            <Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
                                            <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted"
                                                 Value="true">
                                            <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                            <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarButtonHover}"/>
                                        </Trigger>
                                        <Trigger Property="IsSubmenuOpen"
                                                 Value="true">
                                            <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ToolBarMenuBorder}"/>
                                            <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarOpenHeaderBackground}"/>
                                        </Trigger>
                                        <Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
                                             <Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
                                             <Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
                                             <Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
                                         </Trigger>
                                        <Trigger Property="IsEnabled"
                                                 Value="false">
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role"
                             Value="TopLevelItem">
                        <Setter Property="Margin"
                                Value="0,1,0,1"/>
                        <Setter Property="Padding"
                                Value="7,1,8,2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
                                        <DockPanel>
                                            <ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
                                            <ContentPresenter ContentSource="Header"
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </DockPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Icon"
                                                 Value="{x:Null}">
                                            <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked"
                                                 Value="true">
                                            <Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
                                            <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted"
                                                 Value="true">
                                            <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                            <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarButtonHover}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled"
                                                 Value="false">
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role"
                             Value="SubmenuHeader">
                        <Setter Property="DockPanel.Dock"
                                Value="Top"/>
                        <Setter Property="Padding"
                                Value="8,3,8,3"/>
                        <Setter Property="Grid.IsSharedSizeScope"
                                Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Grid Background="Transparent"
                                          SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="24"
                                                              Width="Auto"
                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"
                                                              SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                            <ColumnDefinition Width="14"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Grid.ColumnSpan="4"
                                                Margin="1,0"/>
                                        <ContentPresenter x:Name="Icon"
                                                          Margin="3"
                                                          VerticalAlignment="Center"
                                                          ContentSource="Icon"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Border Name="GlyphPanel"
                                                Margin="0,1"
                                                Width="20"
                                                Height="20"
                                                Visibility="Hidden"
                                                BorderBrush="{StaticResource ToolBarButtonHoverBorder}"
                                                Background="{StaticResource ToolBarMenuCheckFill}"
                                                BorderThickness="1">
                                            <Path VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
                                        </Border>
                                        <ContentPresenter Grid.Column="1"
                                                          ContentSource="Header"
                                                          Margin="{TemplateBinding Padding}"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Path Grid.Column="3"
                                              DockPanel.Dock="Right"
                                              VerticalAlignment="Center"
                                              Margin="4,0,6,0"
                                              Fill="{TemplateBinding Foreground}"
                                              Data="{StaticResource RightArrow}"/>
                                        <Popup x:Name="PART_Popup"
                                               Placement="Right"
                                               IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                               Focusable="false"
                                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                               AllowsTransparency="true">
                                            <theme:SystemDropShadowChrome Name="Shdw"
                                                                          Color="Transparent">
                                                <Border Background="{StaticResource ToolBarSubMenuBackground}"
                                                        BorderBrush="{StaticResource ToolBarMenuBorder}"
                                                        BorderThickness="1"
                                                        Grid.IsSharedSizeScope="true">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition MinWidth="24"
                                                                              Width="Auto"
                                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Rectangle Fill="{StaticResource ToolBarVerticalBackground}"
                                                                   Margin="0,1"/>
                                                        <ScrollViewer CanContentScroll="true"
                                                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}"
                                                                      Grid.ColumnSpan="2">
                                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                                            Margin="0,0,0,1"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </ScrollViewer>
                                                    </Grid>
                                                </Border>
                                            </theme:SystemDropShadowChrome>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
                                            <Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
                                        </Trigger>
                                        <Trigger Property="Icon"
                                                 Value="{x:Null}">
                                            <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked"
                                                 Value="true">
                                            <Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
                                            <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted"
                                                 Value="true">
                                            <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                            <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarButtonHover}"/>
                                            <Setter TargetName="GlyphPanel"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ToolBarButtonPressedBorder}"/>
                                            <Setter TargetName="GlyphPanel"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarDarkFill}"/>
                                        </Trigger>
                                        <Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
                                             <Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
                                             <Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
                                             <Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
                                         </Trigger>
                                        <Trigger Property="IsEnabled"
                                                 Value="false">
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>



    <Style x:Key="ToolBarThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush Viewbox="0,0,4,4"
                                              Viewport="0,0,4,4"
                                              TileMode="Tile"
                                              ViewportUnits="Absolute"
                                              ViewboxUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="White"
                                                                 Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                <GeometryDrawing Brush="{StaticResource ToolBarGripper}"
                                                                 Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Cursor"
                                    Value="SizeAll"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Bd"
                            CornerRadius="0,3,3,0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Canvas Width="6"
                                Height="7"
                                Margin="7,2,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                            <Path Stroke="White"
                                  Data="M 1 1.5 L 6 1.5"/>
                            <Path Stroke="{TemplateBinding Foreground}"
                                  Data="M 0 0.5 L 5 0.5"/>
                            <Path Fill="White"
                                  Data="M 0.5 4 L 6.5 4 L 3.5 7 Z"/>
                            <Path Fill="{TemplateBinding Foreground}"
                                  Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ToolBarGripper}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Bd"
                            CornerRadius="0,0,3,3"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Canvas Width="7"
                                Height="6"
                                Margin="2,7,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                            <Path Stroke="White"
                                  Data="M 1.5 1 L 1.5 6"/>
                            <Path Stroke="{TemplateBinding Foreground}"
                                  Data="M 0.5 0 L 0.5 5"/>
                            <Path Fill="White"
                                  Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z"/>
                            <Path Fill="{TemplateBinding Foreground}"
                                  Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z"/>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ToolBarGripper}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   


    <Style x:Key="{x:Type ToolBar}"
           TargetType="{x:Type ToolBar}">
        <Setter Property="Background"
                Value="{StaticResource ToolBarHorizontalBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid Name="Grid"
                          Margin="3,1,1,1"
                          SnapsToDevicePixels="true">
                        <Grid HorizontalAlignment="Right"
                              x:Name="OverflowGrid">
                            <ToggleButton x:Name="OverflowButton"
                                          FocusVisualStyle="{x:Null}"
                                          IsEnabled="{TemplateBinding HasOverflowItems}"
                                          Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"
                                          IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                            <Popup x:Name="OverflowPopup"
                                   AllowsTransparency="true"
                                   Placement="Bottom"
                                   IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                   StaysOpen="false"
                                   Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <theme:SystemDropShadowChrome Name="Shdw"
                                                              Color="Transparent">
                                    <Border Background="{StaticResource ToolBarSubMenuBackground}"
                                            BorderBrush="{StaticResource ToolBarMenuBorder}"
                                            BorderThickness="1">
                                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                              Margin="2"
                                                              WrapWidth="200"
                                                              Focusable="true" 
                                                              FocusVisualStyle="{x:Null}"
                                                              KeyboardNavigation.TabNavigation="Cycle"
                                                              KeyboardNavigation.DirectionalNavigation="Cycle"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </theme:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <Border x:Name="MainPanelBorder"
                                Margin="0,0,11,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3,3,3,3"
                                Padding="{TemplateBinding Padding}">
                            <DockPanel KeyboardNavigation.TabIndex="1"
                                       KeyboardNavigation.TabNavigation="Local">
                                <Thumb x:Name="ToolBarThumb"
                                       Style="{StaticResource ToolBarThumbStyle}"
                                       Margin="-3,-1,0,0"
                                       Width="10"
                                       Padding="6,5,1,6"/>
                                <ContentPresenter x:Name="ToolBarHeader"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="4,0,4,0"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <ToolBarPanel x:Name="PART_ToolBarPanel"
                                              IsItemsHost="true"
                                              Margin="0,1,2,2"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen"
                                 Value="true">
                            <Setter TargetName="ToolBarThumb"
                                    Property="IsEnabled"
                                    Value="false"/>
                        </Trigger>
                        <Trigger Property="Header"
                                 Value="{x:Null}">
                            <Setter TargetName="ToolBarHeader"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked"
                                 Value="true">
                            <Setter TargetName="ToolBarThumb"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger SourceName="OverflowPopup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="Orientation"
                                 Value="Vertical">
                            <Setter TargetName="Grid"
                                    Property="Margin"
                                    Value="1,3,1,1"/>
                            <Setter TargetName="OverflowButton"
                                    Property="Style"
                                    Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
                            <Setter TargetName="ToolBarThumb"
                                    Property="Height"
                                    Value="10"/>
                            <Setter TargetName="ToolBarThumb"
                                    Property="Width"
                                    Value="Auto"/>
                            <Setter TargetName="ToolBarThumb"
                                    Property="Margin"
                                    Value="-1,-3,0,0"/>
                            <Setter TargetName="ToolBarThumb"
                                    Property="Padding"
                                    Value="5,6,6,1"/>
                            <Setter TargetName="ToolBarHeader"
                                    Property="Margin"
                                    Value="0,0,0,4"/>
                            <Setter TargetName="PART_ToolBarPanel"
                                    Property="Margin"
                                    Value="1,0,2,2"/>
                            <Setter TargetName="ToolBarThumb"
                                    Property="DockPanel.Dock"
                                    Value="Top"/>
                            <Setter TargetName="ToolBarHeader"
                                    Property="DockPanel.Dock"
                                    Value="Top"/>
                            <Setter TargetName="OverflowGrid"
                                    Property="HorizontalAlignment"
                                    Value="Stretch"/>
                            <Setter TargetName="OverflowGrid"
                                    Property="VerticalAlignment"
                                    Value="Bottom"/>
                            <Setter TargetName="OverflowPopup"
                                    Property="Placement"
                                    Value="Right"/>
                            <Setter TargetName="MainPanelBorder"
                                    Property="Margin"
                                    Value="0,0,0,11"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarVerticalBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}" >
        <Setter Property="Background" 
                Value="{StaticResource ToolBarTrayBackground}"/>
    </Style>


</ResourceDictionary>
