<html DIR="LTR"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" /><META NAME="save" CONTENT="history" /><title>Single Threaded Application With Long Running Calculation Sample</title><META NAME="Description" CONTENT="This sample demonstrates how to keep the UI from becoming non-responsive in single threaded application which performs a long operation."></META><META NAME="MS.LOCALE" CONTENT="en-us" /><style>
body
{font-family:Verdana;font-size:medium;}
div#mainSection, div#header
{font-size:70%;width: 100%;}
div#mainBody
{font-size:90%;}
div#mainSection div table
{font-size: 100%;text-align: left;}
span#nsrTitle
{color:#003399;font-size:90%;font-weight:600;}
div#header
{background-color:#D4DFFF;}
.heading
{font-size:120%;color:#003399;}
.subHeading
{font-size:100%;margin-bottom:4;}
li
{margin-top:-2;margin-bottom:3;}
p
{margin-top:10;margin-bottom:5;}
div.tableSection p
{margin-top:1;margin-bottom:4;}	
div#mainSection table th
{background-color:#EFEFF7;color:#000066;text-align:left;}
div#mainSection table td
{background-color:#F7F7FF;}
div#mainSection table
{margin-top:5px;margin-bottom: px;}
			</style></head><body><div id="header"><table width="100%" id="topTable"><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Single Threaded Application With Long Running Calculation Sample</span></td></tr></table></div><div id="mainSection"><div id="mainBody"><br /><font color="DarkGray">[This readme is a partial copy of the sample's topic in the SDK documentation.]</font><br /><p>This sample demonstrates how to keep the UI from becoming non-responsive in single threaded application which performs a long operation.</p><p>This sample has a Button which when clicked starts calculating prime numbers.  This calculation is theoretically unending, so if the event handler simple went into a loop and started calculating prime numbers, the call would never return and the UI thread would freeze. </p><p>To avoid this, the sample queues an asynchronous job onto the Dispatcher of the UI thread by calling BeginInvoke.  The job that is pushed on the queue processes one number when the UI thread is in the SystemIdle state and pushes another call on the dispatcher to process the next number the next time the UI thread is idle.  </p><p>This insures that the UI thread will always take precedence over calculating the next number and it keeps the UI from hanging.</p><p>See the Windows Presentation Foundation Threading Model topic for a discussion on this sample.</p><p>This sample demonstrates a specific feature of the Windows Presentation Foundation and, consequently, does not follow application development best practices. For comprehensive coverage of Windows Presentation Foundation (WPF) and Microsoft .NET Framework application development best practices, refer to the following as appropriate:</p><p>Accessibility - Accessibility Best Practices</p><p>Security - WPF Security</p><p>Localization - WPF Globalization and Localization Overview</p><h1 class="heading">Building the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><ul><li><p>
            Install the Windows Software Development Kit (SDK) and open its build environment command window. On the Start menu, point to All Programs, Microsoft Windows SDK, and then click CMD Shell.
          </p></li><li><p>
            Download the sample, usually from the software development kit (SDK) documentation, to your hard disk drive.
          </p></li><li><p>
            To build the sample from the build environment command window, go to the source directory of the sample. At the command prompt, type MSBUILD.
          </p></li><li><p>
            To build the sample in Microsoft Visual Studio 2005, load the sample solution or project file and then press CTRL+SHIFT+B.
          </p></li></ul></div><h1 class="heading">Running the Sample</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><ul><li><p></p></li><li><p>
            To run the compiled sample with debugging in Visual Studio 2005, press F5.
          </p></li></ul></div><h1 class="heading">See Also</h1><div id="seeAlsoSection" class="seeAlsoNoToggleSection"><h4 class="subHeading">Tasks</h4><a href="6316355a-c879-4f9a-a262-07042236ae96.htm">Weather Service Simulation Via Dispatcher Sample</a><br /><a href="013af4a0-f2bf-447d-87e0-de2ce74fbbd8.htm">Multithreading Web Browser Sample</a><br /><a href="c29ad57a-d6f6-45b8-814c-37b3086fafc1.htm">Disable Command Source Via System Timer Sample</a><br /><h4 class="subHeading">Other Resources</h4>Windows Presentation Foundation Threading Model<br /><br /></div><UscDataIsland></UscDataIsland></div></div></body></html>