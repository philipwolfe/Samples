<Window x:Class="TrafficAlert.Window1"
    xmlns='http://schemas.microsoft.com/winfx/2006/xaml/presentation' 
    xmlns:x='http://schemas.microsoft.com/winfx/2006/xaml'
    Title="Traffic Alert"
  
    ShowInTaskbar="true"
    Name ="w1"
    Loaded="WindowLoaded"
    Background="beige" 
    Width="400"
    Height ="700" >
  
  <StackPanel Name="sp">

    <StackPanel.Resources>
      
    <Style x:Key="ExpandCollapseToggleStyle"
       TargetType="{x:Type ToggleButton}">
      <Setter Property="Focusable"
              Value="False"/>
      <Setter Property="Width"
              Value="19"/>
      <Setter Property="Height"
              Value="13"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
              <Border Width="19"
                      Height="13"
                      Background="transparent">
                <Border Width="11"
                        Height="11"
                        BorderThickness="1"
                        BorderBrush="black"
                        CornerRadius="25"
                        SnapsToDevicePixels="true">
                  <Border.Background>
                    <LinearGradientBrush StartPoint="0,0"
                                         EndPoint="1,1">
                      <LinearGradientBrush.GradientStops>
                        <GradientStop Color="YELLOW"
                                      Offset=".2"/>
                        <GradientStop Color="RED"
                                      Offset="1"/>
                      </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </Border.Background>
                  <Path x:Name="ExpandPath"
                        Margin="2,2,2,2"
                        Fill="black"
                        Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                </Border>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                  <Setter Property="Data"
                          TargetName="ExpandPath"
                          Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate>
              <Border>
                <Rectangle Margin="0,0,0,0"
                           StrokeThickness="5"
                           Stroke="Black"
                           StrokeDashArray="1 2"
                           Opacity="0"/>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      
      <Style x:Key="{x:Type TreeViewItem}"
             TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background"
        Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
                Value="1,0,0,0"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TreeViewItem}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MinWidth="19"
                                    Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <ToggleButton x:Name="Expander"
                              Style="{StaticResource ExpandCollapseToggleStyle}"
                              IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                              ClickMode="Press"/>
                <Border Name="Bd"
                        Grid.Column="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                  <ContentPresenter x:Name="PART_Header"
                                    ContentSource="Header"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                </Border>
                <ItemsPresenter x:Name="ItemsHost"
                                Grid.Row="1"
                                Grid.Column="1"
                                Grid.ColumnSpan="2"/>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded"
                         Value="false">
                  <Setter TargetName="ItemsHost"
                          Property="Visibility"
                          Value="Collapsed"/>
                </Trigger>
                <Trigger Property="HasItems"
                         Value="false">
                  <Setter TargetName="Expander"
                          Property="Visibility"
                          Value="Hidden"/>
                </Trigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="HasHeader"
                               Value="false"/>
                    <Condition Property="Width"
                               Value="Auto"/>
                  </MultiTrigger.Conditions>
                  <Setter TargetName="PART_Header"
                          Property="MinWidth"
                          Value="75"/>
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="HasHeader"
                               Value="false"/>
                    <Condition Property="Height"
                               Value="Auto"/>
                  </MultiTrigger.Conditions>
                  <Setter TargetName="PART_Header"
                          Property="MinHeight"
                          Value="19"/>
                </MultiTrigger>
                <Trigger Property="IsSelected"
                         Value="true">
                  <Setter TargetName="Bd"
                          Property="Background"
                          Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                  <Setter Property="Foreground"
                          Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="IsSelected"
                               Value="true"/>
                    <Condition Property="IsSelectionActive"
                               Value="false"/>
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Bd"
                          Property="Background"
                          Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                  <Setter Property="Foreground"
                          Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled"
                         Value="false">
                  <Setter Property="Foreground"
                          Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      
      <Style x:Key="{x:Type TreeView}"
           TargetType="{x:Type TreeView}">

        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TreeView}">
              <Border Name="Bd"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      >
                <ScrollViewer 
                              Focusable="FALSE"
                              CanContentScroll="false"
                              HorizontalScrollBarVisibility="Hidden" 
                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                              Padding="{TemplateBinding Padding}">
                  <ScrollViewer.Background>
                    <LinearGradientBrush>
                      <LinearGradientBrush.StartPoint>
                        <Point X="0" Y="0"/>
                      </LinearGradientBrush.StartPoint>
                      <LinearGradientBrush.EndPoint>
                        <Point X="1" Y="1"/>
                      </LinearGradientBrush.EndPoint>
                      <LinearGradientBrush.GradientStops>
                        <GradientStop Color="red" Offset="0"/>
                        <GradientStop Color="black" Offset="1.15"/>
                      </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </ScrollViewer.Background>
                  <ItemsPresenter/>
                </ScrollViewer>
              </Border>
              <ControlTemplate.Triggers>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="HasItems"
                               Value="false"/>
                    <Condition Property="Width"
                               Value="Auto"/>
                  </MultiTrigger.Conditions>
                  <Setter Property="MinWidth"
                          Value="120"/>
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="HasItems"
                               Value="false"/>
                    <Condition Property="Height"
                               Value="Auto"/>
                  </MultiTrigger.Conditions>
                  <Setter Property="MinHeight"
                          Value="95"/>
                </MultiTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

    
    </StackPanel.Resources>
    
    
    <WrapPanel>
      <Rectangle Stroke="black" Fill="orangered" Height="12" Width="12"/>
      <Label>Critical</Label>
      <Rectangle Stroke="black" Fill="Orange" Height="12" Width="12"/>
      <Label>Major</Label>
      <Rectangle Stroke="black" Fill="Yellow" Height="12" Width="12"/>
      <Label>Minor</Label>
      <Button Name="ZipCode" Click="ButtonClick">
        <Button.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="red" Offset="0" />
                  <GradientStop Color="yellow" Offset="1" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
        </Button.Background>       
       ZipCode</Button>
    </WrapPanel>
    <Label Name="Location" FontWeight="bold"/>
    <ScrollViewer HorizontalScrollBarVisibility="auto" VerticalScrollBarVisibility="hidden" Name="sv">
      <TreeView Name="tv"   BorderThickness="0" SizeChanged="tv_SizeChanged">


      </TreeView>
    </ScrollViewer>
  </StackPanel>
</Window>
