<html DIR="LTR"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" /><META NAME="save" CONTENT="history" /><title>Creating a Package with a Digital Signature Sample</title><META NAME="Description" CONTENT="This sample shows how to write a XML Paper Specification (XPS) package with digitally signed content, and then read and validate the signed elements. In executing the PackageDigitalSignature sample, given elements in the provided &quot;Content&quot; and &quot;Resources&quot; folders are output and then digitally signed within a new XPS myPackage.package file. To sign the content elements, your system must have an X.509 certificate[Glossary Lookup Failure: x_509_certificate#6bd2a8d4-5d95-4eec-ac48-f84c7533b276] manager installed such as for use with a SmartCard (the program will display an error message and exit if a certificate manager is not installed and running). The output myPackage.package file is in fact a ZIP file that contains the package's content, resource, and relationship elements that have been digitally signed. Since the myPackage.package file is deleted and recreated each time the sample is executed, reference copies of myPackage.package are provided in the files myPackage-sample.package and myPackage-sample.package.zip (a duplicate of myPackage-sample.package with a .zip extension to make it easy to open and explore). In a second operation the digital signatures of the files with myPackage.package are validated, and the contents from the file are extracted into a &quot;Target&quot; folder with &quot;Content&quot; and &quot;Resources&quot; sub-folders containing the original content and resource data files."></META><META NAME="MS.LOCALE" CONTENT="en-us" /><style>
body
{font-family:Verdana;font-size:medium;}
div#mainSection, div#header
{font-size:70%;width: 100%;}
div#mainBody
{font-size:90%;}
div#mainSection div table
{font-size: 100%;text-align: left;}
span#nsrTitle
{color:#003399;font-size:90%;font-weight:600;}
div#header
{background-color:#D4DFFF;}
.heading
{font-size:120%;color:#003399;}
.subHeading
{font-size:100%;margin-bottom:4;}
li
{margin-top:-2;margin-bottom:3;}
p
{margin-top:10;margin-bottom:5;}
div.tableSection p
{margin-top:1;margin-bottom:4;}	
div#mainSection table th
{background-color:#EFEFF7;color:#000066;text-align:left;}
div#mainSection table td
{background-color:#F7F7FF;}
div#mainSection table
{margin-top:5px;margin-bottom: px;}
			</style></head><body><div id="header"><table width="100%" id="topTable"><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Creating a Package with a Digital Signature Sample</span></td></tr></table></div><div id="mainSection"><div id="mainBody"><br /><font color="DarkGray">[This readme is a partial copy of the sample's topic in the SDK documentation.]</font><br /><p>This sample shows how to write a XML Paper Specification (XPS) package with digitally signed content, and then read and validate the signed elements.     In executing the PackageDigitalSignature sample, given elements in the provided "Content" and "Resources" folders are output and then digitally signed within a new XPS myPackage.package file.  To sign the content elements, your system must have an X.509 certificate[<B style="color:red"><I>Glossary Lookup Failure: x_509_certificate#6bd2a8d4-5d95-4eec-ac48-f84c7533b276</I></B>] manager installed such as for use with a SmartCard (the program will display an error message and exit if a certificate manager is not installed and running).  The output myPackage.package file is in fact a ZIP file that contains the package's content, resource, and relationship elements that have been digitally signed.  Since the myPackage.package file is deleted and recreated each time the sample is executed, reference copies of myPackage.package are provided in the files myPackage-sample.package and myPackage-sample.package.zip (a duplicate of myPackage-sample.package with a .zip extension to make it easy to open and explore).  In a second operation the digital signatures of the files with myPackage.package are validated, and the contents from the file are extracted into a "Target" folder with  "Content" and "Resources" sub-folders containing the original content and resource data files.</p><p>This sample demonstrates a specific feature of the Windows Presentation Foundation (WPF) and, consequently, does not follow application development best practices. For comprehensive coverage of Windows Presentation Foundation (WPF) and Microsoft .NET Framework application development best practices, refer to the following as appropriate:</p><p>Accessibility - Accessibility Best Practices</p><p>Security - WPF Security</p><p>Localization - WPF Globalization and Localization Overview</p><a name="sample_build_instructions"></a><h1 class="heading">Building the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><p></p><ul><li><p>
            Install the Windows Software Development Kit (SDK) and open its build environment command window. On the Start menu, point to All Programs, Microsoft Windows SDK, and then click CMD Shell.
          </p></li><li><p>
            Download the sample, usually from the software development kit (SDK) documentation, to your hard disk drive.
          </p></li><li><p>
            To build the sample from the build environment command window, go to the source directory of the sample. At the command prompt, type MSBUILD.
          </p></li><li><p>
            To build the sample in Microsoft Visual Studio 2005, load the sample solution or project file and then press CTRL+SHIFT+B.
          </p></li></ul></div><a name="sample_run_instructions"></a><h1 class="heading">Running the Sample</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><ul><li><p>
            To run the compiled sample from the build environment command window, execute the .exe file in the Bin\Debug or Bin\Release folder contained under the sample source code folder.
          </p></li><li><p>
            To run the compiled sample with debugging in Visual Studio 2005, press F5.
          </p></li></ul></div><h1 class="heading">See Also</h1><div id="seeAlsoSection" class="seeAlsoNoToggleSection"><h4 class="subHeading">Tasks</h4><a href="449a67e0-52ee-46b7-a6ea-be81a557ec94.htm">Reading a Package Sample</a><br /><a href="339dc5e1-da68-4683-a5ef-e0b0e99f3ad8.htm">Writing a Package Sample</a><br /><h4 class="subHeading">Other Resources</h4>Documents in Windows Presentation Foundation<br />isXPS Conformance Tool<br /><br /></div><UscDataIsland></UscDataIsland></div></div></body></html>