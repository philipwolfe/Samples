<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      Title="Animate Path"
      x:Class="AnimatePath.Page1"
      Loaded="checkLang">


      <TabControl MinHeight="500" MaxHeight="700" MinWidth="400">
        <TabItem Style="{StaticResource TabStyle}" Header="Animate Path Sample" IsSelected="true">
          <StackPanel>
            <TextBlock Style="{StaticResource HeaderStyle}">Animate Path Sample</TextBlock>

            <TextBlock Style="{StaticResource mainContentStyle}">This example moves a shape along a path.</TextBlock>
            <TextBlock Style="{StaticResource mainContentStyle}">The preview window renders code from the Markup tab. The C# standalone code is provided for reference purposes.</TextBlock>


          </StackPanel>
        </TabItem>

        <TabItem Name="xaml" Style="{StaticResource TabStyle}" Header="XAML">
                <ScrollViewer HorizontalScrollBarVisibility="Visible">

          <TextBlock Name="xamlCheck">
          <TextBox Style="{StaticResource CodeSnippetParagraph}" xml:space="preserve"><![CDATA[<Canvas Height="400" Width="400" Margin="20">
 
  <Path Name="myPathShape"
    Fill="Blue" Stroke="Black" StrokeThickness="5">
    <Path.Data>
    
      <!-- Draw an Ellipse. -->
      <EllipseGeometry Center="200,200" RadiusX="25" RadiusY="50" />
    </Path.Data>
      
    <Path.Triggers>
      <EventTrigger RoutedEvent="Path.Loaded">
        <BeginStoryboard>
          <Storyboard>
            
            <!-- Animate the Center property of the EllipseGeometry. -->
            <PointAnimation Storyboard.TargetName="myPathShape"
              Storyboard.TargetProperty="(Path.Data).(EllipseGeometry.Center)"
              From="200,200" To="50,50" Duration="0:0:5" 
              AutoReverse="true" RepeatBehavior="Forever"/>              
          </Storyboard>
        </BeginStoryboard>
      </EventTrigger>
    </Path.Triggers>     
  </Path>
</Canvas>]]>             
            </TextBox>
          </TextBlock>
        </ScrollViewer>
        </TabItem>
        <TabItem Name="xamlcsharp" Style="{StaticResource TabStyle}" Header="XAML + C#">
          <TabControl TabStripPlacement="Right">
            <TabItem Name="xcsharpCheck" Style="{StaticResource TabStyle2}" Header="XAML"></TabItem>
            <TabItem Style="{StaticResource TabStyle2}" Header="C#"></TabItem>
          </TabControl>
        </TabItem>

        <TabItem Name="xamlvb" Style="{StaticResource TabStyle}" Header="XAML + Visual Basic.NET">
          <TabControl TabStripPlacement="Right">
            <TabItem Name="xvbCheck" Style="{StaticResource TabStyle2}" Header="XAML"></TabItem>
            <TabItem Style="{StaticResource TabStyle2}" Header="VB.NET"></TabItem>
          </TabControl>
        </TabItem>
        <TabItem Name="csharp" Style="{StaticResource TabStyle}" Header="C#">
                <ScrollViewer HorizontalScrollBarVisibility="Visible">
        
          <TextBlock Name="csharpCheck">
          <TextBox Style="{StaticResource CodeSnippetParagraph}" xml:space="preserve">

/*

This sample demonstrates how to animate the position of a Geometry using
a PointAnimation.

*/


using System;
using System.Windows;
using System.Windows.Navigation;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Shapes;
using System.Windows.Controls;

namespace Microsoft.Samples.Animation.AnimatePathShapeSample
{

    // Displays the sample.
    public class app : Application
    {
        

        protected override void OnStartup (StartupEventArgs e)
        {
            base.OnStartup(e);
            CreateAndShowMainWindow();
        }


        private void CreateAndShowMainWindow ()
        {
            // Create the application's main window.
            NavigationWindow myWindow = new NavigationWindow();
            
            // Display the sample
            Page myContent = new PathElementAnimationExample();
            myWindow.Navigate(myContent);
            MainWindow = myWindow;
            myWindow.Show();
        }
    }
    
    // Create the demonstration.
    public class PathElementAnimationExample : Page {
        
        public PathElementAnimationExample()
        {
            WindowTitle = "Path Shape Animation Example";
            
            Canvas myCanvas = new Canvas();
            myCanvas.Width = 400;
            myCanvas.Height = 400;
            myCanvas.Margin = new Thickness(20);
            
            // Create a System.Windows.Shapes.Path to contain
            // the geometry.
            System.Windows.Shapes.Path myPath =
                new System.Windows.Shapes.Path();
            myPath.Name = "myPathShape";
            this.RegisterName(myPath.Name, myPath);
            myPath.Fill = System.Windows.Media.Brushes.Blue;
            myPath.Stroke = System.Windows.Media.Brushes.Black;
            myPath.StrokeThickness = 5;
            
            // Create a Geometry.
            System.Windows.Media.EllipseGeometry myEllipseGeometry =
                new System.Windows.Media.EllipseGeometry();
            myEllipseGeometry.Center = new System.Windows.Point(200, 200);
            myEllipseGeometry.RadiusX = 25;
            myEllipseGeometry.RadiusY = 50;
            myPath.Data = myEllipseGeometry;
            myCanvas.Children.Add(myPath);
            this.Content = myCanvas;
            
            // Create a PointAnimation to animate the center of the Ellipse.
            PointAnimation myPointAnimation = new PointAnimation();
            myPointAnimation.From = new System.Windows.Point(200, 200);
            myPointAnimation.To = new System.Windows.Point(50, 50);
            myPointAnimation.Duration = new Duration(TimeSpan.FromMilliseconds(5000));
            myPointAnimation.AutoReverse = true;
            myPointAnimation.RepeatBehavior = RepeatBehavior.Forever;
            
            Storyboard.SetTargetName(myPointAnimation, "myPathShape");
            PropertyPath myPropertyPath = new PropertyPath( 
                    "(0).(1)",
                    new DependencyProperty[] { Path.DataProperty, EllipseGeometry.CenterProperty });
            
            Storyboard.SetTargetProperty(myPointAnimation, myPropertyPath);
            Storyboard myStoryboard = new Storyboard();
            myStoryboard.Children.Add(myPointAnimation);
            BeginStoryboard myBeginStoryboard = new BeginStoryboard();
            myBeginStoryboard.Storyboard = myStoryboard;

            
            EventTrigger myEventTrigger = new EventTrigger();
            myEventTrigger.RoutedEvent = Path.LoadedEvent;
            myEventTrigger.Actions.Add(myBeginStoryboard);
            myPath.Triggers.Add(myEventTrigger);
        }
    }

    // Starts the application.
    internal sealed class EntryClass
    {
        [System.STAThread()]
        private static void Main ()
        {
            
            app app = new app ();
            app.Run ();
        }
    }
}
            </TextBox>
            
          </TextBlock>
        </ScrollViewer>
        </TabItem>
        <TabItem Name="vb" Style="{StaticResource TabStyle}" Header="Visual Basic.NET"></TabItem>

        <TabItem Name="managedcpp" Style="{StaticResource TabStyle}" Header="Managed C++"></TabItem>
        <TabItem Style="{StaticResource TabStyle}" Header="Preview Sample">
<Canvas>


<Canvas Height="400" Width="400" Margin="20">
 
  <Path Name="myPathShape"
    Fill="Blue" Stroke="Black" StrokeThickness="5">
    <Path.Data>
    
      <!-- Draw an Ellipse. -->
      <EllipseGeometry Center="200,200" RadiusX="25" RadiusY="50" />
    </Path.Data>
      
    <Path.Triggers>
      <EventTrigger RoutedEvent="Path.Loaded">
        <BeginStoryboard>
          <Storyboard>
            
            <!-- Animate the Center property of the EllipseGeometry. -->
            <PointAnimation Storyboard.TargetName="myPathShape"
              Storyboard.TargetProperty="(Path.Data).(EllipseGeometry.Center)"
              From="200,200" To="50,50" Duration="0:0:5" 
              AutoReverse="true" RepeatBehavior="Forever"/>              
          </Storyboard>
        </BeginStoryboard>
      </EventTrigger>
    </Path.Triggers>     
  </Path>
</Canvas>
</Canvas>

        </TabItem>
      </TabControl>

</Page>