<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      Title="Control Properties"
      x:Class="ControlProperties.Page1"
      Loaded="checkLang">
<TabControl MinHeight="500" MaxHeight="700" MinWidth="400">
        <TabItem Style="{StaticResource TabStyle}" Header="Control Properties Sample" IsSelected="true">
          <StackPanel>
            <TextBlock Style="{StaticResource HeaderStyle}">Control Properties Sample</TextBlock>

            <TextBlock Style="{StaticResource mainContentStyle}">This example demonstrates how to retrieve and set control element properties.</TextBlock>

          </StackPanel>
        </TabItem>

        <TabItem Name="xaml" Style="{StaticResource TabStyle}" Header="XAML">

          

        </TabItem>
        <TabItem Name="xamlcsharp" Style="{StaticResource TabStyle}" Header="XAML + C#">
          <TabControl TabStripPlacement="Right">
            <TabItem Name="xcsharpCheck" Style="{StaticResource TabStyle2}" Header="XAML">
                <ScrollViewer HorizontalScrollBarVisibility="Visible">
                
              <TextBox Style="{StaticResource CodeSnippetParagraph}" xml:space="preserve">
&lt;StackPanel
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="ControlProps.Pane1"
    >

  &lt;TextBlock FontSize = "16.0">Control Properties&lt;/TextBlock>

  &lt;TabControl>
    &lt;TabItem Header="Background" IsSelected="true">
      &lt;Button Name="btn" Background="Red" Click="ChangeBackground">Background&lt;/Button>
    &lt;/TabItem>
    &lt;TabItem Header="Foreground">
      &lt;Button Name="btn1" Foreground="Black" Click="ChangeForeground">Foreground&lt;/Button>
    &lt;/TabItem>
    &lt;TabItem Header="FontFamily">
      &lt;Button Name="btn2" FontFamily="Arial" Click="ChangeFontFamily">FontFamily&lt;/Button>
    &lt;/TabItem>
    &lt;TabItem Header="FontSize">
      &lt;Button Name="btn3" FontSize="10.0" Click="ChangeFontSize">FontSize&lt;/Button>
    &lt;/TabItem>
    &lt;TabItem Header="FontStyle">
      &lt;Button Name="btn4" FontStyle="Normal" Click="ChangeFontStyle">FontStyle&lt;/Button>
    &lt;/TabItem>
    &lt;TabItem Header="FontWeight">
      &lt;Button Name="btn5" FontWeight="Normal" Click="ChangeFontWeight">FontWeight&lt;/Button>
    &lt;/TabItem>
    &lt;TabItem Header="BorderBrush">
      &lt;Button Name="btn6" BorderBrush="Red" Click="ChangeBorderBrush">BorderBrush&lt;/Button>
    &lt;/TabItem>

  &lt;/TabControl>

&lt;/StackPanel>
                
                
              </TextBox>
                    </ScrollViewer>
            </TabItem>
            <TabItem Style="{StaticResource TabStyle2}" Header="C#">
                <ScrollViewer HorizontalScrollBarVisibility="Visible">
                
              <TextBox Style="{StaticResource CodeSnippetParagraph}" xml:space="preserve">
//This is a list of commonly used namespaces for a pane.
using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Documents;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Data;
using System.Windows.Media;

namespace ControlProps
{
  /// &lt;summary>
  /// Interaction logic for Pane1.xaml
  /// &lt;/summary>


  public partial class Pane1 : StackPanel
  {

    string str;
    FontFamily ffamily;
    Double fsize;

    // To use PaneLoaded put Loaded="PaneLoaded" in root element of .xaml file.
    // private void PaneLoaded(object sender, EventArgs e) {}
    // Sample event handler:  
    void ChangeBackground(object sender, RoutedEventArgs e)
    {
      if (btn.Background == Brushes.Red)
      {
        btn.Background = new LinearGradientBrush(Colors.LightBlue, Colors.SlateBlue, 90);
        btn.Content = "Background";
      }
      else
      {
        btn.Background = Brushes.Red;
        btn.Content = "Control background changes from red to a blue gradient.";
      }
    }
    void ChangeForeground(object sender, RoutedEventArgs e)
    {
      if (btn1.Foreground == Brushes.Green)
      {
        btn1.Foreground = Brushes.Black;
        btn1.Content = "Foreground";
      }
      else
      {
        btn1.Foreground = Brushes.Green;
        btn1.Content = "Control foreground(text) changes from black to green.";
      }
    }
    void ChangeFontFamily(object sender, RoutedEventArgs e)
    {
      ffamily = btn2.FontFamily;
      str = ffamily.ToString();
      if (str == ("Arial Black"))
      {
        btn2.FontFamily = new FontFamily("Arial");
        btn2.Content = "FontFamily";
      }
      else
      {
        btn2.FontFamily = new FontFamily("Arial Black");
        btn2.Content = "Control font family changes from Arial to Arial Black.";

      }
    }
    void ChangeFontSize(object sender, RoutedEventArgs e)
    {
      fsize = btn3.FontSize;
      if (fsize == 16.0)
      {
        btn3.FontSize = 10.0;
        btn3.Content = "FontSize";
      }
      else
      {
        btn3.FontSize = 16.0;
        btn3.Content = "Control font size changes from 10 to 16.";
      }
    }
    void ChangeFontStyle(object sender, RoutedEventArgs e)
    {
      if (btn4.FontStyle == FontStyles.Italic)
      {
        btn4.FontStyle = FontStyles.Normal;
        btn4.Content = "FontStyle";
      }
      else
      {
        btn4.FontStyle = FontStyles.Italic;
        btn4.Content = "Control font style changes from Normal to Italic.";
      }
    }
    void ChangeFontWeight(object sender, RoutedEventArgs e)
    {
      if (btn5.FontWeight == FontWeights.Bold)
      {
        btn5.FontWeight = FontWeights.Normal;
        btn5.Content = "FontWeight";
      }
      else
      {
        btn5.FontWeight = FontWeights.Bold;
        btn5.Content = "Control font weight changes from Normal to Bold.";
      }
    }
    void ChangeBorderBrush(object sender, RoutedEventArgs e)
    {
      str = ((btn6.BorderBrush).ToString());
      if (btn6.BorderBrush == Brushes.Red)
      {
        btn6.BorderBrush = Brushes.Black;
        btn6.Content = "BorderBrush";

      }
      else
      {
        btn6.BorderBrush = Brushes.Red;
        btn6.Content = "Control border brush changes from red to black.";
      }
    }


  }
}                
                
              </TextBox>
                    </ScrollViewer>
            </TabItem>
          </TabControl>
        </TabItem>

        <TabItem Name="xamlvb" Style="{StaticResource TabStyle}" Header="XAML + Visual Basic.NET">
          <TabControl TabStripPlacement="Right">
            <TabItem Name="xvbCheck" Style="{StaticResource TabStyle2}" Header="XAML"></TabItem>
            <TabItem Style="{StaticResource TabStyle2}" Header="VB.NET"></TabItem>
          </TabControl>
        </TabItem>
    
        <TabItem Name="csharp" Style="{StaticResource TabStyle}" Header="C#"></TabItem>
    
        <TabItem Name="vb" Style="{StaticResource TabStyle}" Header="Visual Basic.NET"></TabItem>

        <TabItem Name="managedcpp" Style="{StaticResource TabStyle}" Header="Managed C++"></TabItem>
    
        <TabItem Style="{StaticResource TabStyle}" Header="Preview Sample">
<StackPanel>
    
    <TextBlock FontSize = "16.0">Control Properties</TextBlock>
   
    <TabControl>
    <TabItem Header="Background" IsSelected="true"><Button Name="btn" Background="Red" Click="ChangeBackground">Background</Button>
    </TabItem>
    <TabItem Header="Foreground"><Button Name="btn1" Foreground="Black" Click="ChangeForeground">Foreground</Button>
    </TabItem>
    <TabItem Header="FontFamily"><Button Name="btn2" FontFamily="Arial" Click="ChangeFontFamily">FontFamily</Button></TabItem>
    <TabItem Header="FontSize"><Button Name="btn3" FontSize="10.0" Click="ChangeFontSize">FontSize</Button></TabItem>
    <TabItem Header="FontStyle"><Button Name="btn4" FontStyle="Normal" Click="ChangeFontStyle">FontStyle</Button></TabItem>
    <TabItem Header="FontWeight"><Button Name="btn5" FontWeight="Normal" Click="ChangeFontWeight">FontWeight</Button></TabItem>
    <TabItem Header="BorderBrush"><Button Name="btn6" BorderBrush="Red" Click="ChangeBorderBrush">BorderBrush</Button></TabItem>
    
    </TabControl>
 
</StackPanel>
        </TabItem>
      </TabControl>

</Page>