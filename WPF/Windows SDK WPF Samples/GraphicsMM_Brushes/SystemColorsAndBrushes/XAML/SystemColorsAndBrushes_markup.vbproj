<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<AssemblyName>SystemColorsAndBrushes_markup</AssemblyName>
		<TargetType>winexe</TargetType>
		<Configuration>Release</Configuration>
		<ApplicationIcon>App.ico</ApplicationIcon>
		<ProductVersion>8.0.31113</ProductVersion>
		<SchemaVersion>2.0</SchemaVersion>
		<RootNamespace>SystemColorsAndBrushes_markup</RootNamespace>
		<ProjectGuid>{618013F4-1CF9-4C78-BE12-BE392C410892}</ProjectGuid>
		<OutputPath>bin\$(Configuration)\</OutputPath>
	</PropertyGroup>
	<Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets"/>
	<Import Project="$(MSBuildBinPath)\Microsoft.WinFX.targets"/>
	<ItemGroup>
		<Reference Include="System"/>
		<Reference Include="System.xml"/>
		<Reference Include="System.Data"/>
		<Reference Include="WindowsBase"/>
		<Reference Include="UIAutomationProvider"/>
		<Reference Include="PresentationCore"/>
		<Reference Include="PresentationFramework"/>
		<Reference Include="UIAutomationTypes"/>
	</ItemGroup>
	<ItemGroup>
		<ApplicationDefinition Include="app.xaml"/>
		<Page Include="Window1.xaml"/>
	</ItemGroup>
	<ItemGroup>
		<Resource Include="App.ico"/>
	</ItemGroup>
</Project>
<!-- 
    This project gets built by MSBuild on the commmand line.
    Visual Studio "Whidbey" can also compile a project using only this data.

    The build steps of a project are defined in the .target file referenced in the <Import>.
    You can modify the steps involved in build.

    You can also "execute" other targets besides the defaulttarget of build.
    From a command prompt: msbuild myproj.csproj /t:TARGETNAME
    Examples of TARGETNAME include: Build, Clean, CleanBuild, Run
-->
