<?xml version="1.0" encoding="utf-8" ?>
<!--  Copyright (c) Microsoft Corporation.  All Rights Reserved. -->
<configuration>
  <system.serviceModel>
    <bindings>
      <!-- Since we're customizing the MSMQ Transport, we need a custom binding -->
      <customBinding>
        <binding name="Custom_MSMQ">
          <binaryMessageEncoding />
          <!-- Set some very unrealistic values for MSMQ.  THe point is to invoke failures so that we can see how the Routing Service handles failure -->
          <msmqTransport maxRetryCycles="0" receiveErrorHandling="Reject" receiveRetryCount="0" retryCycleDelay="1" deadLetterQueue="System">
            <msmqTransportSecurity msmqAuthenticationMode="None" msmqProtectionLevel="None"/>
          </msmqTransport>
        </binding>
      </customBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="behaviorConfig">
          <serviceDebug includeExceptionDetailInFaults="true" />
          <routing filterTableName="multicastTable" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service name="System.ServiceModel.Routing.RoutingService" behaviorConfiguration="behaviorConfig">
        <!--Set up the inbound endpoints for the Routing Service-->
        <!-- Create an endpoint pointed at the "inbound queue" for the Routing Service-->
        <endpoint address="net.msmq://localhost/private/inQ"
                  binding="customBinding"
                  bindingConfiguration="Custom_MSMQ"
                  name="netMsmqServiceEndpoint"
                  contract="System.ServiceModel.Routing.ISimplexDatagramRouter" />

      </service>
    </services>
    <client>
      <!--Configure the Routing Service to send messages to the different service and logging queues -->
      <endpoint address ="net.msmq://localhost/private/primaryServiceQueue" binding="customBinding"
          bindingConfiguration="Custom_MSMQ" contract="*" name="primaryServiceQueue"/>

      <endpoint address ="net.msmq://localhost/private/backupServiceQueue" binding="customBinding"
          bindingConfiguration="Custom_MSMQ" contract="*" name="backupServiceQueue"/>

      <endpoint address ="net.msmq://localhost/private/primaryLoggingQueue" binding="customBinding"
          bindingConfiguration="Custom_MSMQ" contract="*" name="primaryLoggingQueue"/>

      <endpoint address ="net.msmq://localhost/private/backupLoggingQueue" binding="customBinding"
          bindingConfiguration="Custom_MSMQ" contract="*" name="backupLoggingQueue"/>

    </client>
    <routing>
      <filters>
        <!-- Create a match all filter -->
        <filter name="MatchAllMessageFilter1" filterType="MatchAll" />
      </filters>
      <filterTables>
        <filterTable name="multicastTable">
          <!-- Add two entries to the filter table so that when a message comes in it is multicasted to both lists of queues -->
          <!-- In order for the transaction to complete, the Routing Service will need to be able to deliver the message to one service -->
          <!-- and one logging endpoint -->
            <add filterName="MatchAllMessageFilter1" endpointName="primaryServiceQueue" backupList="backupServiceEndpoints"/>
            <add filterName="MatchAllMessageFilter1" endpointName="primaryLoggingQueue" backupList="backupLoggingEndpoints"/>
        </filterTable>
      </filterTables>
      <!-- Define the backup service and logging endpoint lists -->
      <backupLists>
        <backupList name="backupServiceEndpoints">
          <add endpointName="backupServiceQueue" />
        </backupList>
        <backupList name="backupLoggingEndpoints">
          <add endpointName="backupLoggingQueue" />
        </backupList>
      </backupLists>
    </routing>
  </system.serviceModel>  
</configuration>
