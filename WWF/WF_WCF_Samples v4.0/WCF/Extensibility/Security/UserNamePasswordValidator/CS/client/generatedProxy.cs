//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.12
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Microsoft.Samples.UserNamePasswordValidator
{


    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://Microsoft.Samples.UserNamePasswordValidator")]
    public interface ICalculator
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://Microsoft.Samples.UserNamePasswordValidator/ICalculator/Add", ReplyAction = "http://Microsoft.Samples.UserNamePasswordValidator/ICalculator/AddResponse")]
        double Add(double n1, double n2);

        [System.ServiceModel.OperationContractAttribute(Action = "http://Microsoft.Samples.UserNamePasswordValidator/ICalculator/Subtract", ReplyAction = "http://Microsoft.Samples.UserNamePasswordValidator/ICalculator/SubtractResponse")]
        double Subtract(double n1, double n2);

        [System.ServiceModel.OperationContractAttribute(Action = "http://Microsoft.Samples.UserNamePasswordValidator/ICalculator/Multiply", ReplyAction = "http://Microsoft.Samples.UserNamePasswordValidator/ICalculator/MultiplyResponse")]
        double Multiply(double n1, double n2);

        [System.ServiceModel.OperationContractAttribute(Action = "http://Microsoft.Samples.UserNamePasswordValidator/ICalculator/Divide", ReplyAction = "http://Microsoft.Samples.UserNamePasswordValidator/ICalculator/DivideResponse")]
        double Divide(double n1, double n2);
    }

    public interface ICalculatorChannel : ICalculator, System.ServiceModel.IClientChannel
    {
    }

    public partial class CalculatorProxy : System.ServiceModel.ClientBase<ICalculator>, ICalculator
    {

        public CalculatorProxy()
        {
        }

        public CalculatorProxy(string endpointConfigurationName)
            :
                base(endpointConfigurationName)
        {
        }

        public CalculatorProxy(string endpointConfigurationName, string remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public CalculatorProxy(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public CalculatorProxy(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress)
            :
                base(binding, remoteAddress)
        {
        }

        public double Add(double n1, double n2)
        {
            return base.Channel.Add(n1, n2);
        }

        public double Subtract(double n1, double n2)
        {
            return base.Channel.Subtract(n1, n2);
        }

        public double Multiply(double n1, double n2)
        {
            return base.Channel.Multiply(n1, n2);
        }

        public double Divide(double n1, double n2)
        {
            return base.Channel.Divide(n1, n2);
        }
    }
}

