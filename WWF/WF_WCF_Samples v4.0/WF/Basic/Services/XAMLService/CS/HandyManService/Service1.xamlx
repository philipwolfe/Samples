<WorkflowService ConfigurationName="Service1" Name="Service1" mc:Ignorable="sad1" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/servicemodel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities" xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:sad1="http://schemas.microsoft.com/netfx/2009/xaml/activities/design" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <p:Sequence DisplayName="Handy Man Service" sad:XamlDebuggerXmlReader.FileName="E:\dd\CDFDev10_5\src\ndp\cdf\sdk\NetFx40\public\WF\Basic\Services\XAMLService\CS\HandyManService\Service1.xamlx" sad1:VirtualizedContainerService.HintSize="1472.01333333333,2081.32135416667">
      <sad1:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, s:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sad1:WorkflowViewStateService.ViewState>
      <p:Parallel sad1:VirtualizedContainerService.HintSize="1426.01333333333,1943.32135416667">
        <p:Sequence DisplayName="Starting Problems" sad1:VirtualizedContainerService.HintSize="653.006666666667,1885.32135416667">
          <sad1:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, s:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sad1:WorkflowViewStateService.ViewState>
          <p:Sequence sad1:VirtualizedContainerService.HintSize="607.006666666667,486.553333333333">
            <p:Sequence.Variables>
              <p:Variable x:TypeArguments="x:String" Default="Try turning on the lights with key in on position. Do lights come on (Y/N)?" Name="CarMsg1" />
              <p:Variable x:TypeArguments="x:String" Default="Check the connectors on the battery and make sure they are not loose. Are the battery connections good (Y/N)?" Name="CarMsg2" />
              <p:Variable x:TypeArguments="x:String" Default="Diagnosis Complete: Unable to diagnose problem, please call a technician." Name="CarMsg3" />
              <p:Variable x:TypeArguments="x:String" Default="Diagnosis Complete: Fix the connections to the battery and try again." Name="CarMsg4" />
            </p:Sequence.Variables>
            <sad1:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, s:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sad1:WorkflowViewStateService.ViewState>
            <p:Sequence sad1:VirtualizedContainerService.HintSize="303,348.553333333333">
              <sad1:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, s:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sad1:WorkflowViewStateService.ViewState>
              <Receive x:Name="__ReferenceID0" CanCreateInstance="True" sad1:VirtualizedContainerService.HintSize="257,85.2766666666667" OperationName="DiagnoseStart" ServiceContractName="IService">
                <x:Null />
              </Receive>
              <SendReply Request="{x:Reference __ReferenceID0}" DisplayName="SendReplyToReceive" sad1:VirtualizedContainerService.HintSize="257,85.2766666666667">
                <SendMessageContent>
                  <p:InArgument x:TypeArguments="x:String">[CarMsg1]</p:InArgument>
                </SendMessageContent>
              </SendReply>
            </p:Sequence>
          </p:Sequence>
          <p:Sequence sad1:VirtualizedContainerService.HintSize="607.006666666667,1070.21401041667">
            <p:Sequence.Variables>
              <p:Variable x:TypeArguments="x:Boolean" Name="IsCharged" />
              <p:Variable x:TypeArguments="x:String" Name="Reply" />
              <p:Variable x:TypeArguments="x:Boolean" Name="IsConnectionGood" />
            </p:Sequence.Variables>
            <sad1:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, s:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sad1:WorkflowViewStateService.ViewState>
            <Receive x:Name="__ReferenceID1" sad1:VirtualizedContainerService.HintSize="561.006666666667,85.2766666666667" OperationName="NextStep" ServiceContractName="IService">
              <ReceiveMessageContent>
                <p:OutArgument x:TypeArguments="x:Boolean">[IsCharged]</p:OutArgument>
              </ReceiveMessageContent>
            </Receive>
            <p:If Condition="[IsCharged = True]" sad1:VirtualizedContainerService.HintSize="561.006666666667,51.2766666666667">
              <sad1:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, s:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sad1:WorkflowViewStateService.ViewState>
              <p:If.Then>
                <p:Assign sad1:VirtualizedContainerService.HintSize="244.003333333333,100">
                  <p:Assign.To>
                    <p:OutArgument x:TypeArguments="x:String">[Reply]</p:OutArgument>
                  </p:Assign.To>
                  <p:Assign.Value>
                    <p:InArgument x:TypeArguments="x:String">["Diagnosis complete: Unable to determine problem, call a qualified mechanic."]</p:InArgument>
                  </p:Assign.Value>
                </p:Assign>
              </p:If.Then>
              <p:If.Else>
                <p:Assign sad1:VirtualizedContainerService.HintSize="244.003333333333,100">
                  <p:Assign.To>
                    <p:OutArgument x:TypeArguments="x:String">[Reply]</p:OutArgument>
                  </p:Assign.To>
                  <p:Assign.Value>
                    <p:InArgument x:TypeArguments="x:String">["Make sure the battery connectors are not loose. Are the battery connections tight? (Y/N)"]</p:InArgument>
                  </p:Assign.Value>
                </p:Assign>
              </p:If.Else>
            </p:If>
            <SendReply Request="{x:Reference __ReferenceID1}" DisplayName="SendReplyToReceive" sad1:VirtualizedContainerService.HintSize="561.006666666667,85.2766666666667">
              <SendMessageContent>
                <p:InArgument x:TypeArguments="x:String">[Reply]</p:InArgument>
              </SendMessageContent>
            </SendReply>
            <p:Sequence sad1:VirtualizedContainerService.HintSize="561.006666666667,590.384010416667">
              <sad1:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, s:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sad1:WorkflowViewStateService.ViewState>
              <Receive x:Name="__ReferenceID2" sad1:VirtualizedContainerService.HintSize="515.006666666667,85.2766666666667" OperationName="NextStep" ServiceContractName="IService">
                <ReceiveMessageContent>
                  <p:OutArgument x:TypeArguments="x:Boolean">[IsConnectionGood]</p:OutArgument>
                </ReceiveMessageContent>
              </Receive>
              <p:If Condition="[IsConnectionGood = True]" sad1:VirtualizedContainerService.HintSize="515.006666666667,201.830677083333">
                <p:If.Then>
                  <p:Assign sad1:VirtualizedContainerService.HintSize="244.003333333333,100">
                    <p:Assign.To>
                      <p:OutArgument x:TypeArguments="x:String">[Reply]</p:OutArgument>
                    </p:Assign.To>
                    <p:Assign.Value>
                      <p:InArgument x:TypeArguments="x:String">["Diagnosis Complete: The battery needs to be charged. Jump start the car and get the battery inspected."]</p:InArgument>
                    </p:Assign.Value>
                  </p:Assign>
                </p:If.Then>
                <p:If.Else>
                  <p:Assign sad1:VirtualizedContainerService.HintSize="244.003333333333,100">
                    <p:Assign.To>
                      <p:OutArgument x:TypeArguments="x:String">[Reply]</p:OutArgument>
                    </p:Assign.To>
                    <p:Assign.Value>
                      <p:InArgument x:TypeArguments="x:String">["Diagnosis Complete: Fix the battery connections and retry."]</p:InArgument>
                    </p:Assign.Value>
                  </p:Assign>
                </p:If.Else>
              </p:If>
              <SendReply Request="{x:Reference __ReferenceID2}" DisplayName="SendReplyToReceive" sad1:VirtualizedContainerService.HintSize="515.006666666667,85.2766666666667">
                <SendMessageContent>
                  <p:InArgument x:TypeArguments="x:String">[Reply]</p:InArgument>
                </SendMessageContent>
              </SendReply>
            </p:Sequence>
          </p:Sequence>
        </p:Sequence>
        <p:Sequence DisplayName="AC problems" sad1:VirtualizedContainerService.HintSize="607.006666666667,1885.32135416667">
          <sad1:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, s:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sad1:WorkflowViewStateService.ViewState>
          <p:Sequence sad1:VirtualizedContainerService.HintSize="561.006666666667,486.553333333333">
            <sad1:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, s:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sad1:WorkflowViewStateService.ViewState>
            <p:Sequence sad1:VirtualizedContainerService.HintSize="303,348.553333333333">
              <sad1:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, s:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sad1:WorkflowViewStateService.ViewState>
              <Receive x:Name="__ReferenceID3" CanCreateInstance="True" sad1:VirtualizedContainerService.HintSize="257,85.2766666666667" OperationName="DiagnoseAC" ServiceContractName="IService">
                <x:Null />
              </Receive>
              <SendReply Request="{x:Reference __ReferenceID3}" DisplayName="SendReplyToReceive" sad1:VirtualizedContainerService.HintSize="257,85.2766666666667">
                <SendMessageContent>
                  <p:InArgument x:TypeArguments="x:String">["Does the blower work when you turn on the AC? (Y/N)"]</p:InArgument>
                </SendMessageContent>
              </SendReply>
            </p:Sequence>
          </p:Sequence>
          <p:Sequence sad1:VirtualizedContainerService.HintSize="561.006666666667,590.384010416667">
            <p:Sequence.Variables>
              <p:Variable x:TypeArguments="x:Boolean" Name="IsBlowing" />
              <p:Variable x:TypeArguments="x:String" Name="Reply" />
            </p:Sequence.Variables>
            <sad1:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, s:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sad1:WorkflowViewStateService.ViewState>
            <Receive x:Name="__ReferenceID4" sad1:VirtualizedContainerService.HintSize="515.006666666667,85.2766666666667" OperationName="NextStep" ServiceContractName="IService">
              <ReceiveMessageContent>
                <p:OutArgument x:TypeArguments="x:Boolean">[IsBlowing]</p:OutArgument>
              </ReceiveMessageContent>
            </Receive>
            <p:If Condition="[IsBlowing = True]" sad1:VirtualizedContainerService.HintSize="515.006666666667,201.830677083333">
              <p:If.Then>
                <p:Assign sad1:VirtualizedContainerService.HintSize="244.003333333333,100">
                  <p:Assign.To>
                    <p:OutArgument x:TypeArguments="x:String">[Reply]</p:OutArgument>
                  </p:Assign.To>
                  <p:Assign.Value>
                    <p:InArgument x:TypeArguments="x:String">["Do you hear the compressor start when you swich on the AC? (Y/N)"]</p:InArgument>
                  </p:Assign.Value>
                </p:Assign>
              </p:If.Then>
              <p:If.Else>
                <p:Assign sad1:VirtualizedContainerService.HintSize="244.003333333333,100">
                  <p:Assign.To>
                    <p:OutArgument x:TypeArguments="x:String">[Reply]</p:OutArgument>
                  </p:Assign.To>
                  <p:Assign.Value>
                    <p:InArgument x:TypeArguments="x:String">["Diagnosis Complete: The fuse may have shorted, if so replace the fuse otherwise contact a qualified technician."]</p:InArgument>
                  </p:Assign.Value>
                </p:Assign>
              </p:If.Else>
            </p:If>
            <SendReply Request="{x:Reference __ReferenceID4}" DisplayName="SendReplyToReceive" sad1:VirtualizedContainerService.HintSize="515.006666666667,85.2766666666667">
              <SendMessageContent>
                <p:InArgument x:TypeArguments="x:String">[Reply]</p:InArgument>
              </SendMessageContent>
            </SendReply>
          </p:Sequence>
          <p:Sequence sad1:VirtualizedContainerService.HintSize="561.006666666667,590.384010416667">
            <p:Sequence.Variables>
              <p:Variable x:TypeArguments="x:Boolean" Name="IsCompressing" />
              <p:Variable x:TypeArguments="x:String" Name="Reply" />
            </p:Sequence.Variables>
            <sad1:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, s:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sad1:WorkflowViewStateService.ViewState>
            <Receive x:Name="__ReferenceID5" sad1:VirtualizedContainerService.HintSize="515.006666666667,85.2766666666667" OperationName="NextStep" ServiceContractName="IService">
              <ReceiveMessageContent>
                <p:OutArgument x:TypeArguments="x:Boolean">[IsCompressing]</p:OutArgument>
              </ReceiveMessageContent>
            </Receive>
            <p:If Condition="[IsCompressing = True]" sad1:VirtualizedContainerService.HintSize="515.006666666667,201.830677083333">
              <p:If.Then>
                <p:Assign sad1:VirtualizedContainerService.HintSize="244.003333333333,100">
                  <p:Assign.To>
                    <p:OutArgument x:TypeArguments="x:String">[Reply]</p:OutArgument>
                  </p:Assign.To>
                  <p:Assign.Value>
                    <p:InArgument x:TypeArguments="x:String">["Diagnosis complete: The compressor may have lost the coolant. Contact a qualified technician to refill."]</p:InArgument>
                  </p:Assign.Value>
                </p:Assign>
              </p:If.Then>
              <p:If.Else>
                <p:Assign sad1:VirtualizedContainerService.HintSize="244.003333333333,100">
                  <p:Assign.To>
                    <p:OutArgument x:TypeArguments="x:String">[Reply]</p:OutArgument>
                  </p:Assign.To>
                  <p:Assign.Value>
                    <p:InArgument x:TypeArguments="x:String">["Diagnosis complete: the compressor is failing to start. See a qualified technician to inspect the unit"]</p:InArgument>
                  </p:Assign.Value>
                </p:Assign>
              </p:If.Else>
            </p:If>
            <SendReply Request="{x:Reference __ReferenceID5}" DisplayName="SendReplyToReceive" sad1:VirtualizedContainerService.HintSize="515.006666666667,85.2766666666667">
              <SendMessageContent>
                <p:InArgument x:TypeArguments="x:String">[Reply]</p:InArgument>
              </SendMessageContent>
            </SendReply>
          </p:Sequence>
        </p:Sequence>
      </p:Parallel>
    </p:Sequence>
</WorkflowService>