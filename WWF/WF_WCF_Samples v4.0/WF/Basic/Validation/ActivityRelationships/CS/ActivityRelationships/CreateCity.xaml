<!-- Copyright (c) Microsoft Corporation.  All rights reserved. -->
<Activity mc:Ignorable="sap" x:Class="Microsoft.Samples.ContainmentValidation.CreateCity"
          mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces"
          xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System"
          xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"          
          xmlns:s="clr-namespace:System;assembly=mscorlib"
          xmlns:s1="clr-namespace:System;assembly=System"
          xmlns:s2="clr-namespace:System;assembly=System.Xml"
          xmlns:s3="clr-namespace:System;assembly=System.Core"
          xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities"
          xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
          xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System"
          xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel"
          xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.Core"
          xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=mscorlib"          
          xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
          xmlns:sd1="clr-namespace:System.Data;assembly=System.Data.DataSetExtensions"
          xmlns:sl="clr-namespace:System.Linq;assembly=System.Core"
          xmlns:st="clr-namespace:System.Text;assembly=mscorlib"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:my="clr-namespace:System.Activities.Statements;assembly=System.Activities"
          xmlns:q="clr-namespace:System.Activities.Validation;assembly=System.Activities"          
          xmlns:local="clr-namespace:Microsoft.Samples.ContainmentValidation;assembly=ContainmentValidation">
  <x:Members>
    <x:Property Name="Name" Type="InArgument(x:String)" />    
  </x:Members>
  <Activity.Constraints>
    <q:Constraint x:TypeArguments="local:CreateCity" DisplayName="CheckParent">
      <!--mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces"
      xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities">-->
      <ActivityAction x:TypeArguments="local:CreateCity, q:ValidationContext">        
        <ActivityAction.Argument2>
          <DelegateInArgument x:TypeArguments="q:ValidationContext" x:Name="context" /> <!--Maps to "DelegateInArgument<ValidationContext> context" in code-->
        </ActivityAction.Argument2>
        <Sequence>
          <Sequence.Variables>
            <x:Reference>result</x:Reference> <!--Mapst to "Variable<bool> result" in code-->
          </Sequence.Variables>
          <ForEach x:TypeArguments="Activity">
            <ForEach.Values>
              <InArgument x:TypeArguments="scg3:IEnumerable(Activity)">
                <InArgument.Expression>
                  <GetParentChain>
                    <GetParentChain.ValidationContext>
                      <InArgument x:TypeArguments="q:ValidationContext">
                        <InArgument.Expression>
                          <DelegateArgumentValue x:TypeArguments="q:ValidationContext">
                            <x:Reference>context</x:Reference>
                          </DelegateArgumentValue>
                        </InArgument.Expression>
                      </InArgument>
                    </GetParentChain.ValidationContext>
                  </GetParentChain>
                </InArgument.Expression>
              </InArgument>
            </ForEach.Values>
            <ActivityAction x:TypeArguments="Activity">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="Activity" Name="parent" /> <!--Maps to "DelegateInArgument<Activity> parent" in code-->
              </ActivityAction.Argument>
              <If Condition="[Object.Equals(parent.GetType(), GetType(CreateState))]">
                <If.Then>
                  <Assign x:TypeArguments="x:Boolean" Value="True" >                    
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <OutArgument.Expression>
                          <VariableReference x:TypeArguments="x:Boolean">
                            <VariableReference.Variable>
                              <Variable x:TypeArguments="x:Boolean" x:Name="result" />
                            </VariableReference.Variable>
                          </VariableReference>
                        </OutArgument.Expression>
                      </OutArgument>
                    </Assign.To>                    
                  </Assign>
                </If.Then>
              </If>
            </ActivityAction>
          </ForEach>
          <q:AssertValidation Message="CreateCity has to be inside a CreateState activity">
            <AssertValidation.Assertion>
              <InArgument x:TypeArguments="x:Boolean" >
                <InArgument.Expression>
                  <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference result}" />
                </InArgument.Expression>
              </InArgument>
            </AssertValidation.Assertion>
          </q:AssertValidation>
        </Sequence>
      </ActivityAction>
    </q:Constraint>
  </Activity.Constraints>
</Activity>

    
    