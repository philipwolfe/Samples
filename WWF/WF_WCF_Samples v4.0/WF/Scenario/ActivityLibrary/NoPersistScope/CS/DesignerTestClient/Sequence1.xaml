<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation. All rights reserved. -->
<Activity mc:Ignorable="sad" x:Class="Microsoft.Samples.Activities.Statements.Sequence1" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ms="clr-namespace:Microsoft.Samples.Activities.Statements;assembly=DesignerTestClient" xmlns:msas="clr-namespace:Microsoft.Samples.Activities.Statements;assembly=NoPersistScope" xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:mvc="clr-namespace:Microsoft.VisualBasic.CompilerServices;assembly=Microsoft.VisualBasic" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:s1="clr-namespace:System;assembly=System" xmlns:s2="clr-namespace:System;assembly=System.Xml" xmlns:s3="clr-namespace:System;assembly=System.Core" xmlns:sad="http://schemas.microsoft.com/netfx/2009/xaml/activities/design" xmlns:sad1="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data.DataSetExtensions" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Sequence sad:VirtualizedContainerService.HintSize="688,1166.561875">
    <sad:WorkflowViewStateService.ViewState>
      <scg3:Dictionary x:TypeArguments="x:String, s:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg3:Dictionary>
    </sad:WorkflowViewStateService.ViewState>
    <msas:NoPersistScope sad:VirtualizedContainerService.HintSize="642,1028.561875">
      <TryCatch sad:VirtualizedContainerService.HintSize="614,950.601875">
        <TryCatch.Variables>
          <Variable x:TypeArguments="si:TextWriter" Name="writer" />
        </TryCatch.Variables>
        <TryCatch.Finally>
          <ms:Dispose sad:VirtualizedContainerService.HintSize="400,100" Target="[writer]" />
        </TryCatch.Finally>
        <TryCatch.Try>
          <Sequence sad:VirtualizedContainerService.HintSize="586,733.761875">
            <sad:WorkflowViewStateService.ViewState>
              <scg3:Dictionary x:TypeArguments="x:String, s:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg3:Dictionary>
            </sad:WorkflowViewStateService.ViewState>
            <ms:CreateTextWriter Filename="out.txt" sad:VirtualizedContainerService.HintSize="540,24" Result="[writer]" />
            <While sad:VirtualizedContainerService.HintSize="540,531.761875">
              <While.Variables>
                <Variable x:TypeArguments="x:String" Name="input" />
              </While.Variables>
              <While.Condition>[input &lt;&gt; "exit"]</While.Condition>
              <Sequence sad:VirtualizedContainerService.HintSize="512,411.8809375">
                <sad:WorkflowViewStateService.ViewState>
                  <scg3:Dictionary x:TypeArguments="x:String, s:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg3:Dictionary>
                </sad:WorkflowViewStateService.ViewState>
                <If Condition="[input &lt;&gt; Nothing]" sad:VirtualizedContainerService.HintSize="466,209.8809375">
                  <If.Then>
                    <WriteLine sad:VirtualizedContainerService.HintSize="281.068333333333,100" Text="[&quot;Echo: &quot; + input]" TextWriter="[writer]" />
                  </If.Then>
                </If>
                <ms:ReadLine BookmarkName="inputBookmark" sad:VirtualizedContainerService.HintSize="466,24" Result="[input]" />
              </Sequence>
            </While>
          </Sequence>
        </TryCatch.Try>
      </TryCatch>
    </msas:NoPersistScope>
  </Sequence>
</Activity>